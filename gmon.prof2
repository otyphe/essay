Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 80.95    672.73   672.73                             _mcount_private
 11.03    764.44    91.71                             __fentry__
  0.29    766.87     2.43 1210000121     0.00     0.00  std::less<int>::operator()(int const&, int const&) const
  0.26    769.05     2.18 1600000160     0.00     0.00  std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_valptr() const
  0.26    771.18     2.13 1600000160     0.00     0.00  std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_S_key(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const*)
  0.25    773.22     2.04 200000020     0.00     0.00  std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_lower_bound(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*, std::_Rb_tree_node_base*, int const&)
  0.21    774.95     1.73 1600000160     0.00     0.00  __gnu_cxx::__aligned_membuf<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_ptr() const
  0.20    776.60     1.65 1200000120     0.00     0.00  std::tuple_element<0ul, std::tuple<SampleStruct*, std::default_delete<SampleStruct> > >::type& std::get<0ul, SampleStruct*, std::default_delete<SampleStruct> >(std::tuple<SampleStruct*, std::default_delete<SampleStruct> >&)
  0.20    778.25     1.65 200000020     0.00     0.00  std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::operator[](int const&)
  0.19    779.84     1.59 1200000120     0.00     0.00  std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::_M_ptr()
  0.19    781.43     1.59 1200000120     0.00     0.00  SampleStruct*& std::__get_helper<0ul, SampleStruct*, std::default_delete<SampleStruct> >(std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >&)
  0.15    782.71     1.28 1600000160     0.00     0.00  __gnu_cxx::__aligned_membuf<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_addr() const
  0.15    783.97     1.26 200000020     0.00     0.00  std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&)
  0.15    785.18     1.21 200000020     0.00     0.00  void std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_construct_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&)
  0.13    786.30     1.12 200000020     0.00     0.00  std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_insert_node(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*)
  0.13    787.42     1.12 200000020     0.00     0.00  std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, int const&)
  0.13    788.53     1.11 1200000120     0.00     0.00  std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >::_M_head(std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >&)
  0.13    789.61     1.08 10000001     0.00     0.00  Target<SampleStruct, CIf>::Target(AIf const&, BIf const&, CIf const&)
  0.13    790.66     1.05 1200000120     0.00     0.00  std::_Head_base<0ul, SampleStruct*, false>::_M_head(std::_Head_base<0ul, SampleStruct*, false>&)
  0.11    791.56     0.90 200000020     0.00     0.00  std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >* std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_create_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&)
  0.11    792.45     0.89 1600000160     0.00     0.00  std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::operator()(std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > const&) const
  0.11    793.33     0.88 200000020     0.00     0.00  void std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > > >::construct<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >&, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&)
  0.10    794.16     0.83 820000084     0.00     0.00  std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_Rb_tree_iterator(std::_Rb_tree_node_base*)
  0.10    794.98     0.82 1000000100     0.00     0.00  std::tuple<int const&>&& std::forward<std::tuple<int const&> >(std::remove_reference<std::tuple<int const&> >::type&)
  0.10    795.80     0.82 200000020     0.00     0.00  void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::construct<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&)
  0.10    796.59     0.79 1000000100     0.00     0.00  std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&)
  0.09    797.36     0.77 200000020     0.00     0.00  std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >::operator=(std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >&&)
  0.08    798.06     0.70 200000020     0.00     0.00  std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >::pair<int const&, 0ul>(std::tuple<int const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>)
  0.08    798.75     0.69 830000083     0.00     0.00  std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_S_right(std::_Rb_tree_node_base*)
  0.08    799.43     0.68 400000040     0.00     0.00  std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >::_Tuple_impl()
  0.08    800.07     0.64 1000000100     0.00     0.00  std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&)
  0.08    800.70     0.63 200000020     0.00     0.00  std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::lower_bound(int const&)
  0.07    801.31     0.61 400000040     0.00     0.00  std::default_delete<SampleStruct>& std::__get_helper<1ul, std::default_delete<SampleStruct>>(std::_Tuple_impl<1ul, std::default_delete<SampleStruct>>&)
  0.06    801.85     0.54 400000040     0.00     0.00  std::_Tuple_impl<0ul, int const&>::_M_head(std::_Tuple_impl<0ul, int const&>&)
  0.06    802.37     0.52 400000040     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<SampleStruct> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<SampleStruct> >&)
  0.06    802.89     0.52 200000020     0.00     0.00  std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::lower_bound(int const&)
  0.06    803.40     0.51 400000040     0.00     0.00  std::_Head_base<0ul, int const&, false>::_Head_base(int const&)
  0.06    803.89     0.49 400000040     0.00     0.00  std::tuple_element<1ul, std::tuple<SampleStruct*, std::default_delete<SampleStruct> > >::type& std::get<1ul, SampleStruct*, std::default_delete<SampleStruct> >(std::tuple<SampleStruct*, std::default_delete<SampleStruct> >&)
  0.06    804.38     0.49 200000020     0.00     0.00  __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::allocate(unsigned long, void const*)
  0.06    804.87     0.49 200000020     0.00     0.00  std::_Tuple_impl<0ul, int const&>::_Tuple_impl(std::_Tuple_impl<0ul, int const&>&&)
  0.06    805.35     0.48                             operator new(unsigned long)
  0.05    805.80     0.45 400000040     0.00     0.00  std::_Head_base<0ul, int const&, false>::_M_head(std::_Head_base<0ul, int const&, false>&)
  0.05    806.24     0.44 200000021     0.00     0.00  std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::end()
  0.05    806.67     0.43 400000040     0.00     0.00  __gnu_cxx::__aligned_membuf<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_ptr()
  0.05    807.10     0.43 400000040     0.00     0.00  std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_valptr()
  0.05    807.53     0.43 200000020     0.00     0.00  std::__uniq_ptr_data<SampleStruct, std::default_delete<SampleStruct>, true, true>::operator=(std::__uniq_ptr_data<SampleStruct, std::default_delete<SampleStruct>, true, true>&&)
  0.05    807.96     0.43 200000020     0.00     0.00  std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >::pair<int const&>(std::piecewise_construct_t, std::tuple<int const&>, std::tuple<>)
  0.05    808.38     0.42 200000020     0.00     0.00  std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >::~unique_ptr()
  0.05    808.79     0.41 400000051     0.00     0.00  operator new(unsigned long, void*)
  0.05    809.19     0.40 400000040     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<SampleStruct> >::_Tuple_impl()
  0.05    809.58     0.39 400000040     0.00     0.00  std::tuple<SampleStruct*, std::default_delete<SampleStruct> >::tuple<true, true>()
  0.05    809.97     0.39 380000038     0.00     0.00  std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_rightmost()
  0.05    810.36     0.39 200000020     0.00     0.00  std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_const_cast() const
  0.05    810.75     0.39 200000020     0.00     0.00  std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::reset(SampleStruct*)
  0.05    811.13     0.38 610000061     0.00     0.00  std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_end()
  0.05    811.51     0.38 200000020     0.00     0.00  std::tuple<int const&>::tuple(std::tuple<int const&>&&)
  0.04    811.88     0.37 200000020     0.00     0.00  std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >::unique_ptr<std::default_delete<SampleStruct>, void>(SampleStruct*)
  0.04    812.25     0.37 200000020     0.00     0.00  std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >::unique_ptr<std::default_delete<SampleStruct>, void>()
  0.04    812.61     0.36 200000020     0.00     0.00  std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::__uniq_ptr_impl()
  0.04    812.97     0.36 190000019     0.00     0.00  std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*>::pair<std::_Rb_tree_node_base*&, true>(std::_Rb_tree_node_base* const&, std::_Rb_tree_node_base*&)
  0.04    813.30     0.33 200000020     0.00     0.00  std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::operator*() const
  0.04    813.63     0.33 200000020     0.00     0.00  std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::__uniq_ptr_impl(SampleStruct*)
  0.04    813.96     0.33 200000020     0.00     0.00  std::tuple<int const&>::tuple<true, true>(int const&)
  0.04    814.28     0.32 200000020     0.00     0.00  SampleStruct::SampleStruct(int)
  0.04    814.59     0.31 400000040     0.00     0.00  __gnu_cxx::__aligned_membuf<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_addr()
  0.04    814.89     0.30 400000040     0.00     0.00  int const& std::forward<int const&>(std::remove_reference<int const&>::type&)
  0.04    815.19     0.30 380000038     0.00     0.00  std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_S_key(std::_Rb_tree_node_base const*)
  0.04    815.49     0.30 210000021     0.00     0.00  std::operator==(std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&, std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&)
  0.04    815.79     0.30 200000020     0.00     0.00  std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::release()
  0.03    816.08     0.29 210000021     0.00     0.00  std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_mbegin() const
  0.03    816.36     0.28 400000040     0.00     0.00  std::_Head_base<1ul, std::default_delete<SampleStruct>, true>::_Head_base()
  0.03    816.64     0.28 200000020     0.00     0.00  std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::operator=(std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >&&)
  0.03    816.92     0.28 200000020     0.00     0.00  int const& std::__get_helper<0ul, int const&>(std::_Tuple_impl<0ul, int const&>&)
  0.03    817.19     0.27 400000040     0.00     0.00  std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::_M_deleter()
  0.03    817.46     0.27 200000020     0.00     0.00  std::_Tuple_impl<0ul, int const&>::_Tuple_impl(int const&)
  0.03    817.73     0.27 200000020     0.00     0.00  std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_node()
  0.03    817.98     0.25 200000020     0.00     0.00  std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::size() const
  0.03    818.23     0.25 200000020     0.00     0.00  std::tuple_element<0ul, std::tuple<int const&> >::type& std::get<0ul, int const&>(std::tuple<int const&>&)
  0.03    818.47     0.24 210000021     0.00     0.00  std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_begin()
  0.03    818.70     0.23 200000020     0.00     0.00  __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_max_size() const
  0.03    818.93     0.23 200000020     0.00     0.00  std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >&, unsigned long)
  0.03    819.14     0.21 200000020     0.00     0.00  std::__uniq_ptr_data<SampleStruct, std::default_delete<SampleStruct>, true, true>::__uniq_ptr_impl()
  0.03    819.35     0.21 200000020     0.00     0.00  std::default_delete<SampleStruct>&& std::forward<std::default_delete<SampleStruct> >(std::remove_reference<std::default_delete<SampleStruct> >::type&)
  0.02    819.55     0.20 400000040     0.00     0.00  std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_Node_allocator()
  0.02    819.74     0.19 400000040     0.00     0.00  std::_Head_base<0ul, SampleStruct*, false>::_Head_base()
  0.02    819.93     0.19 400000040     0.00     0.00  std::_Head_base<1ul, std::default_delete<SampleStruct>, true>::_M_head(std::_Head_base<1ul, std::default_delete<SampleStruct>, true>&)
  0.02    820.12     0.19        1     0.19    65.91  SampleTest_RealSample1_Test::TestBody()
  0.02    820.29     0.17 200000020     0.00     0.00  std::_Rb_tree_node_base*& std::forward<std::_Rb_tree_node_base*&>(std::remove_reference<std::_Rb_tree_node_base*&>::type&)
  0.02    820.46     0.17 10000001     0.00     0.00  TargetEntity<SampleStruct, CIf>::Impl::Impl(AIf const&, BIf const&, CIf const&)
  0.02    820.62     0.16 200000020     0.00     0.00  std::__uniq_ptr_data<SampleStruct, std::default_delete<SampleStruct>, true, true>::__uniq_ptr_impl(SampleStruct*)
  0.02    820.77     0.15 30000006     0.00     0.00  std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::_M_ptr()
  0.02    820.91     0.14 200000021     0.00     0.00  std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::end()
  0.02    821.05     0.14 200000020     0.00     0.00  std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_Rb_tree_const_iterator(std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&)
  0.02    821.19     0.14 50000010     0.00     0.00  std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_M_head(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&)
  0.02    821.33     0.14 10000002     0.00     0.00  AIf::instantiate(int)
  0.02    821.47     0.14 10000001     0.00     0.00  TargetIf<SampleStruct, CIf>::instantiate(AIf const&, BIf const&, CIf const&)
  0.02    821.60     0.13 10000002     0.00     0.00  std::__uniq_ptr_impl<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::reset(TargetEntity<SampleStruct, CIf>::Impl*)
  0.02    821.73     0.13 10000001     0.00     0.00  std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_unique_pos(int const&)
  0.01    821.85     0.12 200000020     0.00     0.00  std::remove_reference<std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >&>::type&& std::move<std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >&>(std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >&)
  0.01    821.97     0.12 40000008     0.00     0.00  std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::_M_ptr()
  0.01    822.08     0.11 10000002     0.00     0.00  std::default_delete<BIf>::operator()(BIf*) const
  0.01    822.18     0.10 30000006     0.00     0.00  std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >::_M_head(std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >&)
  0.01    822.28     0.10 30000006     0.00     0.00  AEntity::Impl*& std::__get_helper<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >&)
  0.01    822.38     0.10 10000002     0.00     0.00  std::default_delete<CEntity::Impl>::operator()(CEntity::Impl*) const
  0.01    822.48     0.10                             __wrap__Znwm
  0.01    822.57     0.09 40000010     0.00     0.00  std::tuple_element<0ul, std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > >::type& std::get<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&)
  0.01    822.66     0.09 40000008     0.00     0.00  std::tuple_element<0ul, std::tuple<BIf*, std::default_delete<BIf> > >::type& std::get<0ul, BIf*, std::default_delete<BIf> >(std::tuple<BIf*, std::default_delete<BIf> >&)
  0.01    822.75     0.09 30000006     0.00     0.00  std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >::_M_head(std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >&)
  0.01    822.84     0.09 10000003     0.00     0.00  std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::unique_ptr<std::default_delete<TargetIf<SampleStruct, CIf> >, void>(TargetIf<SampleStruct, CIf>*)
  0.01    822.92     0.08 50000012     0.00     0.00  std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&)
  0.01    823.00     0.08 40000010     0.00     0.00  TargetIf<SampleStruct, CIf>*& std::__get_helper<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&)
  0.01    823.08     0.08 40000008     0.00     0.00  BIf*& std::__get_helper<0ul, BIf*, std::default_delete<BIf> >(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&)
  0.01    823.16     0.08 30000006     0.00     0.00  std::_Tuple_impl<0ul, C*, std::default_delete<C> >::_M_head(std::_Tuple_impl<0ul, C*, std::default_delete<C> >&)
  0.01    823.24     0.08 30000006     0.00     0.00  C*& std::__get_helper<0ul, C*, std::default_delete<C> >(std::_Tuple_impl<0ul, C*, std::default_delete<C> >&)
  0.01    823.32     0.08 30000006     0.00     0.00  CEntity::Impl*& std::__get_helper<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >(std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >&)
  0.01    823.40     0.08 20000005     0.00     0.00  std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::~unique_ptr()
  0.01    823.48     0.08 20000004     0.00     0.00  std::remove_reference<CEntity::Impl*&>::type&& std::move<CEntity::Impl*&>(CEntity::Impl*&)
  0.01    823.56     0.08 10000002     0.00     0.00  BIf::instantiate()
  0.01    823.64     0.08 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<AEntity::Impl>, true>::_M_head(std::_Head_base<1ul, std::default_delete<AEntity::Impl>, true>&)
  0.01    823.72     0.08 10000002     0.00     0.00  std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::reset(AEntity::Impl*)
  0.01    823.80     0.08 10000002     0.00     0.00  std::remove_reference<std::unique_ptr<AIf, std::default_delete<AIf> >&>::type&& std::move<std::unique_ptr<AIf, std::default_delete<AIf> >&>(std::unique_ptr<AIf, std::default_delete<AIf> >&)
  0.01    823.88     0.08                             std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
  0.01    823.95     0.07 50000010     0.00     0.00  std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_M_head(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&)
  0.01    824.02     0.07 40000008     0.00     0.00  AIf*& std::__get_helper<0ul, AIf*, std::default_delete<AIf> >(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&)
  0.01    824.09     0.07 10000002     0.00     0.00  std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::reset(CEntity::Impl*)
  0.01    824.16     0.07 10000001     0.00     0.00  TargetEntity<SampleStruct, CIf>::TargetEntity(AIf const&, BIf const&, CIf const&)
  0.01    824.22     0.06 30000006     0.00     0.00  std::_Head_base<0ul, AEntity::Impl*, false>::_M_head(std::_Head_base<0ul, AEntity::Impl*, false>&)
  0.01    824.28     0.06 30000006     0.00     0.00  std::__uniq_ptr_impl<B, std::default_delete<B> >::_M_ptr()
  0.01    824.34     0.06 20000004     0.00     0.00  std::_Head_base<1ul, std::default_delete<AIf>, true>::_M_head(std::_Head_base<1ul, std::default_delete<AIf>, true>&)
  0.01    824.40     0.06 20000004     0.00     0.00  std::unique_ptr<AIf, std::default_delete<AIf> >::~unique_ptr()
  0.01    824.46     0.06 20000004     0.00     0.00  std::tuple_element<0ul, std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > >::type& std::get<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >(std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >&)
  0.01    824.52     0.06 10000003     0.00     0.00  std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_deleter()
  0.01    824.58     0.06 10000002     0.00     0.00  CIf::instantiate(int)
  0.01    824.64     0.06 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<CIf>, true>::_Head_base<std::default_delete<CIf> >(std::default_delete<CIf>&&)
  0.01    824.70     0.06 10000002     0.00     0.00  std::unique_ptr<A, std::default_delete<A> >::reset(A*)
  0.01    824.76     0.06 10000002     0.00     0.00  std::unique_ptr<B, std::default_delete<B> >::~unique_ptr()
  0.01    824.82     0.06 10000002     0.00     0.00  std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::unique_ptr<std::default_delete<Target<SampleStruct, CIf> >, void>()
  0.01    824.88     0.06 10000002     0.00     0.00  std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::~unique_ptr()
  0.01    824.94     0.06 10000002     0.00     0.00  std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::reset(CEntity::Impl*)
  0.01    825.00     0.06 10000002     0.00     0.00  std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >::_Tuple_impl()
  0.01    825.06     0.06 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<AIf> >::_Tuple_impl()
  0.01    825.12     0.06 10000002     0.00     0.00  std::__uniq_ptr_impl<C, std::default_delete<C> >::_M_deleter()
  0.01    825.18     0.06 10000002     0.00     0.00  std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::__uniq_ptr_impl(BIf*)
  0.01    825.24     0.06 10000002     0.00     0.00  std::__uniq_ptr_impl<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::reset(Target<SampleStruct, CIf>*)
  0.01    825.30     0.06 10000002     0.00     0.00  std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::_M_deleter()
  0.01    825.36     0.06 10000002     0.00     0.00  std::tuple_element<1ul, std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> > >::type& std::get<1ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >(std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> >&)
  0.01    825.41     0.05 50000010     0.00     0.00  std::_Head_base<0ul, AIf*, false>::_M_head(std::_Head_base<0ul, AIf*, false>&)
  0.01    825.46     0.05 40000008     0.00     0.00  CIf*& std::__get_helper<0ul, CIf*, std::default_delete<CIf> >(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&)
  0.01    825.51     0.05 30000006     0.00     0.00  std::_Tuple_impl<0ul, A*, std::default_delete<A> >::_M_head(std::_Tuple_impl<0ul, A*, std::default_delete<A> >&)
  0.01    825.56     0.05 30000006     0.00     0.00  std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >::_M_head(std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >&)
  0.01    825.61     0.05 20000004     0.00     0.00  std::tuple_element<0ul, std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > >::type& std::get<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >(std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >&)
  0.01    825.66     0.05 10000002     0.00     0.00  AEntity::AEntity(int)
  0.01    825.71     0.05 10000002     0.00     0.00  std::default_delete<CIf>::operator()(CIf*) const
  0.01    825.76     0.05 10000002     0.00     0.00  std::unique_ptr<BIf, std::default_delete<BIf> >::unique_ptr(std::unique_ptr<BIf, std::default_delete<BIf> >&&)
  0.01    825.81     0.05 10000002     0.00     0.00  std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::reset(Target<SampleStruct, CIf>*)
  0.01    825.86     0.05 10000002     0.00     0.00  std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::reset(TargetEntity<SampleStruct, CIf>::Impl*)
  0.01    825.91     0.05 10000002     0.00     0.00  std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::~unique_ptr()
  0.01    825.96     0.05 10000002     0.00     0.00  std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::~unique_ptr()
  0.01    826.01     0.05 10000002     0.00     0.00  std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_Tuple_impl(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&&)
  0.01    826.06     0.05 10000002     0.00     0.00  std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&&)
  0.01    826.11     0.05 10000002     0.00     0.00  std::__uniq_ptr_impl<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::__uniq_ptr_impl()
  0.00    826.15     0.04 50000010     0.00     0.00  std::_Head_base<0ul, CIf*, false>::_M_head(std::_Head_base<0ul, CIf*, false>&)
  0.00    826.19     0.04 40000010     0.00     0.00  std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_ptr()
  0.00    826.23     0.04 40000008     0.00     0.00  std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::_M_ptr()
  0.00    826.27     0.04 40000008     0.00     0.00  std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::_M_ptr()
  0.00    826.31     0.04 40000008     0.00     0.00  std::tuple_element<0ul, std::tuple<AIf*, std::default_delete<AIf> > >::type& std::get<0ul, AIf*, std::default_delete<AIf> >(std::tuple<AIf*, std::default_delete<AIf> >&)
  0.00    826.35     0.04 30000006     0.00     0.00  std::_Head_base<0ul, B*, false>::_M_head(std::_Head_base<0ul, B*, false>&)
  0.00    826.39     0.04 30000006     0.00     0.00  std::_Head_base<0ul, CEntity::Impl*, false>::_M_head(std::_Head_base<0ul, CEntity::Impl*, false>&)
  0.00    826.43     0.04 30000006     0.00     0.00  std::_Tuple_impl<0ul, B*, std::default_delete<B> >::_M_head(std::_Tuple_impl<0ul, B*, std::default_delete<B> >&)
  0.00    826.47     0.04 30000006     0.00     0.00  BEntity::Impl*& std::__get_helper<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >(std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >&)
  0.00    826.51     0.04 30000006     0.00     0.00  std::tuple_element<0ul, std::tuple<B*, std::default_delete<B> > >::type& std::get<0ul, B*, std::default_delete<B> >(std::tuple<B*, std::default_delete<B> >&)
  0.00    826.55     0.04 30000006     0.00     0.00  std::tuple_element<0ul, std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> > >::type& std::get<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >(std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> >&)
  0.00    826.59     0.04 20000005     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&)
  0.00    826.63     0.04 20000004     0.00     0.00  Target<SampleStruct, CIf>*& std::__get_helper<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >(std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >&)
  0.00    826.67     0.04 20000004     0.00     0.00  std::remove_reference<A*&>::type&& std::move<A*&>(A*&)
  0.00    826.71     0.04 20000004     0.00     0.00  std::remove_reference<AEntity::Impl*&>::type&& std::move<AEntity::Impl*&>(AEntity::Impl*&)
  0.00    826.75     0.04 20000004     0.00     0.00  std::default_delete<BIf>&& std::forward<std::default_delete<BIf> >(std::remove_reference<std::default_delete<BIf> >::type&)
  0.00    826.79     0.04 20000004     0.00     0.00  std::default_delete<TargetIf<SampleStruct, CIf> >&& std::forward<std::default_delete<TargetIf<SampleStruct, CIf> > >(std::remove_reference<std::default_delete<TargetIf<SampleStruct, CIf> > >::type&)
  0.00    826.83     0.04 10000003     0.00     0.00  std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::__uniq_ptr_impl(TargetIf<SampleStruct, CIf>*)
  0.00    826.87     0.04 10000003     0.00     0.00  std::default_delete<TargetIf<SampleStruct, CIf> >& std::__get_helper<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >>(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >>&)
  0.00    826.91     0.04 10000002     0.00     0.00  AEntity::~AEntity()
  0.00    826.95     0.04 10000002     0.00     0.00  BEntity::Impl::Impl()
  0.00    826.99     0.04 10000002     0.00     0.00  std::unique_ptr<CIf, std::default_delete<CIf> >::operator*() const
  0.00    827.03     0.04 10000002     0.00     0.00  std::_Head_base<0ul, AIf*, false>::_Head_base<AIf*>(AIf*&&)
  0.00    827.07     0.04 10000002     0.00     0.00  std::_Head_base<0ul, CIf*, false>::_M_head(std::_Head_base<0ul, CIf*, false> const&)
  0.00    827.11     0.04 10000002     0.00     0.00  std::unique_ptr<A, std::default_delete<A> >::unique_ptr<std::default_delete<A>, void>()
  0.00    827.15     0.04 10000002     0.00     0.00  std::unique_ptr<B, std::default_delete<B> >::reset(B*)
  0.00    827.19     0.04 10000002     0.00     0.00  std::unique_ptr<C, std::default_delete<C> >::get_deleter()
  0.00    827.23     0.04 10000002     0.00     0.00  std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::unique_ptr<std::default_delete<TargetEntity<SampleStruct, CIf>::Impl>, void>()
  0.00    827.27     0.04 10000002     0.00     0.00  std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::get_deleter()
  0.00    827.31     0.04 10000002     0.00     0.00  std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::unique_ptr<std::default_delete<AEntity::Impl>, void>()
  0.00    827.35     0.04 10000002     0.00     0.00  std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::get_deleter()
  0.00    827.39     0.04 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<C> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<C> >&)
  0.00    827.43     0.04 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&&)
  0.00    827.47     0.04 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<AEntity::Impl> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<AEntity::Impl> >&)
  0.00    827.51     0.04 10000002     0.00     0.00  std::__uniq_ptr_data<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> >, true, true>::__uniq_ptr_impl()
  0.00    827.55     0.04 10000002     0.00     0.00  std::__uniq_ptr_data<BEntity::Impl, std::default_delete<BEntity::Impl>, true, true>::__uniq_ptr_impl()
  0.00    827.59     0.04 10000002     0.00     0.00  std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >&&)
  0.00    827.63     0.04 10000002     0.00     0.00  std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::__uniq_ptr_impl(std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&&)
  0.00    827.67     0.04 10000002     0.00     0.00  std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::__uniq_ptr_impl()
  0.00    827.71     0.04 10000002     0.00     0.00  std::tuple<AIf*, std::default_delete<AIf> >::tuple(std::tuple<AIf*, std::default_delete<AIf> >&&)
  0.00    827.75     0.04 10000002     0.00     0.00  std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> >::tuple<true, true>()
  0.00    827.79     0.04 10000002     0.00     0.00  std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_Rb_tree_impl<std::less<int>, true>::_Rb_tree_impl()
  0.00    827.83     0.04 10000002     0.00     0.00  CIf* const& std::__get_helper<0ul, CIf*, std::default_delete<CIf> >(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> > const&)
  0.00    827.87     0.04 10000002     0.00     0.00  std::tuple_element<1ul, std::tuple<A*, std::default_delete<A> > >::type& std::get<1ul, A*, std::default_delete<A> >(std::tuple<A*, std::default_delete<A> >&)
  0.00    827.91     0.04 10000002     0.00     0.00  std::tuple_element<1ul, std::tuple<C*, std::default_delete<C> > >::type& std::get<1ul, C*, std::default_delete<C> >(std::tuple<C*, std::default_delete<C> >&)
  0.00    827.95     0.04 10000002     0.00     0.00  std::remove_reference<std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&>::type&& std::move<std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&>(std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&)
  0.00    827.99     0.04 10000002     0.00     0.00  std::remove_reference<std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&>::type&& std::move<std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&>(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&)
  0.00    828.03     0.04                             SampleStruct::falsifyIdent() const
  0.00    828.07     0.04                             operator delete(void*)
  0.00    828.10     0.03 20000004     0.00     0.00  std::_Head_base<1ul, std::default_delete<CIf>, true>::_M_head(std::_Head_base<1ul, std::default_delete<CIf>, true>&)
  0.00    828.13     0.03 20000004     0.00     0.00  std::unique_ptr<CIf, std::default_delete<CIf> >::~unique_ptr()
  0.00    828.16     0.03 10000002     0.00     0.00  AIf::~AIf()
  0.00    828.19     0.03 10000002     0.00     0.00  BEntity::Impl::~Impl()
  0.00    828.22     0.03 10000002     0.00     0.00  std::default_delete<AIf>::operator()(AIf*) const
  0.00    828.25     0.03 10000002     0.00     0.00  std::default_delete<AEntity::Impl>::operator()(AEntity::Impl*) const
  0.00    828.28     0.03 10000002     0.00     0.00  std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::_M_ptr() const
  0.00    828.31     0.03 10000002     0.00     0.00  std::_Head_base<0ul, C*, false>::_Head_base()
  0.00    828.34     0.03 10000002     0.00     0.00  std::_Head_base<0ul, BIf*, false>::_Head_base()
  0.00    828.37     0.03 10000002     0.00     0.00  std::_Head_base<0ul, CIf*, false>::_Head_base<CIf*>(CIf*&&)
  0.00    828.40     0.03 10000002     0.00     0.00  std::_Head_base<0ul, Target<SampleStruct, CIf>*, false>::_Head_base()
  0.00    828.43     0.03 10000002     0.00     0.00  std::_Head_base<0ul, TargetEntity<SampleStruct, CIf>::Impl*, false>::_Head_base()
  0.00    828.46     0.03 10000002     0.00     0.00  std::_Head_base<0ul, AEntity::Impl*, false>::_Head_base()
  0.00    828.49     0.03 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<B>, true>::_M_head(std::_Head_base<1ul, std::default_delete<B>, true>&)
  0.00    828.52     0.03 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl>, true>::_Head_base()
  0.00    828.55     0.03 10000002     0.00     0.00  std::unique_ptr<A, std::default_delete<A> >::get_deleter()
  0.00    828.58     0.03 10000002     0.00     0.00  std::unique_ptr<CIf, std::default_delete<CIf> >::unique_ptr(std::unique_ptr<CIf, std::default_delete<CIf> >&&)
  0.00    828.61     0.03 10000002     0.00     0.00  std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::unique_ptr(std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&&)
  0.00    828.64     0.03 10000002     0.00     0.00  std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::reset(BEntity::Impl*)
  0.00    828.67     0.03 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<CIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<CIf> >&&)
  0.00    828.70     0.03 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<BEntity::Impl> >::_Tuple_impl()
  0.00    828.73     0.03 10000002     0.00     0.00  std::__uniq_ptr_data<BIf, std::default_delete<BIf>, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<BIf, std::default_delete<BIf>, true, true>&&)
  0.00    828.76     0.03 10000002     0.00     0.00  std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::__uniq_ptr_impl()
  0.00    828.79     0.03 10000002     0.00     0.00  std::tuple_element<1ul, std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> > >::type& std::get<1ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >(std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> >&)
  0.00    828.82     0.03 10000002     0.00     0.00  std::remove_reference<BIf*&>::type&& std::move<BIf*&>(BIf*&)
  0.00    828.85     0.03 10000002     0.00     0.00  std::remove_reference<Target<SampleStruct, CIf>*&>::type&& std::move<Target<SampleStruct, CIf>*&>(Target<SampleStruct, CIf>*&)
  0.00    828.88     0.03 10000001     0.00     0.00  std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*>::pair<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*&, std::_Rb_tree_node_base*&, true>(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*&, std::_Rb_tree_node_base*&)
  0.00    828.90     0.02 50000012     0.00     0.00  std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>::_M_head(std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>&)
  0.00    828.92     0.02 50000010     0.00     0.00  std::_Head_base<0ul, BIf*, false>::_M_head(std::_Head_base<0ul, BIf*, false>&)
  0.00    828.94     0.02 50000010     0.00     0.00  std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_M_head(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&)
  0.00    828.96     0.02 40000008     0.00     0.00  std::tuple_element<0ul, std::tuple<CIf*, std::default_delete<CIf> > >::type& std::get<0ul, CIf*, std::default_delete<CIf> >(std::tuple<CIf*, std::default_delete<CIf> >&)
  0.00    828.98     0.02 30000006     0.00     0.00  std::__uniq_ptr_impl<A, std::default_delete<A> >::_M_ptr()
  0.00    829.00     0.02 30000006     0.00     0.00  std::__uniq_ptr_impl<C, std::default_delete<C> >::_M_ptr()
  0.00    829.02     0.02 30000006     0.00     0.00  std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::_M_ptr()
  0.00    829.04     0.02 30000006     0.00     0.00  std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::_M_ptr()
  0.00    829.06     0.02 30000006     0.00     0.00  B*& std::__get_helper<0ul, B*, std::default_delete<B> >(std::_Tuple_impl<0ul, B*, std::default_delete<B> >&)
  0.00    829.08     0.02 30000006     0.00     0.00  std::tuple_element<0ul, std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> > >::type& std::get<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> >&)
  0.00    829.10     0.02 30000006     0.00     0.00  std::tuple_element<0ul, std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> > >::type& std::get<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >(std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> >&)
  0.00    829.12     0.02 20000005     0.00     0.00  std::_Head_base<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >, true>::_M_head(std::_Head_base<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >, true>&)
  0.00    829.14     0.02 20000004     0.00     0.00  std::unique_ptr<BIf, std::default_delete<BIf> >::~unique_ptr()
  0.00    829.16     0.02 20000004     0.00     0.00  std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >&)
  0.00    829.18     0.02 20000004     0.00     0.00  std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_M_head(std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >&)
  0.00    829.20     0.02 20000004     0.00     0.00  std::__uniq_ptr_impl<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::_M_ptr()
  0.00    829.22     0.02 20000004     0.00     0.00  std::__uniq_ptr_impl<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_M_ptr()
  0.00    829.24     0.02 20000004     0.00     0.00  TargetEntity<SampleStruct, CIf>::Impl*& std::__get_helper<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >(std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >&)
  0.00    829.26     0.02 20000004     0.00     0.00  std::remove_reference<B*&>::type&& std::move<B*&>(B*&)
  0.00    829.28     0.02 20000004     0.00     0.00  std::remove_reference<C*&>::type&& std::move<C*&>(C*&)
  0.00    829.30     0.02 20000004     0.00     0.00  std::remove_reference<BEntity::Impl*&>::type&& std::move<BEntity::Impl*&>(BEntity::Impl*&)
  0.00    829.32     0.02 20000004     0.00     0.00  AIf*&& std::forward<AIf*>(std::remove_reference<AIf*>::type&)
  0.00    829.34     0.02 10000004     0.00     0.00  std::_Rb_tree_header::_M_reset()
  0.00    829.36     0.02 10000003     0.00     0.00  std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl()
  0.00    829.38     0.02 10000003     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl()
  0.00    829.40     0.02 10000003     0.00     0.00  std::__uniq_ptr_data<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> >, true, true>::__uniq_ptr_impl(TargetIf<SampleStruct, CIf>*)
  0.00    829.42     0.02 10000003     0.00     0.00  std::remove_reference<TargetIf<SampleStruct, CIf>*&>::type&& std::move<TargetIf<SampleStruct, CIf>*&>(TargetIf<SampleStruct, CIf>*&)
  0.00    829.44     0.02 10000002     0.00     0.00  A::A(int)
  0.00    829.46     0.02 10000002     0.00     0.00  BIf::BIf()
  0.00    829.48     0.02 10000002     0.00     0.00  BIf::~BIf()
  0.00    829.50     0.02 10000002     0.00     0.00  AEntity::Impl::Impl(int)
  0.00    829.52     0.02 10000002     0.00     0.00  AEntity::Impl::~Impl()
  0.00    829.54     0.02 10000002     0.00     0.00  BEntity::BEntity()
  0.00    829.56     0.02 10000002     0.00     0.00  BEntity::~BEntity()
  0.00    829.58     0.02 10000002     0.00     0.00  CEntity::Impl::Impl(int)
  0.00    829.60     0.02 10000002     0.00     0.00  std::unique_ptr<AIf, std::default_delete<AIf> >::get() const
  0.00    829.62     0.02 10000002     0.00     0.00  std::unique_ptr<BIf, std::default_delete<BIf> >::operator*() const
  0.00    829.64     0.02 10000002     0.00     0.00  std::default_delete<A>::operator()(A*) const
  0.00    829.66     0.02 10000002     0.00     0.00  std::default_delete<C>::operator()(C*) const
  0.00    829.68     0.02 10000002     0.00     0.00  std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::_M_ptr() const
  0.00    829.70     0.02 10000002     0.00     0.00  std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::allocator()
  0.00    829.72     0.02 10000002     0.00     0.00  std::_Head_base<0ul, BIf*, false>::_Head_base<BIf*>(BIf*&&)
  0.00    829.74     0.02 10000002     0.00     0.00  std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>::_Head_base<TargetIf<SampleStruct, CIf>*>(TargetIf<SampleStruct, CIf>*&&)
  0.00    829.76     0.02 10000002     0.00     0.00  std::_Head_base<0ul, BEntity::Impl*, false>::_Head_base()
  0.00    829.78     0.02 10000002     0.00     0.00  std::_Head_base<0ul, CEntity::Impl*, false>::_Head_base()
  0.00    829.80     0.02 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<AIf>, true>::_Head_base<std::default_delete<AIf> >(std::default_delete<AIf>&&)
  0.00    829.82     0.02 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<CEntity::Impl>, true>::_Head_base()
  0.00    829.84     0.02 10000002     0.00     0.00  std::unique_ptr<A, std::default_delete<A> >::~unique_ptr()
  0.00    829.86     0.02 10000002     0.00     0.00  std::unique_ptr<C, std::default_delete<C> >::unique_ptr<std::default_delete<C>, void>()
  0.00    829.88     0.02 10000002     0.00     0.00  std::unique_ptr<C, std::default_delete<C> >::~unique_ptr()
  0.00    829.90     0.02 10000002     0.00     0.00  std::unique_ptr<CIf, std::default_delete<CIf> >::get_deleter()
  0.00    829.92     0.02 10000002     0.00     0.00  std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::unique_ptr<std::default_delete<BEntity::Impl>, void>()
  0.00    829.94     0.02 10000002     0.00     0.00  std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::unique_ptr<std::default_delete<CEntity::Impl>, void>()
  0.00    829.96     0.02 10000002     0.00     0.00  std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_Tuple_impl()
  0.00    829.98     0.02 10000002     0.00     0.00  std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_Tuple_impl(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&&)
  0.00    830.00     0.02 10000002     0.00     0.00  std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_Tuple_impl()
  0.00    830.02     0.02 10000002     0.00     0.00  std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_Tuple_impl()
  0.00    830.04     0.02 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<B> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<B> >&)
  0.00    830.06     0.02 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<AIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<AIf> >&&)
  0.00    830.08     0.02 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<BIf> >::_Tuple_impl()
  0.00    830.10     0.02 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_Tuple_impl()
  0.00    830.12     0.02 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<CEntity::Impl> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<CEntity::Impl> >&)
  0.00    830.14     0.02 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<CEntity::Impl> >::_Tuple_impl()
  0.00    830.16     0.02 10000002     0.00     0.00  std::__uniq_ptr_data<B, std::default_delete<B>, true, true>::__uniq_ptr_impl()
  0.00    830.18     0.02 10000002     0.00     0.00  std::__uniq_ptr_data<CIf, std::default_delete<CIf>, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<CIf, std::default_delete<CIf>, true, true>&&)
  0.00    830.20     0.02 10000002     0.00     0.00  std::__uniq_ptr_data<CIf, std::default_delete<CIf>, true, true>::__uniq_ptr_impl(CIf*)
  0.00    830.22     0.02 10000002     0.00     0.00  std::__uniq_ptr_impl<A, std::default_delete<A> >::_M_deleter()
  0.00    830.24     0.02 10000002     0.00     0.00  std::__uniq_ptr_impl<A, std::default_delete<A> >::reset(A*)
  0.00    830.26     0.02 10000002     0.00     0.00  std::__uniq_ptr_impl<B, std::default_delete<B> >::_M_deleter()
  0.00    830.28     0.02 10000002     0.00     0.00  std::__uniq_ptr_impl<C, std::default_delete<C> >::reset(C*)
  0.00    830.30     0.02 10000002     0.00     0.00  std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >&&)
  0.00    830.32     0.02 10000002     0.00     0.00  std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::__uniq_ptr_impl(AIf*)
  0.00    830.34     0.02 10000002     0.00     0.00  std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::__uniq_ptr_impl(CIf*)
  0.00    830.36     0.02 10000002     0.00     0.00  std::__uniq_ptr_impl<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::__uniq_ptr_impl()
  0.00    830.38     0.02 10000002     0.00     0.00  std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::_M_deleter()
  0.00    830.40     0.02 10000002     0.00     0.00  std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::reset(BEntity::Impl*)
  0.00    830.42     0.02 10000002     0.00     0.00  std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::__uniq_ptr_impl()
  0.00    830.44     0.02 10000002     0.00     0.00  std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::_M_deleter()
  0.00    830.46     0.02 10000002     0.00     0.00  std::_Rb_tree_key_compare<std::less<int> >::_Rb_tree_key_compare()
  0.00    830.48     0.02 10000002     0.00     0.00  std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::map()
  0.00    830.50     0.02 10000002     0.00     0.00  std::tuple<AIf*, std::default_delete<AIf> >::tuple<true, true>()
  0.00    830.52     0.02 10000002     0.00     0.00  std::tuple<BIf*, std::default_delete<BIf> >::tuple<true, true>()
  0.00    830.54     0.02 10000002     0.00     0.00  std::default_delete<A>& std::__get_helper<1ul, std::default_delete<A>>(std::_Tuple_impl<1ul, std::default_delete<A>>&)
  0.00    830.56     0.02 10000002     0.00     0.00  std::default_delete<B>& std::__get_helper<1ul, std::default_delete<B>>(std::_Tuple_impl<1ul, std::default_delete<B>>&)
  0.00    830.58     0.02 10000002     0.00     0.00  std::default_delete<BIf>& std::__get_helper<1ul, std::default_delete<BIf>>(std::_Tuple_impl<1ul, std::default_delete<BIf>>&)
  0.00    830.60     0.02 10000002     0.00     0.00  std::default_delete<AEntity::Impl>& std::__get_helper<1ul, std::default_delete<AEntity::Impl>>(std::_Tuple_impl<1ul, std::default_delete<AEntity::Impl>>&)
  0.00    830.62     0.02 10000002     0.00     0.00  std::tuple_element<0ul, std::tuple<CIf*, std::default_delete<CIf> > >::type const& std::get<0ul, CIf*, std::default_delete<CIf> >(std::tuple<CIf*, std::default_delete<CIf> > const&)
  0.00    830.64     0.02 10000002     0.00     0.00  std::tuple_element<1ul, std::tuple<AIf*, std::default_delete<AIf> > >::type& std::get<1ul, AIf*, std::default_delete<AIf> >(std::tuple<AIf*, std::default_delete<AIf> >&)
  0.00    830.66     0.02 10000002     0.00     0.00  std::remove_reference<CIf*&>::type&& std::move<CIf*&>(CIf*&)
  0.00    830.68     0.02 10000002     0.00     0.00  std::remove_reference<TargetEntity<SampleStruct, CIf>::Impl*&>::type&& std::move<TargetEntity<SampleStruct, CIf>::Impl*&>(TargetEntity<SampleStruct, CIf>::Impl*&)
  0.00    830.70     0.02 10000002     0.00     0.00  std::remove_reference<std::_Tuple_impl<1ul, std::default_delete<AIf> >&>::type&& std::move<std::_Tuple_impl<1ul, std::default_delete<AIf> >&>(std::_Tuple_impl<1ul, std::default_delete<AIf> >&)
  0.00    830.72     0.02 10000002     0.00     0.00  std::remove_reference<std::_Tuple_impl<1ul, std::default_delete<BIf> >&>::type&& std::move<std::_Tuple_impl<1ul, std::default_delete<BIf> >&>(std::_Tuple_impl<1ul, std::default_delete<BIf> >&)
  0.00    830.74     0.02 10000002     0.00     0.00  std::remove_reference<std::tuple<AIf*, std::default_delete<AIf> >&>::type&& std::move<std::tuple<AIf*, std::default_delete<AIf> >&>(std::tuple<AIf*, std::default_delete<AIf> >&)
  0.00    830.76     0.02 10000002     0.00     0.00  std::remove_reference<std::tuple<BIf*, std::default_delete<BIf> >&>::type&& std::move<std::tuple<BIf*, std::default_delete<BIf> >&>(std::tuple<BIf*, std::default_delete<BIf> >&)
  0.00    830.77     0.01 30000006     0.00     0.00  std::_Head_base<0ul, A*, false>::_M_head(std::_Head_base<0ul, A*, false>&)
  0.00    830.78     0.01 30000006     0.00     0.00  std::_Head_base<0ul, C*, false>::_M_head(std::_Head_base<0ul, C*, false>&)
  0.00    830.79     0.01 30000006     0.00     0.00  std::tuple_element<0ul, std::tuple<C*, std::default_delete<C> > >::type& std::get<0ul, C*, std::default_delete<C> >(std::tuple<C*, std::default_delete<C> >&)
  0.00    830.80     0.01 20000004     0.00     0.00  std::_Head_base<0ul, Target<SampleStruct, CIf>*, false>::_M_head(std::_Head_base<0ul, Target<SampleStruct, CIf>*, false>&)
  0.00    830.81     0.01 20000004     0.00     0.00  std::_Head_base<0ul, TargetEntity<SampleStruct, CIf>::Impl*, false>::_M_head(std::_Head_base<0ul, TargetEntity<SampleStruct, CIf>::Impl*, false>&)
  0.00    830.82     0.01 20000004     0.00     0.00  std::_Head_base<1ul, std::default_delete<BIf>, true>::_M_head(std::_Head_base<1ul, std::default_delete<BIf>, true>&)
  0.00    830.83     0.01 10000004     0.00     0.00  std::_Rb_tree_header::_Rb_tree_header()
  0.00    830.84     0.01 10000003     0.00     0.00  std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>::_Head_base()
  0.00    830.85     0.01 10000003     0.00     0.00  std::tuple_element<1ul, std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > >::type& std::get<1ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&)
  0.00    830.86     0.01 10000002     0.00     0.00  B::B()
  0.00    830.87     0.01 10000002     0.00     0.00  AIf::AIf()
  0.00    830.88     0.01 10000002     0.00     0.00  CEntity::CEntity(int)
  0.00    830.89     0.01 10000002     0.00     0.00  std::_Head_base<0ul, AIf*, false>::_M_head(std::_Head_base<0ul, AIf*, false> const&)
  0.00    830.90     0.01 10000002     0.00     0.00  std::_Head_base<0ul, AIf*, false>::_Head_base()
  0.00    830.91     0.01 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<C>, true>::_M_head(std::_Head_base<1ul, std::default_delete<C>, true>&)
  0.00    830.92     0.01 10000002     0.00     0.00  std::unique_ptr<AIf, std::default_delete<AIf> >::get_deleter()
  0.00    830.93     0.01 10000002     0.00     0.00  std::unique_ptr<AIf, std::default_delete<AIf> >::unique_ptr<std::default_delete<AIf>, void>(AIf*)
  0.00    830.94     0.01 10000002     0.00     0.00  std::unique_ptr<CIf, std::default_delete<CIf> >::unique_ptr<std::default_delete<CIf>, void>(CIf*)
  0.00    830.95     0.01 10000002     0.00     0.00  std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::reset(AEntity::Impl*)
  0.00    830.96     0.01 10000002     0.00     0.00  std::_Tuple_impl<0ul, A*, std::default_delete<A> >::_Tuple_impl()
  0.00    830.97     0.01 10000002     0.00     0.00  std::_Tuple_impl<0ul, C*, std::default_delete<C> >::_Tuple_impl()
  0.00    830.98     0.01 10000002     0.00     0.00  std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_M_tail(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&)
  0.00    830.99     0.01 10000002     0.00     0.00  std::__uniq_ptr_data<A, std::default_delete<A>, true, true>::__uniq_ptr_impl()
  0.00    831.00     0.01 10000002     0.00     0.00  std::__uniq_ptr_data<C, std::default_delete<C>, true, true>::__uniq_ptr_impl()
  0.00    831.01     0.01 10000002     0.00     0.00  std::__uniq_ptr_data<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl>, true, true>::__uniq_ptr_impl()
  0.00    831.02     0.01 10000002     0.00     0.00  std::__uniq_ptr_impl<B, std::default_delete<B> >::reset(B*)
  0.00    831.03     0.01 10000002     0.00     0.00  std::tuple<C*, std::default_delete<C> >::tuple<true, true>()
  0.00    831.04     0.01 10000002     0.00     0.00  std::tuple<CIf*, std::default_delete<CIf> >::tuple(std::tuple<CIf*, std::default_delete<CIf> >&&)
  0.00    831.05     0.01 10000002     0.00     0.00  std::tuple<CIf*, std::default_delete<CIf> >::tuple<true, true>()
  0.00    831.06     0.01 10000002     0.00     0.00  std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_Rb_tree()
  0.00    831.07     0.01 10000002     0.00     0.00  std::default_delete<C>& std::__get_helper<1ul, std::default_delete<C>>(std::_Tuple_impl<1ul, std::default_delete<C>>&)
  0.00    831.08     0.01 10000002     0.00     0.00  std::tuple_element<1ul, std::tuple<B*, std::default_delete<B> > >::type& std::get<1ul, B*, std::default_delete<B> >(std::tuple<B*, std::default_delete<B> >&)
  0.00    831.09     0.01 10000002     0.00     0.00  std::remove_reference<std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&>::type&& std::move<std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&>(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&)
  0.00    831.09     0.00 30000006     0.00     0.00  std::_Head_base<0ul, BEntity::Impl*, false>::_M_head(std::_Head_base<0ul, BEntity::Impl*, false>&)
  0.00    831.09     0.00 30000006     0.00     0.00  A*& std::__get_helper<0ul, A*, std::default_delete<A> >(std::_Tuple_impl<0ul, A*, std::default_delete<A> >&)
  0.00    831.09     0.00 30000006     0.00     0.00  std::tuple_element<0ul, std::tuple<A*, std::default_delete<A> > >::type& std::get<0ul, A*, std::default_delete<A> >(std::tuple<A*, std::default_delete<A> >&)
  0.00    831.09     0.00 20000004     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<AIf> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<AIf> >&)
  0.00    831.09     0.00 20000004     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<BIf> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<BIf> >&)
  0.00    831.09     0.00 20000004     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<CIf> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<CIf> >&)
  0.00    831.09     0.00 20000004     0.00     0.00  BIf*&& std::forward<BIf*>(std::remove_reference<BIf*>::type&)
  0.00    831.09     0.00 20000004     0.00     0.00  CIf*&& std::forward<CIf*>(std::remove_reference<CIf*>::type&)
  0.00    831.09     0.00 20000004     0.00     0.00  TargetIf<SampleStruct, CIf>*&& std::forward<TargetIf<SampleStruct, CIf>*>(std::remove_reference<TargetIf<SampleStruct, CIf>*>::type&)
  0.00    831.09     0.00 20000004     0.00     0.00  std::default_delete<AIf>&& std::forward<std::default_delete<AIf> >(std::remove_reference<std::default_delete<AIf> >::type&)
  0.00    831.09     0.00 20000004     0.00     0.00  std::default_delete<CIf>&& std::forward<std::default_delete<CIf> >(std::remove_reference<std::default_delete<CIf> >::type&)
  0.00    831.09     0.00 10000003     0.00     0.00  TargetIf<SampleStruct, CIf>::TargetIf()
  0.00    831.09     0.00 10000003     0.00     0.00  std::default_delete<TargetIf<SampleStruct, CIf> >::operator()(TargetIf<SampleStruct, CIf>*) const
  0.00    831.09     0.00 10000003     0.00     0.00  std::_Head_base<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >, true>::_Head_base()
  0.00    831.09     0.00 10000003     0.00     0.00  std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::get_deleter()
  0.00    831.09     0.00 10000003     0.00     0.00  std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::tuple<true, true>()
  0.00    831.09     0.00 10000002     0.00     0.00  C::C(int)
  0.00    831.09     0.00 10000002     0.00     0.00  CIf::CIf()
  0.00    831.09     0.00 10000002     0.00     0.00  CIf::~CIf()
  0.00    831.09     0.00 10000002     0.00     0.00  AEntity::~AEntity()
  0.00    831.09     0.00 10000002     0.00     0.00  BEntity::~BEntity()
  0.00    831.09     0.00 10000002     0.00     0.00  CEntity::Impl::~Impl()
  0.00    831.09     0.00 10000002     0.00     0.00  CEntity::~CEntity()
  0.00    831.09     0.00 10000002     0.00     0.00  CEntity::~CEntity()
  0.00    831.09     0.00 10000002     0.00     0.00  __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::new_allocator()
  0.00    831.09     0.00 10000002     0.00     0.00  std::unique_ptr<AIf, std::default_delete<AIf> >::operator*() const
  0.00    831.09     0.00 10000002     0.00     0.00  std::unique_ptr<BIf, std::default_delete<BIf> >::get() const
  0.00    831.09     0.00 10000002     0.00     0.00  std::unique_ptr<CIf, std::default_delete<CIf> >::get() const
  0.00    831.09     0.00 10000002     0.00     0.00  std::default_delete<B>::operator()(B*) const
  0.00    831.09     0.00 10000002     0.00     0.00  std::default_delete<BEntity::Impl>::operator()(BEntity::Impl*) const
  0.00    831.09     0.00 10000002     0.00     0.00  std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::_M_ptr() const
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Head_base<0ul, A*, false>::_Head_base()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Head_base<0ul, B*, false>::_Head_base()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Head_base<0ul, BIf*, false>::_M_head(std::_Head_base<0ul, BIf*, false> const&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Head_base<0ul, CIf*, false>::_Head_base()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<A>, true>::_M_head(std::_Head_base<1ul, std::default_delete<A>, true>&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<A>, true>::_Head_base()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<B>, true>::_Head_base()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<C>, true>::_Head_base()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<AIf>, true>::_Head_base()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<BIf>, true>::_Head_base()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<BIf>, true>::_Head_base<std::default_delete<BIf> >(std::default_delete<BIf>&&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<CIf>, true>::_Head_base()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<Target<SampleStruct, CIf> >, true>::_Head_base()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >, true>::_Head_base<std::default_delete<TargetIf<SampleStruct, CIf> > >(std::default_delete<TargetIf<SampleStruct, CIf> >&&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<AEntity::Impl>, true>::_Head_base()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<BEntity::Impl>, true>::_M_head(std::_Head_base<1ul, std::default_delete<BEntity::Impl>, true>&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<BEntity::Impl>, true>::_Head_base()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Head_base<1ul, std::default_delete<CEntity::Impl>, true>::_M_head(std::_Head_base<1ul, std::default_delete<CEntity::Impl>, true>&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::unique_ptr<B, std::default_delete<B> >::get_deleter()
  0.00    831.09     0.00 10000002     0.00     0.00  std::unique_ptr<B, std::default_delete<B> >::unique_ptr<std::default_delete<B>, void>()
  0.00    831.09     0.00 10000002     0.00     0.00  std::unique_ptr<C, std::default_delete<C> >::reset(C*)
  0.00    831.09     0.00 10000002     0.00     0.00  std::unique_ptr<AIf, std::default_delete<AIf> >::unique_ptr(std::unique_ptr<AIf, std::default_delete<AIf> >&&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::unique_ptr<BIf, std::default_delete<BIf> >::get_deleter()
  0.00    831.09     0.00 10000002     0.00     0.00  std::unique_ptr<BIf, std::default_delete<BIf> >::unique_ptr<std::default_delete<BIf>, void>(BIf*)
  0.00    831.09     0.00 10000002     0.00     0.00  std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::get_deleter()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<0ul, B*, std::default_delete<B> >::_Tuple_impl()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_M_head(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> > const&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_M_head(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> > const&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_M_tail(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_Tuple_impl()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_M_head(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> > const&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_M_tail(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_Tuple_impl(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::_Tuple_impl()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_tail(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >::_Tuple_impl()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >::_Tuple_impl()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<A> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<A> >&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<A> >::_Tuple_impl()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<B> >::_Tuple_impl()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<C> >::_Tuple_impl()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<BIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<BIf> >&&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<CIf> >::_Tuple_impl()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<Target<SampleStruct, CIf> > >::_Tuple_impl()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<AEntity::Impl> >::_Tuple_impl()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<BEntity::Impl> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<BEntity::Impl> >&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::__uniq_ptr_data<AIf, std::default_delete<AIf>, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<AIf, std::default_delete<AIf>, true, true>&&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::__uniq_ptr_data<AIf, std::default_delete<AIf>, true, true>::__uniq_ptr_impl(AIf*)
  0.00    831.09     0.00 10000002     0.00     0.00  std::__uniq_ptr_data<BIf, std::default_delete<BIf>, true, true>::__uniq_ptr_impl(BIf*)
  0.00    831.09     0.00 10000002     0.00     0.00  std::__uniq_ptr_data<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> >, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> >, true, true>&&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::__uniq_ptr_data<AEntity::Impl, std::default_delete<AEntity::Impl>, true, true>::__uniq_ptr_impl()
  0.00    831.09     0.00 10000002     0.00     0.00  std::__uniq_ptr_data<CEntity::Impl, std::default_delete<CEntity::Impl>, true, true>::__uniq_ptr_impl()
  0.00    831.09     0.00 10000002     0.00     0.00  std::__uniq_ptr_impl<A, std::default_delete<A> >::__uniq_ptr_impl()
  0.00    831.09     0.00 10000002     0.00     0.00  std::__uniq_ptr_impl<B, std::default_delete<B> >::__uniq_ptr_impl()
  0.00    831.09     0.00 10000002     0.00     0.00  std::__uniq_ptr_impl<C, std::default_delete<C> >::__uniq_ptr_impl()
  0.00    831.09     0.00 10000002     0.00     0.00  std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::_M_deleter()
  0.00    831.09     0.00 10000002     0.00     0.00  std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::_M_deleter()
  0.00    831.09     0.00 10000002     0.00     0.00  std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >&&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::_M_deleter()
  0.00    831.09     0.00 10000002     0.00     0.00  std::tuple<A*, std::default_delete<A> >::tuple<true, true>()
  0.00    831.09     0.00 10000002     0.00     0.00  std::tuple<B*, std::default_delete<B> >::tuple<true, true>()
  0.00    831.09     0.00 10000002     0.00     0.00  std::tuple<BIf*, std::default_delete<BIf> >::tuple(std::tuple<BIf*, std::default_delete<BIf> >&&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::tuple<true, true>()
  0.00    831.09     0.00 10000002     0.00     0.00  std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::tuple(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::tuple<true, true>()
  0.00    831.09     0.00 10000002     0.00     0.00  std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> >::tuple<true, true>()
  0.00    831.09     0.00 10000002     0.00     0.00  std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> >::tuple<true, true>()
  0.00    831.09     0.00 10000002     0.00     0.00  std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::begin()
  0.00    831.09     0.00 10000002     0.00     0.00  AIf* const& std::__get_helper<0ul, AIf*, std::default_delete<AIf> >(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> > const&)
  0.00    831.09     0.00 10000002     0.00     0.00  BIf* const& std::__get_helper<0ul, BIf*, std::default_delete<BIf> >(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> > const&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::default_delete<AIf>& std::__get_helper<1ul, std::default_delete<AIf>>(std::_Tuple_impl<1ul, std::default_delete<AIf>>&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::default_delete<CIf>& std::__get_helper<1ul, std::default_delete<CIf>>(std::_Tuple_impl<1ul, std::default_delete<CIf>>&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::default_delete<BEntity::Impl>& std::__get_helper<1ul, std::default_delete<BEntity::Impl>>(std::_Tuple_impl<1ul, std::default_delete<BEntity::Impl>>&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::default_delete<CEntity::Impl>& std::__get_helper<1ul, std::default_delete<CEntity::Impl>>(std::_Tuple_impl<1ul, std::default_delete<CEntity::Impl>>&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::tuple_element<0ul, std::tuple<AIf*, std::default_delete<AIf> > >::type const& std::get<0ul, AIf*, std::default_delete<AIf> >(std::tuple<AIf*, std::default_delete<AIf> > const&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::tuple_element<0ul, std::tuple<BIf*, std::default_delete<BIf> > >::type const& std::get<0ul, BIf*, std::default_delete<BIf> >(std::tuple<BIf*, std::default_delete<BIf> > const&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::tuple_element<1ul, std::tuple<BIf*, std::default_delete<BIf> > >::type& std::get<1ul, BIf*, std::default_delete<BIf> >(std::tuple<BIf*, std::default_delete<BIf> >&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::tuple_element<1ul, std::tuple<CIf*, std::default_delete<CIf> > >::type& std::get<1ul, CIf*, std::default_delete<CIf> >(std::tuple<CIf*, std::default_delete<CIf> >&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::tuple_element<1ul, std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> > >::type& std::get<1ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> >&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::remove_reference<AIf*&>::type&& std::move<AIf*&>(AIf*&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::remove_reference<std::unique_ptr<BIf, std::default_delete<BIf> >&>::type&& std::move<std::unique_ptr<BIf, std::default_delete<BIf> >&>(std::unique_ptr<BIf, std::default_delete<BIf> >&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::remove_reference<std::unique_ptr<CIf, std::default_delete<CIf> >&>::type&& std::move<std::unique_ptr<CIf, std::default_delete<CIf> >&>(std::unique_ptr<CIf, std::default_delete<CIf> >&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::remove_reference<std::_Tuple_impl<1ul, std::default_delete<CIf> >&>::type&& std::move<std::_Tuple_impl<1ul, std::default_delete<CIf> >&>(std::_Tuple_impl<1ul, std::default_delete<CIf> >&)
  0.00    831.09     0.00 10000002     0.00     0.00  std::remove_reference<std::tuple<CIf*, std::default_delete<CIf> >&>::type&& std::move<std::tuple<CIf*, std::default_delete<CIf> >&>(std::tuple<CIf*, std::default_delete<CIf> >&)
  0.00    831.09     0.00 10000001     0.00     0.00  std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*& std::forward<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*&>(std::remove_reference<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*&>::type&)
  0.00    831.09     0.00      106     0.00     0.00  std::_Head_base<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, false>::_M_head(std::_Head_base<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, false>&)
  0.00    831.09     0.00      106     0.00     0.00  std::_Tuple_impl<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::_M_head(std::_Tuple_impl<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&)
  0.00    831.09     0.00      106     0.00     0.00  std::__uniq_ptr_impl<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::_M_ptr()
  0.00    831.09     0.00      106     0.00     0.00  std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*& std::__get_helper<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >(std::_Tuple_impl<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&)
  0.00    831.09     0.00      106     0.00     0.00  std::tuple_element<0ul, std::tuple<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > > >::type& std::get<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >(std::tuple<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&)
  0.00    831.09     0.00       53     0.00     0.00  testing::Message::~Message()
  0.00    831.09     0.00       53     0.00     0.00  std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*) const
  0.00    831.09     0.00       53     0.00     0.00  std::_Head_base<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >, true>::_M_head(std::_Head_base<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >, true>&)
  0.00    831.09     0.00       53     0.00     0.00  std::unique_ptr<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::get_deleter()
  0.00    831.09     0.00       53     0.00     0.00  std::unique_ptr<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::~unique_ptr()
  0.00    831.09     0.00       53     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::_M_head(std::_Tuple_impl<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&)
  0.00    831.09     0.00       53     0.00     0.00  std::__uniq_ptr_impl<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::_M_deleter()
  0.00    831.09     0.00       53     0.00     0.00  std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >& std::__get_helper<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >>(std::_Tuple_impl<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >>&)
  0.00    831.09     0.00       53     0.00     0.00  std::tuple_element<1ul, std::tuple<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > > >::type& std::get<1ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >(std::tuple<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&)
  0.00    831.09     0.00       53     0.00     0.00  std::remove_reference<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*&>::type&& std::move<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*&>(std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*&)
  0.00    831.09     0.00       12     0.00     0.00  testing::internal::GetNotDefaultOrNull(void (*)(), void (*)())
  0.00    831.09     0.00        9     0.00     0.00  testing::internal::CodeLocation::~CodeLocation()
  0.00    831.09     0.00        5     0.00     0.00  A::ident() const
  0.00    831.09     0.00        5     0.00     0.00  Target<SampleStruct, CIf>::ident() const
  0.00    831.09     0.00        5     0.00     0.00  AEntity::Impl::ident() const
  0.00    831.09     0.00        5     0.00     0.00  AEntity::ident() const
  0.00    831.09     0.00        5     0.00     0.00  std::unique_ptr<A, std::default_delete<A> >::get() const
  0.00    831.09     0.00        5     0.00     0.00  std::unique_ptr<A, std::default_delete<A> >::operator->() const
  0.00    831.09     0.00        5     0.00     0.00  std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::get() const
  0.00    831.09     0.00        5     0.00     0.00  std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::get() const
  0.00    831.09     0.00        5     0.00     0.00  std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::operator->() const
  0.00    831.09     0.00        5     0.00     0.00  std::__uniq_ptr_impl<A, std::default_delete<A> >::_M_ptr() const
  0.00    831.09     0.00        5     0.00     0.00  std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_ptr() const
  0.00    831.09     0.00        5     0.00     0.00  std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::_M_ptr() const
  0.00    831.09     0.00        5     0.00     0.00  std::_Head_base<0ul, A*, false>::_M_head(std::_Head_base<0ul, A*, false> const&)
  0.00    831.09     0.00        5     0.00     0.00  std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>::_M_head(std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false> const&)
  0.00    831.09     0.00        5     0.00     0.00  std::_Head_base<0ul, AEntity::Impl*, false>::_M_head(std::_Head_base<0ul, AEntity::Impl*, false> const&)
  0.00    831.09     0.00        5     0.00     0.00  std::_Tuple_impl<0ul, A*, std::default_delete<A> >::_M_head(std::_Tuple_impl<0ul, A*, std::default_delete<A> > const&)
  0.00    831.09     0.00        5     0.00     0.00  std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > const&)
  0.00    831.09     0.00        5     0.00     0.00  std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >::_M_head(std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> > const&)
  0.00    831.09     0.00        5     0.00     0.00  A* const& std::__get_helper<0ul, A*, std::default_delete<A> >(std::_Tuple_impl<0ul, A*, std::default_delete<A> > const&)
  0.00    831.09     0.00        5     0.00     0.00  TargetIf<SampleStruct, CIf>* const& std::__get_helper<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > const&)
  0.00    831.09     0.00        5     0.00     0.00  AEntity::Impl* const& std::__get_helper<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> > const&)
  0.00    831.09     0.00        5     0.00     0.00  std::tuple_element<0ul, std::tuple<A*, std::default_delete<A> > >::type const& std::get<0ul, A*, std::default_delete<A> >(std::tuple<A*, std::default_delete<A> > const&)
  0.00    831.09     0.00        5     0.00     0.00  std::tuple_element<0ul, std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > >::type const& std::get<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > const&)
  0.00    831.09     0.00        5     0.00     0.00  std::tuple_element<0ul, std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> > >::type const& std::get<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> > const&)
  0.00    831.09     0.00        4     0.00     0.00  std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::get() const
  0.00    831.09     0.00        4     0.00     0.00  std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::operator*() const
  0.00    831.09     0.00        4     0.00     0.00  std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::get() const
  0.00    831.09     0.00        4     0.00     0.00  std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::operator->() const
  0.00    831.09     0.00        4     0.00     0.00  std::__uniq_ptr_impl<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::_M_ptr() const
  0.00    831.09     0.00        4     0.00     0.00  std::__uniq_ptr_impl<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_M_ptr() const
  0.00    831.09     0.00        4     0.00     0.00  std::_Head_base<0ul, Target<SampleStruct, CIf>*, false>::_M_head(std::_Head_base<0ul, Target<SampleStruct, CIf>*, false> const&)
  0.00    831.09     0.00        4     0.00     0.00  std::_Head_base<0ul, TargetEntity<SampleStruct, CIf>::Impl*, false>::_M_head(std::_Head_base<0ul, TargetEntity<SampleStruct, CIf>::Impl*, false> const&)
  0.00    831.09     0.00        4     0.00     0.00  std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > const&)
  0.00    831.09     0.00        4     0.00     0.00  std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_M_head(std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > const&)
  0.00    831.09     0.00        4     0.00     0.00  Target<SampleStruct, CIf>* const& std::__get_helper<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >(std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > const&)
  0.00    831.09     0.00        4     0.00     0.00  TargetEntity<SampleStruct, CIf>::Impl* const& std::__get_helper<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >(std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > const&)
  0.00    831.09     0.00        4     0.00     0.00  std::tuple_element<0ul, std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > >::type const& std::get<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >(std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > const&)
  0.00    831.09     0.00        4     0.00     0.00  std::tuple_element<0ul, std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > >::type const& std::get<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >(std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > const&)
  0.00    831.09     0.00        3     0.00     0.00  SampleTest::SetUp()
  0.00    831.09     0.00        3     0.00     0.00  SampleTest::TearDown()
  0.00    831.09     0.00        3     0.00     0.00  SampleTest::SampleTest()
  0.00    831.09     0.00        3     0.00     0.00  SampleTest::~SampleTest()
  0.00    831.09     0.00        3     0.00     0.00  testing::AssertionResult::~AssertionResult()
  0.00    831.09     0.00        3     0.00     0.00  testing::internal::CodeLocation::CodeLocation(std::string const&, int)
  0.00    831.09     0.00        3     0.00     0.00  testing::internal::TestFactoryBase::TestFactoryBase()
  0.00    831.09     0.00        3     0.00     0.00  testing::internal::TestFactoryBase::~TestFactoryBase()
  0.00    831.09     0.00        3     0.00     0.00  testing::internal::SuiteApiResolver<SampleTest>::GetSetUpCaseOrSuite(char const*, int)
  0.00    831.09     0.00        3     0.00     0.00  testing::internal::SuiteApiResolver<SampleTest>::GetTearDownCaseOrSuite(char const*, int)
  0.00    831.09     0.00        3     0.00     0.00  void const* testing::internal::GetTypeId<SampleTest>()
  0.00    831.09     0.00        3     0.00     0.00  testing::AssertionResult::operator bool() const
  0.00    831.09     0.00        3     0.00     0.00  std::_Head_base<0ul, std::string*, false>::_M_head(std::_Head_base<0ul, std::string*, false>&)
  0.00    831.09     0.00        3     0.00     0.00  std::unique_ptr<std::string, std::default_delete<std::string> >::~unique_ptr()
  0.00    831.09     0.00        3     0.00     0.00  std::_Tuple_impl<0ul, std::string*, std::default_delete<std::string> >::_M_head(std::_Tuple_impl<0ul, std::string*, std::default_delete<std::string> >&)
  0.00    831.09     0.00        3     0.00     0.00  std::__uniq_ptr_impl<std::string, std::default_delete<std::string> >::_M_ptr()
  0.00    831.09     0.00        3     0.00     0.00  std::string*& std::__get_helper<0ul, std::string*, std::default_delete<std::string> >(std::_Tuple_impl<0ul, std::string*, std::default_delete<std::string> >&)
  0.00    831.09     0.00        3     0.00     0.00  std::tuple_element<0ul, std::tuple<std::string*, std::default_delete<std::string> > >::type& std::get<0ul, std::string*, std::default_delete<std::string> >(std::tuple<std::string*, std::default_delete<std::string> >&)
  0.00    831.09     0.00        2     0.00     0.00  int sampleUser1<SampleStruct, CIf>(TargetIf<SampleStruct, CIf> const&)
  0.00    831.09     0.00        2     0.00     0.00  testing::AssertionResult testing::internal::CmpHelperEQ<int, int>(char const*, char const*, int const&, int const&)
  0.00    831.09     0.00        2     0.00     0.00  testing::AssertionResult testing::internal::EqHelper::Compare<int, int, (void*)0>(char const*, char const*, int const&, int const&)
  0.00    831.09     0.00        2     0.00     0.00  TargetEntity<SampleStruct, CIf>::Impl::getEntity() const
  0.00    831.09     0.00        2     0.00     0.00  TargetEntity<SampleStruct, CIf>::getEntity() const
  0.00    831.09     0.00        2     0.00     0.00  std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::operator*() const
  0.00    831.09     0.00        2     0.00     0.00  std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::operator->() const
  0.00    831.09     0.00        1     0.00     0.00  RUN_ALL_TESTS()
  0.00    831.09     0.00        1     0.00     0.00  TargetEntity<SampleStruct, CIf>::Impl::Impl(TargetIf<SampleStruct, CIf> const&)
  0.00    831.09     0.00        1     0.00     0.00  TargetEntity<SampleStruct, CIf>::TargetEntity(TargetIf<SampleStruct, CIf> const&)
  0.00    831.09     0.00        1     0.00     0.00  PseudoTargetEntity<SampleStruct, CIf>::PseudoTargetEntity(AIf const&, BIf const&, CIf const&)
  0.00    831.09     0.00        1     0.00     0.00  SampleTest_RealSample1_Test::SampleTest_RealSample1_Test()
  0.00    831.09     0.00        1     0.00     0.00  SampleTest_RealSample1_Test::~SampleTest_RealSample1_Test()
  0.00    831.09     0.00        1     0.00     0.00  SampleTest_RealSample1_Test::~SampleTest_RealSample1_Test()
  0.00    831.09     0.00        1     0.00     0.00  SampleTest_RealSample2_Test::TestBody()
  0.00    831.09     0.00        1     0.00     0.00  SampleTest_RealSample2_Test::SampleTest_RealSample2_Test()
  0.00    831.09     0.00        1     0.00     0.00  SampleTest_RealSample2_Test::~SampleTest_RealSample2_Test()
  0.00    831.09     0.00        1     0.00     0.00  SampleTest_RealSample2_Test::~SampleTest_RealSample2_Test()
  0.00    831.09     0.00        1     0.00     0.00  SampleTest_PseudoSample1_Test::TestBody()
  0.00    831.09     0.00        1     0.00     0.00  SampleTest_PseudoSample1_Test::SampleTest_PseudoSample1_Test()
  0.00    831.09     0.00        1     0.00     0.00  SampleTest_PseudoSample1_Test::~SampleTest_PseudoSample1_Test()
  0.00    831.09     0.00        1     0.00     0.00  SampleTest_PseudoSample1_Test::~SampleTest_PseudoSample1_Test()
  0.00    831.09     0.00        1     0.00     0.00  Target<SampleStruct, CIf>::Target(Target<SampleStruct, CIf> const&)
  0.00    831.09     0.00        1     0.00     0.00  testing::AssertionResult testing::internal::CmpHelperEQ<TargetIf<SampleStruct, CIf>::COMPARE, TargetIf<SampleStruct, CIf>::COMPARE>(char const*, char const*, TargetIf<SampleStruct, CIf>::COMPARE const&, TargetIf<SampleStruct, CIf>::COMPARE const&)
  0.00    831.09     0.00        1     0.00     0.00  testing::internal::TestFactoryImpl<SampleTest_RealSample1_Test>::CreateTest()
  0.00    831.09     0.00        1     0.00     0.00  testing::internal::TestFactoryImpl<SampleTest_RealSample1_Test>::TestFactoryImpl()
  0.00    831.09     0.00        1     0.00     0.00  testing::internal::TestFactoryImpl<SampleTest_RealSample1_Test>::~TestFactoryImpl()
  0.00    831.09     0.00        1     0.00     0.00  testing::internal::TestFactoryImpl<SampleTest_RealSample1_Test>::~TestFactoryImpl()
  0.00    831.09     0.00        1     0.00     0.00  testing::internal::TestFactoryImpl<SampleTest_RealSample2_Test>::CreateTest()
  0.00    831.09     0.00        1     0.00     0.00  testing::internal::TestFactoryImpl<SampleTest_RealSample2_Test>::TestFactoryImpl()
  0.00    831.09     0.00        1     0.00     0.00  testing::internal::TestFactoryImpl<SampleTest_RealSample2_Test>::~TestFactoryImpl()
  0.00    831.09     0.00        1     0.00     0.00  testing::internal::TestFactoryImpl<SampleTest_RealSample2_Test>::~TestFactoryImpl()
  0.00    831.09     0.00        1     0.00     0.00  testing::internal::TestFactoryImpl<SampleTest_PseudoSample1_Test>::CreateTest()
  0.00    831.09     0.00        1     0.00     0.00  testing::internal::TestFactoryImpl<SampleTest_PseudoSample1_Test>::TestFactoryImpl()
  0.00    831.09     0.00        1     0.00     0.00  testing::internal::TestFactoryImpl<SampleTest_PseudoSample1_Test>::~TestFactoryImpl()
  0.00    831.09     0.00        1     0.00     0.00  testing::internal::TestFactoryImpl<SampleTest_PseudoSample1_Test>::~TestFactoryImpl()
  0.00    831.09     0.00        1     0.00     0.00  testing::AssertionResult testing::internal::EqHelper::Compare<TargetIf<SampleStruct, CIf>::COMPARE, TargetIf<SampleStruct, CIf>::COMPARE, (void*)0>(char const*, char const*, TargetIf<SampleStruct, CIf>::COMPARE const&, TargetIf<SampleStruct, CIf>::COMPARE const&)
  0.00    831.09     0.00        1     0.00     0.00  TargetIf<SampleStruct, CIf>::clone(TargetIf<SampleStruct, CIf> const&)
  0.00    831.09     0.00        1     0.00     0.00  TargetEntity<SampleStruct, CIf>::Impl::ident() const
  0.00    831.09     0.00        1     0.00     0.00  TargetEntity<SampleStruct, CIf>::Impl::compare(TargetIf<SampleStruct, CIf> const&) const
  0.00    831.09     0.00        1     0.00     0.00  TargetEntity<SampleStruct, CIf>::ident() const
  0.00    831.09     0.00        1     0.00     0.00  TargetEntity<SampleStruct, CIf>::compare(TargetIf<SampleStruct, CIf> const&) const
  0.00    831.09     0.00        1     0.00     0.00  PseudoTargetEntity<SampleStruct, CIf>::ident() const
  0.00    831.09     0.00        1     0.00     0.00  Target<SampleStruct, CIf>::compare(Target<SampleStruct, CIf> const&) const
  0.00    831.09     0.00        1     0.00     0.00  std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::operator->() const
  0.00    831.09     0.00        1     0.00     0.00  std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::begin()
  0.00    831.09     0.00        1     0.00     0.00  std::operator!=(std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&, std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&)
  0.00    831.09     0.00        1     0.00     0.00  main

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2021 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.00% of 831.09 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     80.9  672.73    0.00                 _mcount_private [1]
-----------------------------------------------
                                                 <spontaneous>
[2]     11.0   91.71    0.00                 __fentry__ [2]
-----------------------------------------------
                                                 <spontaneous>
[3]      7.9    0.00   65.91                 void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [3]
                0.19   65.72       1/1           SampleTest_RealSample1_Test::TestBody() [4]
                0.00    0.00       1/1           SampleTest_RealSample2_Test::TestBody() [428]
                0.00    0.00       1/1           SampleTest_PseudoSample1_Test::TestBody() [429]
                0.00    0.00       3/3           SampleTest::TearDown() [675]
                0.00    0.00       3/3           SampleTest::SetUp() [674]
-----------------------------------------------
                0.19   65.72       1/1           void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [3]
[4]      7.9    0.19   65.72       1         SampleTest_RealSample1_Test::TestBody() [4]
                0.14   58.14 10000000/10000001     TargetIf<SampleStruct, CIf>::instantiate(AIf const&, BIf const&, CIf const&) [5]
                0.14    2.03 10000000/10000002     AIf::instantiate(int) [38]
                0.06    1.70 10000000/10000002     CIf::instantiate(int) [45]
                0.08    1.57 10000000/10000002     BIf::instantiate() [46]
                0.03    0.48 10000000/20000004     std::unique_ptr<AIf, std::default_delete<AIf> >::~unique_ptr() [58]
                0.01    0.47 10000000/20000004     std::unique_ptr<CIf, std::default_delete<CIf> >::~unique_ptr() [60]
                0.01    0.42 10000000/20000004     std::unique_ptr<BIf, std::default_delete<BIf> >::~unique_ptr() [64]
                0.04    0.15 10000000/20000005     std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::~unique_ptr() [106]
                0.04    0.13 10000000/10000002     std::unique_ptr<CIf, std::default_delete<CIf> >::operator*() const [188]
                0.02    0.02 10000000/10000002     std::unique_ptr<BIf, std::default_delete<BIf> >::operator*() const [323]
                0.00    0.03 10000000/10000002     std::unique_ptr<AIf, std::default_delete<AIf> >::operator*() const [341]
-----------------------------------------------
                0.00    0.00       1/10000001     SampleTest_RealSample2_Test::TestBody() [428]
                0.14   58.14 10000000/10000001     SampleTest_RealSample1_Test::TestBody() [4]
[5]      7.0    0.14   58.14 10000001         TargetIf<SampleStruct, CIf>::instantiate(AIf const&, BIf const&, CIf const&) [5]
                0.07   57.17 10000001/10000001     TargetEntity<SampleStruct, CIf>::TargetEntity(AIf const&, BIf const&, CIf const&) [6]
                0.03    0.36 10000001/10000002     std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::unique_ptr(std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [103]
                0.09    0.18 10000001/10000003     std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::unique_ptr<std::default_delete<TargetIf<SampleStruct, CIf> >, void>(TargetIf<SampleStruct, CIf>*) [133]
                0.04    0.15 10000001/20000005     std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::~unique_ptr() [106]
                0.04    0.00 10000001/10000002     std::remove_reference<std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&>::type&& std::move<std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&>(std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [328]
-----------------------------------------------
                0.07   57.17 10000001/10000001     TargetIf<SampleStruct, CIf>::instantiate(AIf const&, BIf const&, CIf const&) [5]
[6]      6.9    0.07   57.17 10000001         TargetEntity<SampleStruct, CIf>::TargetEntity(AIf const&, BIf const&, CIf const&) [6]
                0.17   56.50 10000001/10000001     TargetEntity<SampleStruct, CIf>::Impl::Impl(AIf const&, BIf const&, CIf const&) [7]
                0.05    0.28 10000001/10000002     std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::reset(TargetEntity<SampleStruct, CIf>::Impl*) [116]
                0.04    0.13 10000001/10000002     std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::unique_ptr<std::default_delete<TargetEntity<SampleStruct, CIf>::Impl>, void>() [189]
                0.00    0.00 10000001/10000003     TargetIf<SampleStruct, CIf>::TargetIf() [571]
-----------------------------------------------
                0.17   56.50 10000001/10000001     TargetEntity<SampleStruct, CIf>::TargetEntity(AIf const&, BIf const&, CIf const&) [6]
[7]      6.8    0.17   56.50 10000001         TargetEntity<SampleStruct, CIf>::Impl::Impl(AIf const&, BIf const&, CIf const&) [7]
                1.08   54.96 10000001/10000001     Target<SampleStruct, CIf>::Target(AIf const&, BIf const&, CIf const&) [8]
                0.05    0.23 10000001/10000002     std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::reset(Target<SampleStruct, CIf>*) [132]
                0.06    0.12 10000001/10000002     std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::unique_ptr<std::default_delete<Target<SampleStruct, CIf> >, void>() [184]
-----------------------------------------------
                1.08   54.96 10000001/10000001     TargetEntity<SampleStruct, CIf>::Impl::Impl(AIf const&, BIf const&, CIf const&) [7]
[8]      6.7    1.08   54.96 10000001         Target<SampleStruct, CIf>::Target(AIf const&, BIf const&, CIf const&) [8]
                1.65   39.03 200000020/200000020     std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::operator[](int const&) [9]
                0.77    8.35 200000020/200000020     std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >::operator=(std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >&&) [15]
                0.37    2.62 200000020/200000020     std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >::unique_ptr<std::default_delete<SampleStruct>, void>(SampleStruct*) [31]
                0.42    1.17 200000020/200000020     std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >::~unique_ptr() [47]
                0.32    0.00 200000020/200000020     SampleStruct::SampleStruct(int) [117]
                0.02    0.12 10000001/10000002     std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::map() [213]
                0.12    0.00 200000020/200000020     std::remove_reference<std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >&>::type&& std::move<std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >&>(std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >&) [224]
-----------------------------------------------
                1.65   39.03 200000020/200000020     Target<SampleStruct, CIf>::Target(AIf const&, BIf const&, CIf const&) [8]
[9]      4.9    1.65   39.03 200000020         std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::operator[](int const&) [9]
                1.26   24.15 200000020/200000020     std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [10]
                0.63   10.01 200000020/200000020     std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::lower_bound(int const&) [13]
                0.33    0.58 200000020/200000020     std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::operator*() const [62]
                0.33    0.53 200000020/200000020     std::tuple<int const&>::tuple<true, true>(int const&) [65]
                0.14    0.64 200000020/200000021     std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::end() [70]
                0.29    0.00 200000020/210000021     std::operator==(std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&, std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&) [123]
                0.14    0.00 200000020/200000020     std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_Rb_tree_const_iterator(std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&) [207]
-----------------------------------------------
                1.26   24.15 200000020/200000020     std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::operator[](int const&) [9]
[10]     3.1    1.26   24.15 200000020         std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [10]
                0.90   13.11 200000020/200000020     std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >* std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_create_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [11]
                1.12    3.62 200000020/200000020     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, int const&) [25]
                1.12    2.81 200000020/200000020     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_insert_node(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*) [27]
                0.27    0.76 200000020/1600000160     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_S_key(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const*) [19]
                0.16    0.00 200000020/1000000100     std::tuple<int const&>&& std::forward<std::tuple<int const&> >(std::remove_reference<std::tuple<int const&> >::type&) [68]
                0.16    0.00 200000020/1000000100     std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [69]
                0.13    0.00 200000020/1000000100     std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [88]
-----------------------------------------------
                0.90   13.11 200000020/200000020     std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [10]
[11]     1.7    0.90   13.11 200000020         std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >* std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_create_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [11]
                1.21   10.13 200000020/200000020     void std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_construct_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [12]
                0.27    1.05 200000020/200000020     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_node() [53]
                0.16    0.00 200000020/1000000100     std::tuple<int const&>&& std::forward<std::tuple<int const&> >(std::remove_reference<std::tuple<int const&> >::type&) [68]
                0.16    0.00 200000020/1000000100     std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [69]
                0.13    0.00 200000020/1000000100     std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [88]
-----------------------------------------------
                1.21   10.13 200000020/200000020     std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >* std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_create_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [11]
[12]     1.4    1.21   10.13 200000020         void std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_construct_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [12]
                0.88    7.91 200000020/200000020     void std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > > >::construct<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >&, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [17]
                0.21    0.37 200000020/400000040     std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_valptr() [55]
                0.20    0.00 200000020/400000051     operator new(unsigned long, void*) [102]
                0.16    0.00 200000020/1000000100     std::tuple<int const&>&& std::forward<std::tuple<int const&> >(std::remove_reference<std::tuple<int const&> >::type&) [68]
                0.16    0.00 200000020/1000000100     std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [69]
                0.13    0.00 200000020/1000000100     std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [88]
                0.10    0.00 200000020/400000040     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_Node_allocator() [168]
-----------------------------------------------
                0.63   10.01 200000020/200000020     std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::operator[](int const&) [9]
[13]     1.3    0.63   10.01 200000020         std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::lower_bound(int const&) [13]
                0.52    9.49 200000020/200000020     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::lower_bound(int const&) [14]
-----------------------------------------------
                0.52    9.49 200000020/200000020     std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::lower_bound(int const&) [13]
[14]     1.2    0.52    9.49 200000020         std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::lower_bound(int const&) [14]
                2.04    6.82 200000020/200000020     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_lower_bound(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*, std::_Rb_tree_node_base*, int const&) [16]
                0.23    0.28 200000020/210000021     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_begin() [92]
                0.12    0.00 200000020/610000061     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_end() [107]
-----------------------------------------------
                0.77    8.35 200000020/200000020     Target<SampleStruct, CIf>::Target(AIf const&, BIf const&, CIf const&) [8]
[15]     1.1    0.77    8.35 200000020         std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >::operator=(std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >&&) [15]
                0.43    7.92 200000020/200000020     std::__uniq_ptr_data<SampleStruct, std::default_delete<SampleStruct>, true, true>::operator=(std::__uniq_ptr_data<SampleStruct, std::default_delete<SampleStruct>, true, true>&&) [18]
-----------------------------------------------
                2.04    6.82 200000020/200000020     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::lower_bound(int const&) [14]
[16]     1.1    2.04    6.82 200000020         std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_lower_bound(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*, std::_Rb_tree_node_base*, int const&) [16]
                1.10    3.15 830000083/1600000160     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_S_key(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const*) [19]
                1.67    0.00 830000083/1210000121     std::less<int>::operator()(int const&, int const&) const [36]
                0.69    0.00 830000083/830000083     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_S_right(std::_Rb_tree_node_base*) [82]
                0.20    0.00 200000020/820000084     std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_Rb_tree_iterator(std::_Rb_tree_node_base*) [67]
-----------------------------------------------
                0.88    7.91 200000020/200000020     void std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_construct_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [12]
[17]     1.1    0.88    7.91 200000020         void std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > > >::construct<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >&, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [17]
                0.82    6.64 200000020/200000020     void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::construct<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [21]
                0.16    0.00 200000020/1000000100     std::tuple<int const&>&& std::forward<std::tuple<int const&> >(std::remove_reference<std::tuple<int const&> >::type&) [68]
                0.16    0.00 200000020/1000000100     std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [69]
                0.13    0.00 200000020/1000000100     std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [88]
-----------------------------------------------
                0.43    7.92 200000020/200000020     std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >::operator=(std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >&&) [15]
[18]     1.0    0.43    7.92 200000020         std::__uniq_ptr_data<SampleStruct, std::default_delete<SampleStruct>, true, true>::operator=(std::__uniq_ptr_data<SampleStruct, std::default_delete<SampleStruct>, true, true>&&) [18]
                0.28    7.64 200000020/200000020     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::operator=(std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >&&) [20]
-----------------------------------------------
                0.25    0.72 190000019/1600000160     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_insert_node(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*) [27]
                0.27    0.76 200000020/1600000160     std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [10]
                0.51    1.44 380000038/1600000160     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_S_key(std::_Rb_tree_node_base const*) [37]
                1.10    3.15 830000083/1600000160     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_lower_bound(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*, std::_Rb_tree_node_base*, int const&) [16]
[19]     1.0    2.13    6.08 1600000160         std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_S_key(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const*) [19]
                2.18    3.01 1600000160/1600000160     std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_valptr() const [24]
                0.89    0.00 1600000160/1600000160     std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::operator()(std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > const&) const [63]
-----------------------------------------------
                0.28    7.64 200000020/200000020     std::__uniq_ptr_data<SampleStruct, std::default_delete<SampleStruct>, true, true>::operator=(std::__uniq_ptr_data<SampleStruct, std::default_delete<SampleStruct>, true, true>&&) [18]
[20]     1.0    0.28    7.64 200000020         std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::operator=(std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >&&) [20]
                0.39    2.33 200000020/200000020     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::reset(SampleStruct*) [32]
                0.30    2.33 200000020/200000020     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::release() [33]
                0.27    1.81 400000040/400000040     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::_M_deleter() [40]
                0.21    0.00 200000020/200000020     std::default_delete<SampleStruct>&& std::forward<std::default_delete<SampleStruct> >(std::remove_reference<std::default_delete<SampleStruct> >::type&) [162]
-----------------------------------------------
                0.82    6.64 200000020/200000020     void std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > > >::construct<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >&, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [17]
[21]     0.9    0.82    6.64 200000020         void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::construct<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [21]
                0.43    3.79 200000020/200000020     std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >::pair<int const&>(std::piecewise_construct_t, std::tuple<int const&>, std::tuple<>) [26]
                0.38    1.39 200000020/200000020     std::tuple<int const&>::tuple(std::tuple<int const&>&&) [44]
                0.20    0.00 200000020/400000051     operator new(unsigned long, void*) [102]
                0.16    0.00 200000020/1000000100     std::tuple<int const&>&& std::forward<std::tuple<int const&> >(std::remove_reference<std::tuple<int const&> >::type&) [68]
                0.16    0.00 200000020/1000000100     std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [69]
                0.13    0.00 200000020/1000000100     std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [88]
-----------------------------------------------
                0.27    0.90 200000020/1200000120     std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >::~unique_ptr() [47]
                0.27    0.90 200000020/1200000120     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::__uniq_ptr_impl(SampleStruct*) [35]
                0.53    1.80 400000040/1200000120     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::reset(SampleStruct*) [32]
                0.53    1.80 400000040/1200000120     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::release() [33]
[22]     0.8    1.59    5.40 1200000120         std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::_M_ptr() [22]
                1.65    3.75 1200000120/1200000120     std::tuple_element<0ul, std::tuple<SampleStruct*, std::default_delete<SampleStruct> > >::type& std::get<0ul, SampleStruct*, std::default_delete<SampleStruct> >(std::tuple<SampleStruct*, std::default_delete<SampleStruct> >&) [23]
-----------------------------------------------
                1.65    3.75 1200000120/1200000120     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::_M_ptr() [22]
[23]     0.6    1.65    3.75 1200000120         std::tuple_element<0ul, std::tuple<SampleStruct*, std::default_delete<SampleStruct> > >::type& std::get<0ul, SampleStruct*, std::default_delete<SampleStruct> >(std::tuple<SampleStruct*, std::default_delete<SampleStruct> >&) [23]
                1.59    2.16 1200000120/1200000120     SampleStruct*& std::__get_helper<0ul, SampleStruct*, std::default_delete<SampleStruct> >(std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >&) [29]
-----------------------------------------------
                2.18    3.01 1600000160/1600000160     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_S_key(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const*) [19]
[24]     0.6    2.18    3.01 1600000160         std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_valptr() const [24]
                1.73    1.28 1600000160/1600000160     __gnu_cxx::__aligned_membuf<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_ptr() const [30]
-----------------------------------------------
                1.12    3.62 200000020/200000020     std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [10]
[25]     0.6    1.12    3.62 200000020         std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, int const&) [25]
                0.15    0.97 190000019/380000038     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_S_key(std::_Rb_tree_node_base const*) [37]
                0.39    0.20 200000020/200000020     std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_const_cast() const [90]
                0.36    0.16 190000019/190000019     std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*>::pair<std::_Rb_tree_node_base*&, true>(std::_Rb_tree_node_base* const&, std::_Rb_tree_node_base*&) [94]
                0.39    0.00 380000038/380000038     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_rightmost() [104]
                0.38    0.00 190000019/1210000121     std::less<int>::operator()(int const&, int const&) const [36]
                0.25    0.00 200000020/200000020     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::size() const [146]
                0.13    0.10 10000001/10000001     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_unique_pos(int const&) [154]
                0.12    0.00 200000020/610000061     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_end() [107]
-----------------------------------------------
                0.43    3.79 200000020/200000020     void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::construct<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [21]
[26]     0.5    0.43    3.79 200000020         std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >::pair<int const&>(std::piecewise_construct_t, std::tuple<int const&>, std::tuple<>) [26]
                0.70    3.08 200000020/200000020     std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >::pair<int const&, 0ul>(std::tuple<int const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [28]
-----------------------------------------------
                1.12    2.81 200000020/200000020     std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [10]
[27]     0.5    1.12    2.81 200000020         std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_insert_node(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*) [27]
                0.15    0.97 190000019/380000038     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_S_key(std::_Rb_tree_node_base const*) [37]
                0.25    0.72 190000019/1600000160     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_S_key(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const*) [19]
                0.38    0.00 190000019/1210000121     std::less<int>::operator()(int const&, int const&) const [36]
                0.20    0.00 200000020/820000084     std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_Rb_tree_iterator(std::_Rb_tree_node_base*) [67]
                0.12    0.00 200000020/610000061     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_end() [107]
-----------------------------------------------
                0.70    3.08 200000020/200000020     std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >::pair<int const&>(std::piecewise_construct_t, std::tuple<int const&>, std::tuple<>) [26]
[28]     0.5    0.70    3.08 200000020         std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >::pair<int const&, 0ul>(std::tuple<int const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [28]
                0.37    1.54 200000020/200000020     std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >::unique_ptr<std::default_delete<SampleStruct>, void>() [42]
                0.25    0.78 200000020/200000020     std::tuple_element<0ul, std::tuple<int const&> >::type& std::get<0ul, int const&>(std::tuple<int const&>&) [57]
                0.15    0.00 200000020/400000040     int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [122]
-----------------------------------------------
                1.59    2.16 1200000120/1200000120     std::tuple_element<0ul, std::tuple<SampleStruct*, std::default_delete<SampleStruct> > >::type& std::get<0ul, SampleStruct*, std::default_delete<SampleStruct> >(std::tuple<SampleStruct*, std::default_delete<SampleStruct> >&) [23]
[29]     0.5    1.59    2.16 1200000120         SampleStruct*& std::__get_helper<0ul, SampleStruct*, std::default_delete<SampleStruct> >(std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >&) [29]
                1.11    1.05 1200000120/1200000120     std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >::_M_head(std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >&) [39]
-----------------------------------------------
                1.73    1.28 1600000160/1600000160     std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_valptr() const [24]
[30]     0.4    1.73    1.28 1600000160         __gnu_cxx::__aligned_membuf<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_ptr() const [30]
                1.28    0.00 1600000160/1600000160     __gnu_cxx::__aligned_membuf<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_addr() const [54]
-----------------------------------------------
                0.37    2.62 200000020/200000020     Target<SampleStruct, CIf>::Target(AIf const&, BIf const&, CIf const&) [8]
[31]     0.4    0.37    2.62 200000020         std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >::unique_ptr<std::default_delete<SampleStruct>, void>(SampleStruct*) [31]
                0.16    2.46 200000020/200000020     std::__uniq_ptr_data<SampleStruct, std::default_delete<SampleStruct>, true, true>::__uniq_ptr_impl(SampleStruct*) [34]
-----------------------------------------------
                0.39    2.33 200000020/200000020     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::operator=(std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >&&) [20]
[32]     0.3    0.39    2.33 200000020         std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::reset(SampleStruct*) [32]
                0.53    1.80 400000040/1200000120     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::_M_ptr() [22]
-----------------------------------------------
                0.30    2.33 200000020/200000020     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::operator=(std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >&&) [20]
[33]     0.3    0.30    2.33 200000020         std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::release() [33]
                0.53    1.80 400000040/1200000120     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::_M_ptr() [22]
-----------------------------------------------
                0.16    2.46 200000020/200000020     std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >::unique_ptr<std::default_delete<SampleStruct>, void>(SampleStruct*) [31]
[34]     0.3    0.16    2.46 200000020         std::__uniq_ptr_data<SampleStruct, std::default_delete<SampleStruct>, true, true>::__uniq_ptr_impl(SampleStruct*) [34]
                0.33    2.13 200000020/200000020     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::__uniq_ptr_impl(SampleStruct*) [35]
-----------------------------------------------
                0.33    2.13 200000020/200000020     std::__uniq_ptr_data<SampleStruct, std::default_delete<SampleStruct>, true, true>::__uniq_ptr_impl(SampleStruct*) [34]
[35]     0.3    0.33    2.13 200000020         std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::__uniq_ptr_impl(SampleStruct*) [35]
                0.27    0.90 200000020/1200000120     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::_M_ptr() [22]
                0.20    0.78 200000020/400000040     std::tuple<SampleStruct*, std::default_delete<SampleStruct> >::tuple<true, true>() [41]
-----------------------------------------------
                0.38    0.00 190000019/1210000121     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_insert_node(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*) [27]
                0.38    0.00 190000019/1210000121     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, int const&) [25]
                1.67    0.00 830000083/1210000121     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_lower_bound(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*, std::_Rb_tree_node_base*, int const&) [16]
[36]     0.3    2.43    0.00 1210000121         std::less<int>::operator()(int const&, int const&) const [36]
-----------------------------------------------
                0.15    0.97 190000019/380000038     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_insert_node(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*) [27]
                0.15    0.97 190000019/380000038     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, int const&) [25]
[37]     0.3    0.30    1.95 380000038         std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_S_key(std::_Rb_tree_node_base const*) [37]
                0.51    1.44 380000038/1600000160     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_S_key(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const*) [19]
-----------------------------------------------
                0.00    0.00       1/10000002     SampleTest_RealSample2_Test::TestBody() [428]
                0.00    0.00       1/10000002     SampleTest_PseudoSample1_Test::TestBody() [429]
                0.14    2.03 10000000/10000002     SampleTest_RealSample1_Test::TestBody() [4]
[38]     0.3    0.14    2.03 10000002         AIf::instantiate(int) [38]
                0.05    0.80 10000002/10000002     AEntity::AEntity(int) [66]
                0.03    0.48 10000002/20000004     std::unique_ptr<AIf, std::default_delete<AIf> >::~unique_ptr() [58]
                0.00    0.38 10000002/10000002     std::unique_ptr<AIf, std::default_delete<AIf> >::unique_ptr(std::unique_ptr<AIf, std::default_delete<AIf> >&&) [108]
                0.01    0.20 10000002/10000002     std::unique_ptr<AIf, std::default_delete<AIf> >::unique_ptr<std::default_delete<AIf>, void>(AIf*) [161]
                0.08    0.00 10000002/10000002     std::remove_reference<std::unique_ptr<AIf, std::default_delete<AIf> >&>::type&& std::move<std::unique_ptr<AIf, std::default_delete<AIf> >&>(std::unique_ptr<AIf, std::default_delete<AIf> >&) [272]
-----------------------------------------------
                1.11    1.05 1200000120/1200000120     SampleStruct*& std::__get_helper<0ul, SampleStruct*, std::default_delete<SampleStruct> >(std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >&) [29]
[39]     0.3    1.11    1.05 1200000120         std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >::_M_head(std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >&) [39]
                1.05    0.00 1200000120/1200000120     std::_Head_base<0ul, SampleStruct*, false>::_M_head(std::_Head_base<0ul, SampleStruct*, false>&) [56]
-----------------------------------------------
                0.27    1.81 400000040/400000040     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::operator=(std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >&&) [20]
[40]     0.3    0.27    1.81 400000040         std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::_M_deleter() [40]
                0.49    1.32 400000040/400000040     std::tuple_element<1ul, std::tuple<SampleStruct*, std::default_delete<SampleStruct> > >::type& std::get<1ul, SampleStruct*, std::default_delete<SampleStruct> >(std::tuple<SampleStruct*, std::default_delete<SampleStruct> >&) [43]
-----------------------------------------------
                0.20    0.78 200000020/400000040     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::__uniq_ptr_impl(SampleStruct*) [35]
                0.20    0.78 200000020/400000040     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::__uniq_ptr_impl() [51]
[41]     0.2    0.39    1.55 400000040         std::tuple<SampleStruct*, std::default_delete<SampleStruct> >::tuple<true, true>() [41]
                0.68    0.87 400000040/400000040     std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >::_Tuple_impl() [48]
-----------------------------------------------
                0.37    1.54 200000020/200000020     std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >::pair<int const&, 0ul>(std::tuple<int const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [28]
[42]     0.2    0.37    1.54 200000020         std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >::unique_ptr<std::default_delete<SampleStruct>, void>() [42]
                0.21    1.33 200000020/200000020     std::__uniq_ptr_data<SampleStruct, std::default_delete<SampleStruct>, true, true>::__uniq_ptr_impl() [49]
-----------------------------------------------
                0.49    1.32 400000040/400000040     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::_M_deleter() [40]
[43]     0.2    0.49    1.32 400000040         std::tuple_element<1ul, std::tuple<SampleStruct*, std::default_delete<SampleStruct> > >::type& std::get<1ul, SampleStruct*, std::default_delete<SampleStruct> >(std::tuple<SampleStruct*, std::default_delete<SampleStruct> >&) [43]
                0.61    0.71 400000040/400000040     std::default_delete<SampleStruct>& std::__get_helper<1ul, std::default_delete<SampleStruct>>(std::_Tuple_impl<1ul, std::default_delete<SampleStruct>>&) [52]
-----------------------------------------------
                0.38    1.39 200000020/200000020     void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::construct<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [21]
[44]     0.2    0.38    1.39 200000020         std::tuple<int const&>::tuple(std::tuple<int const&>&&) [44]
                0.49    0.90 200000020/200000020     std::_Tuple_impl<0ul, int const&>::_Tuple_impl(std::_Tuple_impl<0ul, int const&>&&) [50]
-----------------------------------------------
                0.00    0.00       1/10000002     SampleTest_RealSample2_Test::TestBody() [428]
                0.00    0.00       1/10000002     SampleTest_PseudoSample1_Test::TestBody() [429]
                0.06    1.70 10000000/10000002     SampleTest_RealSample1_Test::TestBody() [4]
[45]     0.2    0.06    1.70 10000002         CIf::instantiate(int) [45]
                0.01    0.73 10000002/10000002     CEntity::CEntity(int) [75]
                0.01    0.47 10000002/20000004     std::unique_ptr<CIf, std::default_delete<CIf> >::~unique_ptr() [60]
                0.03    0.30 10000002/10000002     std::unique_ptr<CIf, std::default_delete<CIf> >::unique_ptr(std::unique_ptr<CIf, std::default_delete<CIf> >&&) [115]
                0.01    0.13 10000002/10000002     std::unique_ptr<CIf, std::default_delete<CIf> >::unique_ptr<std::default_delete<CIf>, void>(CIf*) [203]
                0.00    0.00 10000002/10000002     std::remove_reference<std::unique_ptr<CIf, std::default_delete<CIf> >&>::type&& std::move<std::unique_ptr<CIf, std::default_delete<CIf> >&>(std::unique_ptr<CIf, std::default_delete<CIf> >&) [615]
-----------------------------------------------
                0.00    0.00       1/10000002     SampleTest_RealSample2_Test::TestBody() [428]
                0.00    0.00       1/10000002     SampleTest_PseudoSample1_Test::TestBody() [429]
                0.08    1.57 10000000/10000002     SampleTest_RealSample1_Test::TestBody() [4]
[46]     0.2    0.08    1.57 10000002         BIf::instantiate() [46]
                0.02    0.62 10000002/10000002     BEntity::BEntity() [89]
                0.01    0.42 10000002/20000004     std::unique_ptr<BIf, std::default_delete<BIf> >::~unique_ptr() [64]
                0.05    0.24 10000002/10000002     std::unique_ptr<BIf, std::default_delete<BIf> >::unique_ptr(std::unique_ptr<BIf, std::default_delete<BIf> >&&) [124]
                0.00    0.20 10000002/10000002     std::unique_ptr<BIf, std::default_delete<BIf> >::unique_ptr<std::default_delete<BIf>, void>(BIf*) [165]
                0.00    0.00 10000002/10000002     std::remove_reference<std::unique_ptr<BIf, std::default_delete<BIf> >&>::type&& std::move<std::unique_ptr<BIf, std::default_delete<BIf> >&>(std::unique_ptr<BIf, std::default_delete<BIf> >&) [614]
-----------------------------------------------
                0.42    1.17 200000020/200000020     Target<SampleStruct, CIf>::Target(AIf const&, BIf const&, CIf const&) [8]
[47]     0.2    0.42    1.17 200000020         std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >::~unique_ptr() [47]
                0.27    0.90 200000020/1200000120     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::_M_ptr() [22]
-----------------------------------------------
                0.68    0.87 400000040/400000040     std::tuple<SampleStruct*, std::default_delete<SampleStruct> >::tuple<true, true>() [41]
[48]     0.2    0.68    0.87 400000040         std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >::_Tuple_impl() [48]
                0.40    0.28 400000040/400000040     std::_Tuple_impl<1ul, std::default_delete<SampleStruct> >::_Tuple_impl() [84]
                0.19    0.00 400000040/400000040     std::_Head_base<0ul, SampleStruct*, false>::_Head_base() [177]
-----------------------------------------------
                0.21    1.33 200000020/200000020     std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >::unique_ptr<std::default_delete<SampleStruct>, void>() [42]
[49]     0.2    0.21    1.33 200000020         std::__uniq_ptr_data<SampleStruct, std::default_delete<SampleStruct>, true, true>::__uniq_ptr_impl() [49]
                0.36    0.97 200000020/200000020     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::__uniq_ptr_impl() [51]
-----------------------------------------------
                0.49    0.90 200000020/200000020     std::tuple<int const&>::tuple(std::tuple<int const&>&&) [44]
[50]     0.2    0.49    0.90 200000020         std::_Tuple_impl<0ul, int const&>::_Tuple_impl(std::_Tuple_impl<0ul, int const&>&&) [50]
                0.27    0.23 200000020/400000040     std::_Tuple_impl<0ul, int const&>::_M_head(std::_Tuple_impl<0ul, int const&>&) [59]
                0.26    0.00 200000020/400000040     std::_Head_base<0ul, int const&, false>::_Head_base(int const&) [96]
                0.15    0.00 200000020/400000040     int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [122]
-----------------------------------------------
                0.36    0.97 200000020/200000020     std::__uniq_ptr_data<SampleStruct, std::default_delete<SampleStruct>, true, true>::__uniq_ptr_impl() [49]
[51]     0.2    0.36    0.97 200000020         std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::__uniq_ptr_impl() [51]
                0.20    0.78 200000020/400000040     std::tuple<SampleStruct*, std::default_delete<SampleStruct> >::tuple<true, true>() [41]
-----------------------------------------------
                0.61    0.71 400000040/400000040     std::tuple_element<1ul, std::tuple<SampleStruct*, std::default_delete<SampleStruct> > >::type& std::get<1ul, SampleStruct*, std::default_delete<SampleStruct> >(std::tuple<SampleStruct*, std::default_delete<SampleStruct> >&) [43]
[52]     0.2    0.61    0.71 400000040         std::default_delete<SampleStruct>& std::__get_helper<1ul, std::default_delete<SampleStruct>>(std::_Tuple_impl<1ul, std::default_delete<SampleStruct>>&) [52]
                0.52    0.19 400000040/400000040     std::_Tuple_impl<1ul, std::default_delete<SampleStruct> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<SampleStruct> >&) [78]
-----------------------------------------------
                0.27    1.05 200000020/200000020     std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >* std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_create_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [11]
[53]     0.2    0.27    1.05 200000020         std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_node() [53]
                0.23    0.72 200000020/200000020     std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >&, unsigned long) [61]
                0.10    0.00 200000020/400000040     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_Node_allocator() [168]
-----------------------------------------------
                1.28    0.00 1600000160/1600000160     __gnu_cxx::__aligned_membuf<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_ptr() const [30]
[54]     0.2    1.28    0.00 1600000160         __gnu_cxx::__aligned_membuf<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_addr() const [54]
-----------------------------------------------
                0.21    0.37 200000020/400000040     std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::operator*() const [62]
                0.21    0.37 200000020/400000040     void std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_construct_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [12]
[55]     0.1    0.43    0.74 400000040         std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_valptr() [55]
                0.43    0.31 400000040/400000040     __gnu_cxx::__aligned_membuf<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_ptr() [74]
-----------------------------------------------
                1.05    0.00 1200000120/1200000120     std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >::_M_head(std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >&) [39]
[56]     0.1    1.05    0.00 1200000120         std::_Head_base<0ul, SampleStruct*, false>::_M_head(std::_Head_base<0ul, SampleStruct*, false>&) [56]
-----------------------------------------------
                0.25    0.78 200000020/200000020     std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >::pair<int const&, 0ul>(std::tuple<int const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [28]
[57]     0.1    0.25    0.78 200000020         std::tuple_element<0ul, std::tuple<int const&> >::type& std::get<0ul, int const&>(std::tuple<int const&>&) [57]
                0.28    0.49 200000020/200000020     int const& std::__get_helper<0ul, int const&>(std::_Tuple_impl<0ul, int const&>&) [71]
-----------------------------------------------
                0.00    0.00       1/20000004     SampleTest_RealSample2_Test::TestBody() [428]
                0.00    0.00       1/20000004     SampleTest_PseudoSample1_Test::TestBody() [429]
                0.03    0.48 10000000/20000004     SampleTest_RealSample1_Test::TestBody() [4]
                0.03    0.48 10000002/20000004     AIf::instantiate(int) [38]
[58]     0.1    0.06    0.96 20000004         std::unique_ptr<AIf, std::default_delete<AIf> >::~unique_ptr() [58]
                0.03    0.73 10000002/10000002     std::default_delete<AIf>::operator()(AIf*) const [73]
                0.06    0.08 20000004/40000008     std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::_M_ptr() [127]
                0.01    0.05 10000002/10000002     std::unique_ptr<AIf, std::default_delete<AIf> >::get_deleter() [292]
                0.00    0.00 10000002/10000002     std::remove_reference<AIf*&>::type&& std::move<AIf*&>(AIf*&) [613]
-----------------------------------------------
                0.27    0.23 200000020/400000040     std::_Tuple_impl<0ul, int const&>::_Tuple_impl(std::_Tuple_impl<0ul, int const&>&&) [50]
                0.27    0.23 200000020/400000040     int const& std::__get_helper<0ul, int const&>(std::_Tuple_impl<0ul, int const&>&) [71]
[59]     0.1    0.54    0.45 400000040         std::_Tuple_impl<0ul, int const&>::_M_head(std::_Tuple_impl<0ul, int const&>&) [59]
                0.45    0.00 400000040/400000040     std::_Head_base<0ul, int const&, false>::_M_head(std::_Head_base<0ul, int const&, false>&) [99]
-----------------------------------------------
                0.00    0.00       1/20000004     SampleTest_RealSample2_Test::TestBody() [428]
                0.00    0.00       1/20000004     SampleTest_PseudoSample1_Test::TestBody() [429]
                0.01    0.47 10000000/20000004     SampleTest_RealSample1_Test::TestBody() [4]
                0.01    0.47 10000002/20000004     CIf::instantiate(int) [45]
[60]     0.1    0.03    0.94 20000004         std::unique_ptr<CIf, std::default_delete<CIf> >::~unique_ptr() [60]
                0.05    0.71 10000002/10000002     std::default_delete<CIf>::operator()(CIf*) const [72]
                0.02    0.11 20000004/40000008     std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::_M_ptr() [143]
                0.02    0.01 10000002/10000002     std::unique_ptr<CIf, std::default_delete<CIf> >::get_deleter() [333]
                0.02    0.00 10000002/10000002     std::remove_reference<CIf*&>::type&& std::move<CIf*&>(CIf*&) [396]
-----------------------------------------------
                0.23    0.72 200000020/200000020     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_node() [53]
[61]     0.1    0.23    0.72 200000020         std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >&, unsigned long) [61]
                0.49    0.23 200000020/200000020     __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::allocate(unsigned long, void const*) [77]
-----------------------------------------------
                0.33    0.58 200000020/200000020     std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::operator[](int const&) [9]
[62]     0.1    0.33    0.58 200000020         std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::operator*() const [62]
                0.21    0.37 200000020/400000040     std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_valptr() [55]
-----------------------------------------------
                0.89    0.00 1600000160/1600000160     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_S_key(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const*) [19]
[63]     0.1    0.89    0.00 1600000160         std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::operator()(std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > const&) const [63]
-----------------------------------------------
                0.00    0.00       1/20000004     SampleTest_RealSample2_Test::TestBody() [428]
                0.00    0.00       1/20000004     SampleTest_PseudoSample1_Test::TestBody() [429]
                0.01    0.42 10000000/20000004     SampleTest_RealSample1_Test::TestBody() [4]
                0.01    0.42 10000002/20000004     BIf::instantiate() [46]
[64]     0.1    0.02    0.85 20000004         std::unique_ptr<BIf, std::default_delete<BIf> >::~unique_ptr() [64]
                0.11    0.54 10000002/10000002     std::default_delete<BIf>::operator()(BIf*) const [86]
                0.02    0.12 20000004/40000008     std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::_M_ptr() [129]
                0.03    0.00 10000002/10000002     std::remove_reference<BIf*&>::type&& std::move<BIf*&>(BIf*&) [356]
                0.00    0.03 10000002/10000002     std::unique_ptr<BIf, std::default_delete<BIf> >::get_deleter() [358]
-----------------------------------------------
                0.33    0.53 200000020/200000020     std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::operator[](int const&) [9]
[65]     0.1    0.33    0.53 200000020         std::tuple<int const&>::tuple<true, true>(int const&) [65]
                0.27    0.26 200000020/200000020     std::_Tuple_impl<0ul, int const&>::_Tuple_impl(int const&) [93]
-----------------------------------------------
                0.05    0.80 10000002/10000002     AIf::instantiate(int) [38]
[66]     0.1    0.05    0.80 10000002         AEntity::AEntity(int) [66]
                0.01    0.38 10000002/10000002     std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::reset(AEntity::Impl*) [105]
                0.02    0.23 10000002/10000002     AEntity::Impl::Impl(int) [144]
                0.04    0.11 10000002/10000002     std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::unique_ptr<std::default_delete<AEntity::Impl>, void>() [201]
                0.01    0.00 10000002/10000002     AIf::AIf() [414]
-----------------------------------------------
                0.01    0.00 10000001/820000084     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_unique_pos(int const&) [154]
                0.01    0.00 10000002/820000084     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::begin() [406]
                0.20    0.00 200000020/820000084     std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_const_cast() const [90]
                0.20    0.00 200000020/820000084     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_insert_node(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*) [27]
                0.20    0.00 200000020/820000084     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_lower_bound(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*, std::_Rb_tree_node_base*, int const&) [16]
                0.20    0.00 200000021/820000084     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::end() [87]
[67]     0.1    0.83    0.00 820000084         std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_Rb_tree_iterator(std::_Rb_tree_node_base*) [67]
-----------------------------------------------
                0.16    0.00 200000020/1000000100     void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::construct<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [21]
                0.16    0.00 200000020/1000000100     void std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > > >::construct<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >&, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [17]
                0.16    0.00 200000020/1000000100     std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >* std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_create_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [11]
                0.16    0.00 200000020/1000000100     void std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_construct_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [12]
                0.16    0.00 200000020/1000000100     std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [10]
[68]     0.1    0.82    0.00 1000000100         std::tuple<int const&>&& std::forward<std::tuple<int const&> >(std::remove_reference<std::tuple<int const&> >::type&) [68]
-----------------------------------------------
                0.16    0.00 200000020/1000000100     void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::construct<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [21]
                0.16    0.00 200000020/1000000100     void std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > > >::construct<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >&, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [17]
                0.16    0.00 200000020/1000000100     std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >* std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_create_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [11]
                0.16    0.00 200000020/1000000100     void std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_construct_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [12]
                0.16    0.00 200000020/1000000100     std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [10]
[69]     0.1    0.79    0.00 1000000100         std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [69]
-----------------------------------------------
                0.00    0.00       1/200000021     Target<SampleStruct, CIf>::Target(Target<SampleStruct, CIf> const&) [433]
                0.14    0.64 200000020/200000021     std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::operator[](int const&) [9]
[70]     0.1    0.14    0.64 200000021         std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::end() [70]
                0.44    0.20 200000021/200000021     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::end() [87]
-----------------------------------------------
                0.28    0.49 200000020/200000020     std::tuple_element<0ul, std::tuple<int const&> >::type& std::get<0ul, int const&>(std::tuple<int const&>&) [57]
[71]     0.1    0.28    0.49 200000020         int const& std::__get_helper<0ul, int const&>(std::_Tuple_impl<0ul, int const&>&) [71]
                0.27    0.23 200000020/400000040     std::_Tuple_impl<0ul, int const&>::_M_head(std::_Tuple_impl<0ul, int const&>&) [59]
-----------------------------------------------
                0.05    0.71 10000002/10000002     std::unique_ptr<CIf, std::default_delete<CIf> >::~unique_ptr() [60]
[72]     0.1    0.05    0.71 10000002         std::default_delete<CIf>::operator()(CIf*) const [72]
                0.00    0.71 10000002/10000002     CEntity::~CEntity() [79]
-----------------------------------------------
                0.03    0.73 10000002/10000002     std::unique_ptr<AIf, std::default_delete<AIf> >::~unique_ptr() [58]
[73]     0.1    0.03    0.73 10000002         std::default_delete<AIf>::operator()(AIf*) const [73]
                0.04    0.69 10000002/10000002     AEntity::~AEntity() [76]
-----------------------------------------------
                0.43    0.31 400000040/400000040     std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_valptr() [55]
[74]     0.1    0.43    0.31 400000040         __gnu_cxx::__aligned_membuf<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_ptr() [74]
                0.31    0.00 400000040/400000040     __gnu_cxx::__aligned_membuf<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_addr() [120]
-----------------------------------------------
                0.01    0.73 10000002/10000002     CIf::instantiate(int) [45]
[75]     0.1    0.01    0.73 10000002         CEntity::CEntity(int) [75]
                0.06    0.30 10000002/10000002     std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::reset(CEntity::Impl*) [114]
                0.02    0.24 10000002/10000002     CEntity::Impl::Impl(int) [138]
                0.02    0.09 10000002/10000002     std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::unique_ptr<std::default_delete<CEntity::Impl>, void>() [237]
                0.00    0.00 10000002/10000002     CIf::CIf() [575]
-----------------------------------------------
                0.04    0.69 10000002/10000002     std::default_delete<AIf>::operator()(AIf*) const [73]
[76]     0.1    0.04    0.69 10000002         AEntity::~AEntity() [76]
                0.00    0.69 10000002/10000002     AEntity::~AEntity() [83]
-----------------------------------------------
                0.49    0.23 200000020/200000020     std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >&, unsigned long) [61]
[77]     0.1    0.49    0.23 200000020         __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::allocate(unsigned long, void const*) [77]
                0.23    0.00 200000020/200000020     __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_max_size() const [155]
-----------------------------------------------
                0.52    0.19 400000040/400000040     std::default_delete<SampleStruct>& std::__get_helper<1ul, std::default_delete<SampleStruct>>(std::_Tuple_impl<1ul, std::default_delete<SampleStruct>>&) [52]
[78]     0.1    0.52    0.19 400000040         std::_Tuple_impl<1ul, std::default_delete<SampleStruct> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<SampleStruct> >&) [78]
                0.19    0.00 400000040/400000040     std::_Head_base<1ul, std::default_delete<SampleStruct>, true>::_M_head(std::_Head_base<1ul, std::default_delete<SampleStruct>, true>&) [178]
-----------------------------------------------
                0.00    0.71 10000002/10000002     std::default_delete<CIf>::operator()(CIf*) const [72]
[79]     0.1    0.00    0.71 10000002         CEntity::~CEntity() [79]
                0.00    0.71 10000002/10000002     CEntity::~CEntity() [80]
-----------------------------------------------
                0.00    0.71 10000002/10000002     CEntity::~CEntity() [79]
[80]     0.1    0.00    0.71 10000002         CEntity::~CEntity() [80]
                0.05    0.66 10000002/10000002     std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::~unique_ptr() [81]
                0.00    0.00 10000002/10000002     CIf::~CIf() [576]
-----------------------------------------------
                0.05    0.66 10000002/10000002     CEntity::~CEntity() [80]
[81]     0.1    0.05    0.66 10000002         std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::~unique_ptr() [81]
                0.10    0.32 10000002/10000002     std::default_delete<CEntity::Impl>::operator()(CEntity::Impl*) const [101]
                0.04    0.07 10000002/10000002     std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::get_deleter() [236]
                0.01    0.09 10000002/30000006     std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::_M_ptr() [131]
                0.04    0.00 10000002/20000004     std::remove_reference<CEntity::Impl*&>::type&& std::move<CEntity::Impl*&>(CEntity::Impl*&) [265]
-----------------------------------------------
                0.69    0.00 830000083/830000083     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_lower_bound(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*, std::_Rb_tree_node_base*, int const&) [16]
[82]     0.1    0.69    0.00 830000083         std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_S_right(std::_Rb_tree_node_base*) [82]
-----------------------------------------------
                0.00    0.69 10000002/10000002     AEntity::~AEntity() [76]
[83]     0.1    0.00    0.69 10000002         AEntity::~AEntity() [83]
                0.05    0.61 10000002/10000002     std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::~unique_ptr() [85]
                0.03    0.00 10000002/10000002     AIf::~AIf() [339]
-----------------------------------------------
                0.40    0.28 400000040/400000040     std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >::_Tuple_impl() [48]
[84]     0.1    0.40    0.28 400000040         std::_Tuple_impl<1ul, std::default_delete<SampleStruct> >::_Tuple_impl() [84]
                0.28    0.00 400000040/400000040     std::_Head_base<1ul, std::default_delete<SampleStruct>, true>::_Head_base() [130]
-----------------------------------------------
                0.05    0.61 10000002/10000002     AEntity::~AEntity() [83]
[85]     0.1    0.05    0.61 10000002         std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::~unique_ptr() [85]
                0.03    0.22 10000002/10000002     std::default_delete<AEntity::Impl>::operator()(AEntity::Impl*) const [148]
                0.04    0.16 10000002/10000002     std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::get_deleter() [172]
                0.05    0.09 10000002/30000006     std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::_M_ptr() [100]
                0.02    0.00 10000002/20000004     std::remove_reference<AEntity::Impl*&>::type&& std::move<AEntity::Impl*&>(AEntity::Impl*&) [320]
-----------------------------------------------
                0.11    0.54 10000002/10000002     std::unique_ptr<BIf, std::default_delete<BIf> >::~unique_ptr() [64]
[86]     0.1    0.11    0.54 10000002         std::default_delete<BIf>::operator()(BIf*) const [86]
                0.02    0.52 10000002/10000002     BEntity::~BEntity() [91]
-----------------------------------------------
                0.44    0.20 200000021/200000021     std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::end() [70]
[87]     0.1    0.44    0.20 200000021         std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::end() [87]
                0.20    0.00 200000021/820000084     std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_Rb_tree_iterator(std::_Rb_tree_node_base*) [67]
-----------------------------------------------
                0.13    0.00 200000020/1000000100     void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::construct<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [21]
                0.13    0.00 200000020/1000000100     void std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > > >::construct<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >&, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [17]
                0.13    0.00 200000020/1000000100     std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >* std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_create_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [11]
                0.13    0.00 200000020/1000000100     void std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_construct_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [12]
                0.13    0.00 200000020/1000000100     std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [10]
[88]     0.1    0.64    0.00 1000000100         std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [88]
-----------------------------------------------
                0.02    0.62 10000002/10000002     BIf::instantiate() [46]
[89]     0.1    0.02    0.62 10000002         BEntity::BEntity() [89]
                0.04    0.22 10000002/10000002     BEntity::Impl::Impl() [139]
                0.02    0.17 10000002/10000002     std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::unique_ptr<std::default_delete<BEntity::Impl>, void>() [179]
                0.03    0.12 10000002/10000002     std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::reset(BEntity::Impl*) [202]
                0.02    0.00 10000002/10000002     BIf::BIf() [372]
-----------------------------------------------
                0.39    0.20 200000020/200000020     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, int const&) [25]
[90]     0.1    0.39    0.20 200000020         std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_const_cast() const [90]
                0.20    0.00 200000020/820000084     std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_Rb_tree_iterator(std::_Rb_tree_node_base*) [67]
-----------------------------------------------
                0.02    0.52 10000002/10000002     std::default_delete<BIf>::operator()(BIf*) const [86]
[91]     0.1    0.02    0.52 10000002         BEntity::~BEntity() [91]
                0.00    0.52 10000002/10000002     BEntity::~BEntity() [95]
-----------------------------------------------
                0.01    0.01 10000001/210000021     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_unique_pos(int const&) [154]
                0.23    0.28 200000020/210000021     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::lower_bound(int const&) [14]
[92]     0.1    0.24    0.29 210000021         std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_begin() [92]
                0.29    0.00 210000021/210000021     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_mbegin() const [126]
-----------------------------------------------
                0.27    0.26 200000020/200000020     std::tuple<int const&>::tuple<true, true>(int const&) [65]
[93]     0.1    0.27    0.26 200000020         std::_Tuple_impl<0ul, int const&>::_Tuple_impl(int const&) [93]
                0.26    0.00 200000020/400000040     std::_Head_base<0ul, int const&, false>::_Head_base(int const&) [96]
-----------------------------------------------
                0.36    0.16 190000019/190000019     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, int const&) [25]
[94]     0.1    0.36    0.16 190000019         std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*>::pair<std::_Rb_tree_node_base*&, true>(std::_Rb_tree_node_base* const&, std::_Rb_tree_node_base*&) [94]
                0.16    0.00 190000019/200000020     std::_Rb_tree_node_base*& std::forward<std::_Rb_tree_node_base*&>(std::remove_reference<std::_Rb_tree_node_base*&>::type&) [186]
-----------------------------------------------
                0.00    0.52 10000002/10000002     BEntity::~BEntity() [91]
[95]     0.1    0.00    0.52 10000002         BEntity::~BEntity() [95]
                0.06    0.44 10000002/10000002     std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::~unique_ptr() [97]
                0.02    0.00 10000002/10000002     BIf::~BIf() [373]
-----------------------------------------------
                0.26    0.00 200000020/400000040     std::_Tuple_impl<0ul, int const&>::_Tuple_impl(std::_Tuple_impl<0ul, int const&>&&) [50]
                0.26    0.00 200000020/400000040     std::_Tuple_impl<0ul, int const&>::_Tuple_impl(int const&) [93]
[96]     0.1    0.51    0.00 400000040         std::_Head_base<0ul, int const&, false>::_Head_base(int const&) [96]
-----------------------------------------------
                0.06    0.44 10000002/10000002     BEntity::~BEntity() [95]
[97]     0.1    0.06    0.44 10000002         std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::~unique_ptr() [97]
                0.00    0.27 10000002/10000002     std::default_delete<BEntity::Impl>::operator()(BEntity::Impl*) const [136]
                0.00    0.12 10000002/10000002     std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::get_deleter() [226]
                0.01    0.04 10000002/30000006     std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::_M_ptr() [215]
                0.01    0.00 10000002/20000004     std::remove_reference<BEntity::Impl*&>::type&& std::move<BEntity::Impl*&>(BEntity::Impl*&) [367]
-----------------------------------------------
                                                 <spontaneous>
[98]     0.1    0.48    0.00                 operator new(unsigned long) [98]
-----------------------------------------------
                0.45    0.00 400000040/400000040     std::_Tuple_impl<0ul, int const&>::_M_head(std::_Tuple_impl<0ul, int const&>&) [59]
[99]     0.1    0.45    0.00 400000040         std::_Head_base<0ul, int const&, false>::_M_head(std::_Head_base<0ul, int const&, false>&) [99]
-----------------------------------------------
                0.05    0.09 10000002/30000006     std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::~unique_ptr() [85]
                0.10    0.18 20000004/30000006     std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::reset(AEntity::Impl*) [113]
[100]    0.1    0.15    0.27 30000006         std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::_M_ptr() [100]
                0.02    0.25 30000006/30000006     std::tuple_element<0ul, std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> > >::type& std::get<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> >&) [134]
-----------------------------------------------
                0.10    0.32 10000002/10000002     std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::~unique_ptr() [81]
[101]    0.1    0.10    0.32 10000002         std::default_delete<CEntity::Impl>::operator()(CEntity::Impl*) const [101]
                0.00    0.32 10000002/10000002     CEntity::Impl::~Impl() [118]
-----------------------------------------------
                0.00    0.00       1/400000051     void __gnu_cxx::new_allocator<testing::TestEventListener*>::construct<testing::TestEventListener*, testing::TestEventListener* const&>(testing::TestEventListener**, testing::TestEventListener* const&) [438]
                0.00    0.00       1/400000051     void __gnu_cxx::new_allocator<testing::TestSuite*>::construct<testing::TestSuite*, testing::TestSuite* const&>(testing::TestSuite**, testing::TestSuite* const&) [439]
                0.00    0.00       1/400000051     void __gnu_cxx::new_allocator<std::string>::construct<std::string, std::string>(std::string*, std::string&&) [440]
                0.00    0.00       1/400000051     void std::_Construct<std::string, std::string const&>(std::string*, std::string const&) [441]
                0.00    0.00       3/400000051     void __gnu_cxx::new_allocator<testing::TestInfo*>::construct<testing::TestInfo*, testing::TestInfo* const&>(testing::TestInfo**, testing::TestInfo* const&) [435]
                0.00    0.00       4/400000051     void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [434]
                0.20    0.00 200000020/400000051     void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::construct<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [21]
                0.20    0.00 200000020/400000051     void std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_construct_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [12]
[102]    0.0    0.41    0.00 400000051         operator new(unsigned long, void*) [102]
-----------------------------------------------
                0.00    0.00       1/10000002     TargetIf<SampleStruct, CIf>::clone(TargetIf<SampleStruct, CIf> const&) [430]
                0.03    0.36 10000001/10000002     TargetIf<SampleStruct, CIf>::instantiate(AIf const&, BIf const&, CIf const&) [5]
[103]    0.0    0.03    0.36 10000002         std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::unique_ptr(std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [103]
                0.00    0.36 10000002/10000002     std::__uniq_ptr_data<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> >, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> >, true, true>&&) [111]
-----------------------------------------------
                0.39    0.00 380000038/380000038     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, int const&) [25]
[104]    0.0    0.39    0.00 380000038         std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_rightmost() [104]
-----------------------------------------------
                0.01    0.38 10000002/10000002     AEntity::AEntity(int) [66]
[105]    0.0    0.01    0.38 10000002         std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::reset(AEntity::Impl*) [105]
                0.08    0.28 10000002/10000002     std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::reset(AEntity::Impl*) [113]
                0.02    0.00 10000002/20000004     std::remove_reference<AEntity::Impl*&>::type&& std::move<AEntity::Impl*&>(AEntity::Impl*&) [320]
-----------------------------------------------
                0.00    0.00       1/20000005     SampleTest_PseudoSample1_Test::TestBody() [429]
                0.00    0.00       1/20000005     TargetIf<SampleStruct, CIf>::clone(TargetIf<SampleStruct, CIf> const&) [430]
                0.00    0.00       2/20000005     SampleTest_RealSample2_Test::TestBody() [428]
                0.04    0.15 10000000/20000005     SampleTest_RealSample1_Test::TestBody() [4]
                0.04    0.15 10000001/20000005     TargetIf<SampleStruct, CIf>::instantiate(AIf const&, BIf const&, CIf const&) [5]
[106]    0.0    0.08    0.31 20000005         std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::~unique_ptr() [106]
                0.02    0.13 20000005/40000010     std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_ptr() [125]
                0.00    0.14 10000003/10000003     std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::get_deleter() [205]
                0.02    0.00 10000003/10000003     std::remove_reference<TargetIf<SampleStruct, CIf>*&>::type&& std::move<TargetIf<SampleStruct, CIf>*&>(TargetIf<SampleStruct, CIf>*&) [370]
                0.00    0.00 10000003/10000003     std::default_delete<TargetIf<SampleStruct, CIf> >::operator()(TargetIf<SampleStruct, CIf>*) const [572]
-----------------------------------------------
                0.01    0.00 10000001/610000061     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_unique_pos(int const&) [154]
                0.12    0.00 200000020/610000061     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::lower_bound(int const&) [14]
                0.12    0.00 200000020/610000061     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_insert_node(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*) [27]
                0.12    0.00 200000020/610000061     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, int const&) [25]
[107]    0.0    0.38    0.00 610000061         std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_end() [107]
-----------------------------------------------
                0.00    0.38 10000002/10000002     AIf::instantiate(int) [38]
[108]    0.0    0.00    0.38 10000002         std::unique_ptr<AIf, std::default_delete<AIf> >::unique_ptr(std::unique_ptr<AIf, std::default_delete<AIf> >&&) [108]
                0.00    0.38 10000002/10000002     std::__uniq_ptr_data<AIf, std::default_delete<AIf>, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<AIf, std::default_delete<AIf>, true, true>&&) [109]
-----------------------------------------------
                0.00    0.38 10000002/10000002     std::unique_ptr<AIf, std::default_delete<AIf> >::unique_ptr(std::unique_ptr<AIf, std::default_delete<AIf> >&&) [108]
[109]    0.0    0.00    0.38 10000002         std::__uniq_ptr_data<AIf, std::default_delete<AIf>, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<AIf, std::default_delete<AIf>, true, true>&&) [109]
                0.02    0.36 10000002/10000002     std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >&&) [110]
-----------------------------------------------
                0.02    0.36 10000002/10000002     std::__uniq_ptr_data<AIf, std::default_delete<AIf>, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<AIf, std::default_delete<AIf>, true, true>&&) [109]
[110]    0.0    0.02    0.36 10000002         std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >&&) [110]
                0.04    0.22 10000002/10000002     std::tuple<AIf*, std::default_delete<AIf> >::tuple(std::tuple<AIf*, std::default_delete<AIf> >&&) [137]
                0.03    0.04 10000002/40000008     std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::_M_ptr() [127]
                0.02    0.00 10000002/10000002     std::remove_reference<std::tuple<AIf*, std::default_delete<AIf> >&>::type&& std::move<std::tuple<AIf*, std::default_delete<AIf> >&>(std::tuple<AIf*, std::default_delete<AIf> >&) [400]
-----------------------------------------------
                0.00    0.36 10000002/10000002     std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::unique_ptr(std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [103]
[111]    0.0    0.00    0.36 10000002         std::__uniq_ptr_data<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> >, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> >, true, true>&&) [111]
                0.04    0.32 10000002/10000002     std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::__uniq_ptr_impl(std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [112]
-----------------------------------------------
                0.04    0.32 10000002/10000002     std::__uniq_ptr_data<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> >, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> >, true, true>&&) [111]
[112]    0.0    0.04    0.32 10000002         std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::__uniq_ptr_impl(std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [112]
                0.00    0.24 10000002/10000002     std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::tuple(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [152]
                0.01    0.06 10000002/40000010     std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_ptr() [125]
                0.01    0.00 10000002/10000002     std::remove_reference<std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&>::type&& std::move<std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&>(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [426]
-----------------------------------------------
                0.08    0.28 10000002/10000002     std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::reset(AEntity::Impl*) [105]
[113]    0.0    0.08    0.28 10000002         std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::reset(AEntity::Impl*) [113]
                0.10    0.18 20000004/30000006     std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::_M_ptr() [100]
-----------------------------------------------
                0.06    0.30 10000002/10000002     CEntity::CEntity(int) [75]
[114]    0.0    0.06    0.30 10000002         std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::reset(CEntity::Impl*) [114]
                0.07    0.19 10000002/10000002     std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::reset(CEntity::Impl*) [142]
                0.04    0.00 10000002/20000004     std::remove_reference<CEntity::Impl*&>::type&& std::move<CEntity::Impl*&>(CEntity::Impl*&) [265]
-----------------------------------------------
                0.03    0.30 10000002/10000002     CIf::instantiate(int) [45]
[115]    0.0    0.03    0.30 10000002         std::unique_ptr<CIf, std::default_delete<CIf> >::unique_ptr(std::unique_ptr<CIf, std::default_delete<CIf> >&&) [115]
                0.02    0.28 10000002/10000002     std::__uniq_ptr_data<CIf, std::default_delete<CIf>, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<CIf, std::default_delete<CIf>, true, true>&&) [121]
-----------------------------------------------
                0.00    0.00       1/10000002     TargetEntity<SampleStruct, CIf>::TargetEntity(TargetIf<SampleStruct, CIf> const&) [431]
                0.05    0.28 10000001/10000002     TargetEntity<SampleStruct, CIf>::TargetEntity(AIf const&, BIf const&, CIf const&) [6]
[116]    0.0    0.05    0.28 10000002         std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::reset(TargetEntity<SampleStruct, CIf>::Impl*) [116]
                0.13    0.13 10000002/10000002     std::__uniq_ptr_impl<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::reset(TargetEntity<SampleStruct, CIf>::Impl*) [141]
                0.02    0.00 10000002/10000002     std::remove_reference<TargetEntity<SampleStruct, CIf>::Impl*&>::type&& std::move<TargetEntity<SampleStruct, CIf>::Impl*&>(TargetEntity<SampleStruct, CIf>::Impl*&) [397]
-----------------------------------------------
                0.32    0.00 200000020/200000020     Target<SampleStruct, CIf>::Target(AIf const&, BIf const&, CIf const&) [8]
[117]    0.0    0.32    0.00 200000020         SampleStruct::SampleStruct(int) [117]
-----------------------------------------------
                0.00    0.32 10000002/10000002     std::default_delete<CEntity::Impl>::operator()(CEntity::Impl*) const [101]
[118]    0.0    0.00    0.32 10000002         CEntity::Impl::~Impl() [118]
                0.02    0.30 10000002/10000002     std::unique_ptr<C, std::default_delete<C> >::~unique_ptr() [119]
-----------------------------------------------
                0.02    0.30 10000002/10000002     CEntity::Impl::~Impl() [118]
[119]    0.0    0.02    0.30 10000002         std::unique_ptr<C, std::default_delete<C> >::~unique_ptr() [119]
                0.04    0.16 10000002/10000002     std::unique_ptr<C, std::default_delete<C> >::get_deleter() [171]
                0.01    0.06 10000002/30000006     std::__uniq_ptr_impl<C, std::default_delete<C> >::_M_ptr() [170]
                0.02    0.00 10000002/10000002     std::default_delete<C>::operator()(C*) const [376]
                0.01    0.00 10000002/20000004     std::remove_reference<C*&>::type&& std::move<C*&>(C*&) [366]
-----------------------------------------------
                0.31    0.00 400000040/400000040     __gnu_cxx::__aligned_membuf<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_ptr() [74]
[120]    0.0    0.31    0.00 400000040         __gnu_cxx::__aligned_membuf<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_addr() [120]
-----------------------------------------------
                0.02    0.28 10000002/10000002     std::unique_ptr<CIf, std::default_delete<CIf> >::unique_ptr(std::unique_ptr<CIf, std::default_delete<CIf> >&&) [115]
[121]    0.0    0.02    0.28 10000002         std::__uniq_ptr_data<CIf, std::default_delete<CIf>, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<CIf, std::default_delete<CIf>, true, true>&&) [121]
                0.04    0.24 10000002/10000002     std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >&&) [128]
-----------------------------------------------
                0.15    0.00 200000020/400000040     std::_Tuple_impl<0ul, int const&>::_Tuple_impl(std::_Tuple_impl<0ul, int const&>&&) [50]
                0.15    0.00 200000020/400000040     std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >::pair<int const&, 0ul>(std::tuple<int const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [28]
[122]    0.0    0.30    0.00 400000040         int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [122]
-----------------------------------------------
                0.01    0.00 10000001/210000021     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_unique_pos(int const&) [154]
                0.29    0.00 200000020/210000021     std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::operator[](int const&) [9]
[123]    0.0    0.30    0.00 210000021         std::operator==(std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&, std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&) [123]
-----------------------------------------------
                0.05    0.24 10000002/10000002     BIf::instantiate() [46]
[124]    0.0    0.05    0.24 10000002         std::unique_ptr<BIf, std::default_delete<BIf> >::unique_ptr(std::unique_ptr<BIf, std::default_delete<BIf> >&&) [124]
                0.03    0.21 10000002/10000002     std::__uniq_ptr_data<BIf, std::default_delete<BIf>, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<BIf, std::default_delete<BIf>, true, true>&&) [149]
-----------------------------------------------
                0.01    0.06 10000002/40000010     std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::__uniq_ptr_impl(std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [112]
                0.01    0.06 10000003/40000010     std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::__uniq_ptr_impl(TargetIf<SampleStruct, CIf>*) [193]
                0.02    0.13 20000005/40000010     std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::~unique_ptr() [106]
[125]    0.0    0.04    0.25 40000010         std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_ptr() [125]
                0.09    0.16 40000010/40000010     std::tuple_element<0ul, std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > >::type& std::get<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [145]
-----------------------------------------------
                0.29    0.00 210000021/210000021     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_begin() [92]
[126]    0.0    0.29    0.00 210000021         std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_mbegin() const [126]
-----------------------------------------------
                0.03    0.04 10000002/40000008     std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >&&) [110]
                0.03    0.04 10000002/40000008     std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::__uniq_ptr_impl(AIf*) [164]
                0.06    0.08 20000004/40000008     std::unique_ptr<AIf, std::default_delete<AIf> >::~unique_ptr() [58]
[127]    0.0    0.12    0.17 40000008         std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::_M_ptr() [127]
                0.04    0.13 40000008/40000008     std::tuple_element<0ul, std::tuple<AIf*, std::default_delete<AIf> > >::type& std::get<0ul, AIf*, std::default_delete<AIf> >(std::tuple<AIf*, std::default_delete<AIf> >&) [191]
-----------------------------------------------
                0.04    0.24 10000002/10000002     std::__uniq_ptr_data<CIf, std::default_delete<CIf>, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<CIf, std::default_delete<CIf>, true, true>&&) [121]
[128]    0.0    0.04    0.24 10000002         std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >&&) [128]
                0.01    0.17 10000002/10000002     std::tuple<CIf*, std::default_delete<CIf> >::tuple(std::tuple<CIf*, std::default_delete<CIf> >&&) [181]
                0.01    0.05 10000002/40000008     std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::_M_ptr() [143]
                0.00    0.00 10000002/10000002     std::remove_reference<std::tuple<CIf*, std::default_delete<CIf> >&>::type&& std::move<std::tuple<CIf*, std::default_delete<CIf> >&>(std::tuple<CIf*, std::default_delete<CIf> >&) [617]
-----------------------------------------------
                0.01    0.06 10000002/40000008     std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >&&) [160]
                0.01    0.06 10000002/40000008     std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::__uniq_ptr_impl(BIf*) [167]
                0.02    0.12 20000004/40000008     std::unique_ptr<BIf, std::default_delete<BIf> >::~unique_ptr() [64]
[129]    0.0    0.04    0.24 40000008         std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::_M_ptr() [129]
                0.09    0.15 40000008/40000008     std::tuple_element<0ul, std::tuple<BIf*, std::default_delete<BIf> > >::type& std::get<0ul, BIf*, std::default_delete<BIf> >(std::tuple<BIf*, std::default_delete<BIf> >&) [150]
-----------------------------------------------
                0.28    0.00 400000040/400000040     std::_Tuple_impl<1ul, std::default_delete<SampleStruct> >::_Tuple_impl() [84]
[130]    0.0    0.28    0.00 400000040         std::_Head_base<1ul, std::default_delete<SampleStruct>, true>::_Head_base() [130]
-----------------------------------------------
                0.01    0.09 10000002/30000006     std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::~unique_ptr() [81]
                0.01    0.17 20000004/30000006     std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::reset(CEntity::Impl*) [142]
[131]    0.0    0.02    0.26 30000006         std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::_M_ptr() [131]
                0.04    0.22 30000006/30000006     std::tuple_element<0ul, std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> > >::type& std::get<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >(std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> >&) [140]
-----------------------------------------------
                0.00    0.00       1/10000002     TargetEntity<SampleStruct, CIf>::Impl::Impl(TargetIf<SampleStruct, CIf> const&) [432]
                0.05    0.23 10000001/10000002     TargetEntity<SampleStruct, CIf>::Impl::Impl(AIf const&, BIf const&, CIf const&) [7]
[132]    0.0    0.05    0.23 10000002         std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::reset(Target<SampleStruct, CIf>*) [132]
                0.06    0.14 10000002/10000002     std::__uniq_ptr_impl<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::reset(Target<SampleStruct, CIf>*) [173]
                0.03    0.00 10000002/10000002     std::remove_reference<Target<SampleStruct, CIf>*&>::type&& std::move<Target<SampleStruct, CIf>*&>(Target<SampleStruct, CIf>*&) [357]
-----------------------------------------------
                0.00    0.00       1/10000003     SampleTest_PseudoSample1_Test::TestBody() [429]
                0.00    0.00       1/10000003     TargetIf<SampleStruct, CIf>::clone(TargetIf<SampleStruct, CIf> const&) [430]
                0.09    0.18 10000001/10000003     TargetIf<SampleStruct, CIf>::instantiate(AIf const&, BIf const&, CIf const&) [5]
[133]    0.0    0.09    0.18 10000003         std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::unique_ptr<std::default_delete<TargetIf<SampleStruct, CIf> >, void>(TargetIf<SampleStruct, CIf>*) [133]
                0.02    0.16 10000003/10000003     std::__uniq_ptr_data<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> >, true, true>::__uniq_ptr_impl(TargetIf<SampleStruct, CIf>*) [180]
-----------------------------------------------
                0.02    0.25 30000006/30000006     std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::_M_ptr() [100]
[134]    0.0    0.02    0.25 30000006         std::tuple_element<0ul, std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> > >::type& std::get<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> >&) [134]
                0.10    0.15 30000006/30000006     AEntity::Impl*& std::__get_helper<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >&) [147]
-----------------------------------------------
                0.03    0.24 10000002/10000002     std::default_delete<BEntity::Impl>::operator()(BEntity::Impl*) const [136]
[135]    0.0    0.03    0.24 10000002         BEntity::Impl::~Impl() [135]
                0.06    0.18 10000002/10000002     std::unique_ptr<B, std::default_delete<B> >::~unique_ptr() [153]
-----------------------------------------------
                0.00    0.27 10000002/10000002     std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::~unique_ptr() [97]
[136]    0.0    0.00    0.27 10000002         std::default_delete<BEntity::Impl>::operator()(BEntity::Impl*) const [136]
                0.03    0.24 10000002/10000002     BEntity::Impl::~Impl() [135]
-----------------------------------------------
                0.04    0.22 10000002/10000002     std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >&&) [110]
[137]    0.0    0.04    0.22 10000002         std::tuple<AIf*, std::default_delete<AIf> >::tuple(std::tuple<AIf*, std::default_delete<AIf> >&&) [137]
                0.05    0.17 10000002/10000002     std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_Tuple_impl(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&&) [156]
-----------------------------------------------
                0.02    0.24 10000002/10000002     CEntity::CEntity(int) [75]
[138]    0.0    0.02    0.24 10000002         CEntity::Impl::Impl(int) [138]
                0.00    0.16 10000002/10000002     std::unique_ptr<C, std::default_delete<C> >::reset(C*) [192]
                0.02    0.06 10000002/10000002     std::unique_ptr<C, std::default_delete<C> >::unique_ptr<std::default_delete<C>, void>() [267]
                0.00    0.00 10000002/10000002     C::C(int) [574]
-----------------------------------------------
                0.04    0.22 10000002/10000002     BEntity::BEntity() [89]
[139]    0.0    0.04    0.22 10000002         BEntity::Impl::Impl() [139]
                0.04    0.15 10000002/10000002     std::unique_ptr<B, std::default_delete<B> >::reset(B*) [176]
                0.00    0.02 10000002/10000002     std::unique_ptr<B, std::default_delete<B> >::unique_ptr<std::default_delete<B>, void>() [387]
                0.01    0.00 10000002/10000002     B::B() [413]
-----------------------------------------------
                0.04    0.22 30000006/30000006     std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::_M_ptr() [131]
[140]    0.0    0.04    0.22 30000006         std::tuple_element<0ul, std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> > >::type& std::get<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >(std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> >&) [140]
                0.08    0.14 30000006/30000006     CEntity::Impl*& std::__get_helper<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >(std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >&) [157]
-----------------------------------------------
                0.13    0.13 10000002/10000002     std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::reset(TargetEntity<SampleStruct, CIf>::Impl*) [116]
[141]    0.0    0.13    0.13 10000002         std::__uniq_ptr_impl<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::reset(TargetEntity<SampleStruct, CIf>::Impl*) [141]
                0.02    0.11 20000004/20000004     std::__uniq_ptr_impl<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_M_ptr() [216]
-----------------------------------------------
                0.07    0.19 10000002/10000002     std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::reset(CEntity::Impl*) [114]
[142]    0.0    0.07    0.19 10000002         std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::reset(CEntity::Impl*) [142]
                0.01    0.17 20000004/30000006     std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::_M_ptr() [131]
-----------------------------------------------
                0.01    0.05 10000002/40000008     std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >&&) [128]
                0.01    0.05 10000002/40000008     std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::__uniq_ptr_impl(CIf*) [232]
                0.02    0.11 20000004/40000008     std::unique_ptr<CIf, std::default_delete<CIf> >::~unique_ptr() [60]
[143]    0.0    0.04    0.21 40000008         std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::_M_ptr() [143]
                0.02    0.19 40000008/40000008     std::tuple_element<0ul, std::tuple<CIf*, std::default_delete<CIf> > >::type& std::get<0ul, CIf*, std::default_delete<CIf> >(std::tuple<CIf*, std::default_delete<CIf> >&) [159]
-----------------------------------------------
                0.02    0.23 10000002/10000002     AEntity::AEntity(int) [66]
[144]    0.0    0.02    0.23 10000002         AEntity::Impl::Impl(int) [144]
                0.06    0.09 10000002/10000002     std::unique_ptr<A, std::default_delete<A> >::reset(A*) [198]
                0.04    0.02 10000002/10000002     std::unique_ptr<A, std::default_delete<A> >::unique_ptr<std::default_delete<A>, void>() [291]
                0.02    0.00 10000002/10000002     A::A(int) [371]
-----------------------------------------------
                0.09    0.16 40000010/40000010     std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_ptr() [125]
[145]    0.0    0.09    0.16 40000010         std::tuple_element<0ul, std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > >::type& std::get<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [145]
                0.08    0.08 40000010/40000010     TargetIf<SampleStruct, CIf>*& std::__get_helper<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [194]
-----------------------------------------------
                0.25    0.00 200000020/200000020     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, int const&) [25]
[146]    0.0    0.25    0.00 200000020         std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::size() const [146]
-----------------------------------------------
                0.10    0.15 30000006/30000006     std::tuple_element<0ul, std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> > >::type& std::get<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> >&) [134]
[147]    0.0    0.10    0.15 30000006         AEntity::Impl*& std::__get_helper<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >&) [147]
                0.09    0.06 30000006/30000006     std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >::_M_head(std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >&) [200]
-----------------------------------------------
                0.03    0.22 10000002/10000002     std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::~unique_ptr() [85]
[148]    0.0    0.03    0.22 10000002         std::default_delete<AEntity::Impl>::operator()(AEntity::Impl*) const [148]
                0.02    0.20 10000002/10000002     AEntity::Impl::~Impl() [158]
-----------------------------------------------
                0.03    0.21 10000002/10000002     std::unique_ptr<BIf, std::default_delete<BIf> >::unique_ptr(std::unique_ptr<BIf, std::default_delete<BIf> >&&) [124]
[149]    0.0    0.03    0.21 10000002         std::__uniq_ptr_data<BIf, std::default_delete<BIf>, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<BIf, std::default_delete<BIf>, true, true>&&) [149]
                0.00    0.21 10000002/10000002     std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >&&) [160]
-----------------------------------------------
                0.09    0.15 40000008/40000008     std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::_M_ptr() [129]
[150]    0.0    0.09    0.15 40000008         std::tuple_element<0ul, std::tuple<BIf*, std::default_delete<BIf> > >::type& std::get<0ul, BIf*, std::default_delete<BIf> >(std::tuple<BIf*, std::default_delete<BIf> >&) [150]
                0.08    0.07 40000008/40000008     BIf*& std::__get_helper<0ul, BIf*, std::default_delete<BIf> >(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&) [199]
-----------------------------------------------
                0.05    0.19 10000002/10000002     std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::tuple(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [152]
[151]    0.0    0.05    0.19 10000002         std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [151]
                0.04    0.07 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [243]
                0.04    0.00 10000002/10000002     std::remove_reference<std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&>::type&& std::move<std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&>(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [329]
                0.02    0.00 10000002/10000002     std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>::_Head_base<TargetIf<SampleStruct, CIf>*>(TargetIf<SampleStruct, CIf>*&&) [380]
                0.02    0.00 10000002/50000012     std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [247]
                0.00    0.00 10000002/10000002     std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_tail(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [599]
                0.00    0.00 10000002/20000004     TargetIf<SampleStruct, CIf>*&& std::forward<TargetIf<SampleStruct, CIf>*>(std::remove_reference<TargetIf<SampleStruct, CIf>*>::type&) [568]
-----------------------------------------------
                0.00    0.24 10000002/10000002     std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::__uniq_ptr_impl(std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [112]
[152]    0.0    0.00    0.24 10000002         std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::tuple(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [152]
                0.05    0.19 10000002/10000002     std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [151]
-----------------------------------------------
                0.06    0.18 10000002/10000002     BEntity::Impl::~Impl() [135]
[153]    0.0    0.06    0.18 10000002         std::unique_ptr<B, std::default_delete<B> >::~unique_ptr() [153]
                0.00    0.10 10000002/10000002     std::unique_ptr<B, std::default_delete<B> >::get_deleter() [249]
                0.02    0.05 10000002/30000006     std::__uniq_ptr_impl<B, std::default_delete<B> >::_M_ptr() [169]
                0.01    0.00 10000002/20000004     std::remove_reference<B*&>::type&& std::move<B*&>(B*&) [365]
                0.00    0.00 10000002/10000002     std::default_delete<B>::operator()(B*) const [578]
-----------------------------------------------
                0.13    0.10 10000001/10000001     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, int const&) [25]
[154]    0.0    0.13    0.10 10000001         std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_unique_pos(int const&) [154]
                0.03    0.01 10000001/10000001     std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*>::pair<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*&, std::_Rb_tree_node_base*&, true>(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*&, std::_Rb_tree_node_base*&) [332]
                0.01    0.01 10000001/210000021     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_begin() [92]
                0.01    0.00 10000001/210000021     std::operator==(std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&, std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&) [123]
                0.01    0.00 10000001/820000084     std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_Rb_tree_iterator(std::_Rb_tree_node_base*) [67]
                0.00    0.01 10000001/10000002     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::begin() [406]
                0.01    0.00 10000001/610000061     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_end() [107]
-----------------------------------------------
                0.23    0.00 200000020/200000020     __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::allocate(unsigned long, void const*) [77]
[155]    0.0    0.23    0.00 200000020         __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_max_size() const [155]
-----------------------------------------------
                0.05    0.17 10000002/10000002     std::tuple<AIf*, std::default_delete<AIf> >::tuple(std::tuple<AIf*, std::default_delete<AIf> >&&) [137]
[156]    0.0    0.05    0.17 10000002         std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_Tuple_impl(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&&) [156]
                0.02    0.05 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<AIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<AIf> >&&) [278]
                0.04    0.01 10000002/10000002     std::_Head_base<0ul, AIf*, false>::_Head_base<AIf*>(AIf*&&) [303]
                0.02    0.00 10000002/10000002     std::remove_reference<std::_Tuple_impl<1ul, std::default_delete<AIf> >&>::type&& std::move<std::_Tuple_impl<1ul, std::default_delete<AIf> >&>(std::_Tuple_impl<1ul, std::default_delete<AIf> >&) [398]
                0.00    0.01 10000002/50000010     std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_M_head(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&) [276]
                0.01    0.00 10000002/10000002     std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_M_tail(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&) [421]
                0.01    0.00 10000002/20000004     AIf*&& std::forward<AIf*>(std::remove_reference<AIf*>::type&) [368]
-----------------------------------------------
                0.08    0.14 30000006/30000006     std::tuple_element<0ul, std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> > >::type& std::get<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >(std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> >&) [140]
[157]    0.0    0.08    0.14 30000006         CEntity::Impl*& std::__get_helper<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >(std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >&) [157]
                0.10    0.04 30000006/30000006     std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >::_M_head(std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >&) [208]
-----------------------------------------------
                0.02    0.20 10000002/10000002     std::default_delete<AEntity::Impl>::operator()(AEntity::Impl*) const [148]
[158]    0.0    0.02    0.20 10000002         AEntity::Impl::~Impl() [158]
                0.02    0.18 10000002/10000002     std::unique_ptr<A, std::default_delete<A> >::~unique_ptr() [174]
-----------------------------------------------
                0.02    0.19 40000008/40000008     std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::_M_ptr() [143]
[159]    0.0    0.02    0.19 40000008         std::tuple_element<0ul, std::tuple<CIf*, std::default_delete<CIf> > >::type& std::get<0ul, CIf*, std::default_delete<CIf> >(std::tuple<CIf*, std::default_delete<CIf> >&) [159]
                0.05    0.14 40000008/40000008     CIf*& std::__get_helper<0ul, CIf*, std::default_delete<CIf> >(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&) [175]
-----------------------------------------------
                0.00    0.21 10000002/10000002     std::__uniq_ptr_data<BIf, std::default_delete<BIf>, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<BIf, std::default_delete<BIf>, true, true>&&) [149]
[160]    0.0    0.00    0.21 10000002         std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >&&) [160]
                0.00    0.12 10000002/10000002     std::tuple<BIf*, std::default_delete<BIf> >::tuple(std::tuple<BIf*, std::default_delete<BIf> >&&) [223]
                0.01    0.06 10000002/40000008     std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::_M_ptr() [129]
                0.02    0.00 10000002/10000002     std::remove_reference<std::tuple<BIf*, std::default_delete<BIf> >&>::type&& std::move<std::tuple<BIf*, std::default_delete<BIf> >&>(std::tuple<BIf*, std::default_delete<BIf> >&) [401]
-----------------------------------------------
                0.01    0.20 10000002/10000002     AIf::instantiate(int) [38]
[161]    0.0    0.01    0.20 10000002         std::unique_ptr<AIf, std::default_delete<AIf> >::unique_ptr<std::default_delete<AIf>, void>(AIf*) [161]
                0.00    0.20 10000002/10000002     std::__uniq_ptr_data<AIf, std::default_delete<AIf>, true, true>::__uniq_ptr_impl(AIf*) [163]
-----------------------------------------------
                0.21    0.00 200000020/200000020     std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::operator=(std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >&&) [20]
[162]    0.0    0.21    0.00 200000020         std::default_delete<SampleStruct>&& std::forward<std::default_delete<SampleStruct> >(std::remove_reference<std::default_delete<SampleStruct> >::type&) [162]
-----------------------------------------------
                0.00    0.20 10000002/10000002     std::unique_ptr<AIf, std::default_delete<AIf> >::unique_ptr<std::default_delete<AIf>, void>(AIf*) [161]
[163]    0.0    0.00    0.20 10000002         std::__uniq_ptr_data<AIf, std::default_delete<AIf>, true, true>::__uniq_ptr_impl(AIf*) [163]
                0.02    0.18 10000002/10000002     std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::__uniq_ptr_impl(AIf*) [164]
-----------------------------------------------
                0.02    0.18 10000002/10000002     std::__uniq_ptr_data<AIf, std::default_delete<AIf>, true, true>::__uniq_ptr_impl(AIf*) [163]
[164]    0.0    0.02    0.18 10000002         std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::__uniq_ptr_impl(AIf*) [164]
                0.02    0.09 10000002/10000002     std::tuple<AIf*, std::default_delete<AIf> >::tuple<true, true>() [241]
                0.03    0.04 10000002/40000008     std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::_M_ptr() [127]
-----------------------------------------------
                0.00    0.20 10000002/10000002     BIf::instantiate() [46]
[165]    0.0    0.00    0.20 10000002         std::unique_ptr<BIf, std::default_delete<BIf> >::unique_ptr<std::default_delete<BIf>, void>(BIf*) [165]
                0.00    0.20 10000002/10000002     std::__uniq_ptr_data<BIf, std::default_delete<BIf>, true, true>::__uniq_ptr_impl(BIf*) [166]
-----------------------------------------------
                0.00    0.20 10000002/10000002     std::unique_ptr<BIf, std::default_delete<BIf> >::unique_ptr<std::default_delete<BIf>, void>(BIf*) [165]
[166]    0.0    0.00    0.20 10000002         std::__uniq_ptr_data<BIf, std::default_delete<BIf>, true, true>::__uniq_ptr_impl(BIf*) [166]
                0.06    0.14 10000002/10000002     std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::__uniq_ptr_impl(BIf*) [167]
-----------------------------------------------
                0.06    0.14 10000002/10000002     std::__uniq_ptr_data<BIf, std::default_delete<BIf>, true, true>::__uniq_ptr_impl(BIf*) [166]
[167]    0.0    0.06    0.14 10000002         std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::__uniq_ptr_impl(BIf*) [167]
                0.01    0.06 10000002/40000008     std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::_M_ptr() [129]
                0.02    0.05 10000002/10000002     std::tuple<BIf*, std::default_delete<BIf> >::tuple<true, true>() [280]
-----------------------------------------------
                0.10    0.00 200000020/400000040     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_node() [53]
                0.10    0.00 200000020/400000040     void std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_construct_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [12]
[168]    0.0    0.20    0.00 400000040         std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_Node_allocator() [168]
-----------------------------------------------
                0.02    0.05 10000002/30000006     std::unique_ptr<B, std::default_delete<B> >::~unique_ptr() [153]
                0.04    0.09 20000004/30000006     std::__uniq_ptr_impl<B, std::default_delete<B> >::reset(B*) [204]
[169]    0.0    0.06    0.14 30000006         std::__uniq_ptr_impl<B, std::default_delete<B> >::_M_ptr() [169]
                0.04    0.10 30000006/30000006     std::tuple_element<0ul, std::tuple<B*, std::default_delete<B> > >::type& std::get<0ul, B*, std::default_delete<B> >(std::tuple<B*, std::default_delete<B> >&) [209]
-----------------------------------------------
                0.01    0.06 10000002/30000006     std::unique_ptr<C, std::default_delete<C> >::~unique_ptr() [119]
                0.01    0.12 20000004/30000006     std::__uniq_ptr_impl<C, std::default_delete<C> >::reset(C*) [197]
[170]    0.0    0.02    0.18 30000006         std::__uniq_ptr_impl<C, std::default_delete<C> >::_M_ptr() [170]
                0.01    0.17 30000006/30000006     std::tuple_element<0ul, std::tuple<C*, std::default_delete<C> > >::type& std::get<0ul, C*, std::default_delete<C> >(std::tuple<C*, std::default_delete<C> >&) [183]
-----------------------------------------------
                0.04    0.16 10000002/10000002     std::unique_ptr<C, std::default_delete<C> >::~unique_ptr() [119]
[171]    0.0    0.04    0.16 10000002         std::unique_ptr<C, std::default_delete<C> >::get_deleter() [171]
                0.06    0.10 10000002/10000002     std::__uniq_ptr_impl<C, std::default_delete<C> >::_M_deleter() [195]
-----------------------------------------------
                0.04    0.16 10000002/10000002     std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::~unique_ptr() [85]
[172]    0.0    0.04    0.16 10000002         std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::get_deleter() [172]
                0.02    0.14 10000002/10000002     std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::_M_deleter() [196]
-----------------------------------------------
                0.06    0.14 10000002/10000002     std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::reset(Target<SampleStruct, CIf>*) [132]
[173]    0.0    0.06    0.14 10000002         std::__uniq_ptr_impl<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::reset(Target<SampleStruct, CIf>*) [173]
                0.02    0.12 20000004/20000004     std::__uniq_ptr_impl<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::_M_ptr() [210]
-----------------------------------------------
                0.02    0.18 10000002/10000002     AEntity::Impl::~Impl() [158]
[174]    0.0    0.02    0.18 10000002         std::unique_ptr<A, std::default_delete<A> >::~unique_ptr() [174]
                0.03    0.08 10000002/10000002     std::unique_ptr<A, std::default_delete<A> >::get_deleter() [235]
                0.01    0.02 10000002/30000006     std::__uniq_ptr_impl<A, std::default_delete<A> >::_M_ptr() [264]
                0.02    0.00 10000002/20000004     std::remove_reference<A*&>::type&& std::move<A*&>(A*&) [319]
                0.02    0.00 10000002/10000002     std::default_delete<A>::operator()(A*) const [375]
-----------------------------------------------
                0.05    0.14 40000008/40000008     std::tuple_element<0ul, std::tuple<CIf*, std::default_delete<CIf> > >::type& std::get<0ul, CIf*, std::default_delete<CIf> >(std::tuple<CIf*, std::default_delete<CIf> >&) [159]
[175]    0.0    0.05    0.14 40000008         CIf*& std::__get_helper<0ul, CIf*, std::default_delete<CIf> >(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&) [175]
                0.11    0.03 40000008/50000010     std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_M_head(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&) [182]
-----------------------------------------------
                0.04    0.15 10000002/10000002     BEntity::Impl::Impl() [139]
[176]    0.0    0.04    0.15 10000002         std::unique_ptr<B, std::default_delete<B> >::reset(B*) [176]
                0.01    0.13 10000002/10000002     std::__uniq_ptr_impl<B, std::default_delete<B> >::reset(B*) [204]
                0.01    0.00 10000002/20000004     std::remove_reference<B*&>::type&& std::move<B*&>(B*&) [365]
-----------------------------------------------
                0.19    0.00 400000040/400000040     std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >::_Tuple_impl() [48]
[177]    0.0    0.19    0.00 400000040         std::_Head_base<0ul, SampleStruct*, false>::_Head_base() [177]
-----------------------------------------------
                0.19    0.00 400000040/400000040     std::_Tuple_impl<1ul, std::default_delete<SampleStruct> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<SampleStruct> >&) [78]
[178]    0.0    0.19    0.00 400000040         std::_Head_base<1ul, std::default_delete<SampleStruct>, true>::_M_head(std::_Head_base<1ul, std::default_delete<SampleStruct>, true>&) [178]
-----------------------------------------------
                0.02    0.17 10000002/10000002     BEntity::BEntity() [89]
[179]    0.0    0.02    0.17 10000002         std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::unique_ptr<std::default_delete<BEntity::Impl>, void>() [179]
                0.04    0.13 10000002/10000002     std::__uniq_ptr_data<BEntity::Impl, std::default_delete<BEntity::Impl>, true, true>::__uniq_ptr_impl() [190]
-----------------------------------------------
                0.02    0.16 10000003/10000003     std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::unique_ptr<std::default_delete<TargetIf<SampleStruct, CIf> >, void>(TargetIf<SampleStruct, CIf>*) [133]
[180]    0.0    0.02    0.16 10000003         std::__uniq_ptr_data<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> >, true, true>::__uniq_ptr_impl(TargetIf<SampleStruct, CIf>*) [180]
                0.04    0.12 10000003/10000003     std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::__uniq_ptr_impl(TargetIf<SampleStruct, CIf>*) [193]
-----------------------------------------------
                0.01    0.17 10000002/10000002     std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >&&) [128]
[181]    0.0    0.01    0.17 10000002         std::tuple<CIf*, std::default_delete<CIf> >::tuple(std::tuple<CIf*, std::default_delete<CIf> >&&) [181]
                0.00    0.17 10000002/10000002     std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_Tuple_impl(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&&) [185]
-----------------------------------------------
                0.03    0.01 10000002/50000010     std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_Tuple_impl(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&&) [185]
                0.11    0.03 40000008/50000010     CIf*& std::__get_helper<0ul, CIf*, std::default_delete<CIf> >(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&) [175]
[182]    0.0    0.14    0.04 50000010         std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_M_head(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&) [182]
                0.04    0.00 50000010/50000010     std::_Head_base<0ul, CIf*, false>::_M_head(std::_Head_base<0ul, CIf*, false>&) [316]
-----------------------------------------------
                0.01    0.17 30000006/30000006     std::__uniq_ptr_impl<C, std::default_delete<C> >::_M_ptr() [170]
[183]    0.0    0.01    0.17 30000006         std::tuple_element<0ul, std::tuple<C*, std::default_delete<C> > >::type& std::get<0ul, C*, std::default_delete<C> >(std::tuple<C*, std::default_delete<C> >&) [183]
                0.08    0.09 30000006/30000006     C*& std::__get_helper<0ul, C*, std::default_delete<C> >(std::_Tuple_impl<0ul, C*, std::default_delete<C> >&) [187]
-----------------------------------------------
                0.00    0.00       1/10000002     TargetEntity<SampleStruct, CIf>::Impl::Impl(TargetIf<SampleStruct, CIf> const&) [432]
                0.06    0.12 10000001/10000002     TargetEntity<SampleStruct, CIf>::Impl::Impl(AIf const&, BIf const&, CIf const&) [7]
[184]    0.0    0.06    0.12 10000002         std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::unique_ptr<std::default_delete<Target<SampleStruct, CIf> >, void>() [184]
                0.04    0.08 10000002/10000002     std::__uniq_ptr_data<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> >, true, true>::__uniq_ptr_impl() [228]
-----------------------------------------------
                0.00    0.17 10000002/10000002     std::tuple<CIf*, std::default_delete<CIf> >::tuple(std::tuple<CIf*, std::default_delete<CIf> >&&) [181]
[185]    0.0    0.00    0.17 10000002         std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_Tuple_impl(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&&) [185]
                0.03    0.07 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<CIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<CIf> >&&) [246]
                0.03    0.01 10000002/50000010     std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_M_head(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&) [182]
                0.03    0.00 10000002/10000002     std::_Head_base<0ul, CIf*, false>::_Head_base<CIf*>(CIf*&&) [344]
                0.00    0.00 10000002/10000002     std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_M_tail(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&) [598]
                0.00    0.00 10000002/10000002     std::remove_reference<std::_Tuple_impl<1ul, std::default_delete<CIf> >&>::type&& std::move<std::_Tuple_impl<1ul, std::default_delete<CIf> >&>(std::_Tuple_impl<1ul, std::default_delete<CIf> >&) [616]
                0.00    0.00 10000002/20000004     CIf*&& std::forward<CIf*>(std::remove_reference<CIf*>::type&) [567]
-----------------------------------------------
                0.01    0.00 10000001/200000020     std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*>::pair<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*&, std::_Rb_tree_node_base*&, true>(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*&, std::_Rb_tree_node_base*&) [332]
                0.16    0.00 190000019/200000020     std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*>::pair<std::_Rb_tree_node_base*&, true>(std::_Rb_tree_node_base* const&, std::_Rb_tree_node_base*&) [94]
[186]    0.0    0.17    0.00 200000020         std::_Rb_tree_node_base*& std::forward<std::_Rb_tree_node_base*&>(std::remove_reference<std::_Rb_tree_node_base*&>::type&) [186]
-----------------------------------------------
                0.08    0.09 30000006/30000006     std::tuple_element<0ul, std::tuple<C*, std::default_delete<C> > >::type& std::get<0ul, C*, std::default_delete<C> >(std::tuple<C*, std::default_delete<C> >&) [183]
[187]    0.0    0.08    0.09 30000006         C*& std::__get_helper<0ul, C*, std::default_delete<C> >(std::_Tuple_impl<0ul, C*, std::default_delete<C> >&) [187]
                0.08    0.01 30000006/30000006     std::_Tuple_impl<0ul, C*, std::default_delete<C> >::_M_head(std::_Tuple_impl<0ul, C*, std::default_delete<C> >&) [257]
-----------------------------------------------
                0.00    0.00       1/10000002     SampleTest_RealSample2_Test::TestBody() [428]
                0.00    0.00       1/10000002     SampleTest_PseudoSample1_Test::TestBody() [429]
                0.04    0.13 10000000/10000002     SampleTest_RealSample1_Test::TestBody() [4]
[188]    0.0    0.04    0.13 10000002         std::unique_ptr<CIf, std::default_delete<CIf> >::operator*() const [188]
                0.00    0.13 10000002/10000002     std::unique_ptr<CIf, std::default_delete<CIf> >::get() const [217]
-----------------------------------------------
                0.00    0.00       1/10000002     TargetEntity<SampleStruct, CIf>::TargetEntity(TargetIf<SampleStruct, CIf> const&) [431]
                0.04    0.13 10000001/10000002     TargetEntity<SampleStruct, CIf>::TargetEntity(AIf const&, BIf const&, CIf const&) [6]
[189]    0.0    0.04    0.13 10000002         std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::unique_ptr<std::default_delete<TargetEntity<SampleStruct, CIf>::Impl>, void>() [189]
                0.01    0.12 10000002/10000002     std::__uniq_ptr_data<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl>, true, true>::__uniq_ptr_impl() [219]
-----------------------------------------------
                0.04    0.13 10000002/10000002     std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::unique_ptr<std::default_delete<BEntity::Impl>, void>() [179]
[190]    0.0    0.04    0.13 10000002         std::__uniq_ptr_data<BEntity::Impl, std::default_delete<BEntity::Impl>, true, true>::__uniq_ptr_impl() [190]
                0.02    0.11 10000002/10000002     std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::__uniq_ptr_impl() [220]
-----------------------------------------------
                0.04    0.13 40000008/40000008     std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::_M_ptr() [127]
[191]    0.0    0.04    0.13 40000008         std::tuple_element<0ul, std::tuple<AIf*, std::default_delete<AIf> > >::type& std::get<0ul, AIf*, std::default_delete<AIf> >(std::tuple<AIf*, std::default_delete<AIf> >&) [191]
                0.07    0.06 40000008/40000008     AIf*& std::__get_helper<0ul, AIf*, std::default_delete<AIf> >(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&) [221]
-----------------------------------------------
                0.00    0.16 10000002/10000002     CEntity::Impl::Impl(int) [138]
[192]    0.0    0.00    0.16 10000002         std::unique_ptr<C, std::default_delete<C> >::reset(C*) [192]
                0.02    0.13 10000002/10000002     std::__uniq_ptr_impl<C, std::default_delete<C> >::reset(C*) [197]
                0.01    0.00 10000002/20000004     std::remove_reference<C*&>::type&& std::move<C*&>(C*&) [366]
-----------------------------------------------
                0.04    0.12 10000003/10000003     std::__uniq_ptr_data<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> >, true, true>::__uniq_ptr_impl(TargetIf<SampleStruct, CIf>*) [180]
[193]    0.0    0.04    0.12 10000003         std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::__uniq_ptr_impl(TargetIf<SampleStruct, CIf>*) [193]
                0.01    0.06 10000003/40000010     std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_ptr() [125]
                0.00    0.05 10000003/10000003     std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::tuple<true, true>() [314]
-----------------------------------------------
                0.08    0.08 40000010/40000010     std::tuple_element<0ul, std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > >::type& std::get<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [145]
[194]    0.0    0.08    0.08 40000010         TargetIf<SampleStruct, CIf>*& std::__get_helper<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [194]
                0.06    0.02 40000010/50000012     std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [247]
-----------------------------------------------
                0.06    0.10 10000002/10000002     std::unique_ptr<C, std::default_delete<C> >::get_deleter() [171]
[195]    0.0    0.06    0.10 10000002         std::__uniq_ptr_impl<C, std::default_delete<C> >::_M_deleter() [195]
                0.04    0.06 10000002/10000002     std::tuple_element<1ul, std::tuple<C*, std::default_delete<C> > >::type& std::get<1ul, C*, std::default_delete<C> >(std::tuple<C*, std::default_delete<C> >&) [254]
-----------------------------------------------
                0.02    0.14 10000002/10000002     std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::get_deleter() [172]
[196]    0.0    0.02    0.14 10000002         std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::_M_deleter() [196]
                0.00    0.14 10000002/10000002     std::tuple_element<1ul, std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> > >::type& std::get<1ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> >&) [212]
-----------------------------------------------
                0.02    0.13 10000002/10000002     std::unique_ptr<C, std::default_delete<C> >::reset(C*) [192]
[197]    0.0    0.02    0.13 10000002         std::__uniq_ptr_impl<C, std::default_delete<C> >::reset(C*) [197]
                0.01    0.12 20000004/30000006     std::__uniq_ptr_impl<C, std::default_delete<C> >::_M_ptr() [170]
-----------------------------------------------
                0.06    0.09 10000002/10000002     AEntity::Impl::Impl(int) [144]
[198]    0.0    0.06    0.09 10000002         std::unique_ptr<A, std::default_delete<A> >::reset(A*) [198]
                0.02    0.05 10000002/10000002     std::__uniq_ptr_impl<A, std::default_delete<A> >::reset(A*) [274]
                0.02    0.00 10000002/20000004     std::remove_reference<A*&>::type&& std::move<A*&>(A*&) [319]
-----------------------------------------------
                0.08    0.07 40000008/40000008     std::tuple_element<0ul, std::tuple<BIf*, std::default_delete<BIf> > >::type& std::get<0ul, BIf*, std::default_delete<BIf> >(std::tuple<BIf*, std::default_delete<BIf> >&) [150]
[199]    0.0    0.08    0.07 40000008         BIf*& std::__get_helper<0ul, BIf*, std::default_delete<BIf> >(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&) [199]
                0.06    0.02 40000008/50000010     std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_M_head(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&) [256]
-----------------------------------------------
                0.09    0.06 30000006/30000006     AEntity::Impl*& std::__get_helper<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >&) [147]
[200]    0.0    0.09    0.06 30000006         std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >::_M_head(std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >&) [200]
                0.06    0.00 30000006/30000006     std::_Head_base<0ul, AEntity::Impl*, false>::_M_head(std::_Head_base<0ul, AEntity::Impl*, false>&) [283]
-----------------------------------------------
                0.04    0.11 10000002/10000002     AEntity::AEntity(int) [66]
[201]    0.0    0.04    0.11 10000002         std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::unique_ptr<std::default_delete<AEntity::Impl>, void>() [201]
                0.00    0.11 10000002/10000002     std::__uniq_ptr_data<AEntity::Impl, std::default_delete<AEntity::Impl>, true, true>::__uniq_ptr_impl() [239]
-----------------------------------------------
                0.03    0.12 10000002/10000002     BEntity::BEntity() [89]
[202]    0.0    0.03    0.12 10000002         std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::reset(BEntity::Impl*) [202]
                0.02    0.09 10000002/10000002     std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::reset(BEntity::Impl*) [245]
                0.01    0.00 10000002/20000004     std::remove_reference<BEntity::Impl*&>::type&& std::move<BEntity::Impl*&>(BEntity::Impl*&) [367]
-----------------------------------------------
                0.01    0.13 10000002/10000002     CIf::instantiate(int) [45]
[203]    0.0    0.01    0.13 10000002         std::unique_ptr<CIf, std::default_delete<CIf> >::unique_ptr<std::default_delete<CIf>, void>(CIf*) [203]
                0.02    0.11 10000002/10000002     std::__uniq_ptr_data<CIf, std::default_delete<CIf>, true, true>::__uniq_ptr_impl(CIf*) [214]
-----------------------------------------------
                0.01    0.13 10000002/10000002     std::unique_ptr<B, std::default_delete<B> >::reset(B*) [176]
[204]    0.0    0.01    0.13 10000002         std::__uniq_ptr_impl<B, std::default_delete<B> >::reset(B*) [204]
                0.04    0.09 20000004/30000006     std::__uniq_ptr_impl<B, std::default_delete<B> >::_M_ptr() [169]
-----------------------------------------------
                0.00    0.14 10000003/10000003     std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::~unique_ptr() [106]
[205]    0.0    0.00    0.14 10000003         std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::get_deleter() [205]
                0.06    0.08 10000003/10000003     std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_deleter() [206]
-----------------------------------------------
                0.06    0.08 10000003/10000003     std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::get_deleter() [205]
[206]    0.0    0.06    0.08 10000003         std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_deleter() [206]
                0.01    0.07 10000003/10000003     std::tuple_element<1ul, std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > >::type& std::get<1ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [262]
-----------------------------------------------
                0.14    0.00 200000020/200000020     std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::operator[](int const&) [9]
[207]    0.0    0.14    0.00 200000020         std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_Rb_tree_const_iterator(std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&) [207]
-----------------------------------------------
                0.10    0.04 30000006/30000006     CEntity::Impl*& std::__get_helper<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >(std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >&) [157]
[208]    0.0    0.10    0.04 30000006         std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >::_M_head(std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >&) [208]
                0.04    0.00 30000006/30000006     std::_Head_base<0ul, CEntity::Impl*, false>::_M_head(std::_Head_base<0ul, CEntity::Impl*, false>&) [318]
-----------------------------------------------
                0.04    0.10 30000006/30000006     std::__uniq_ptr_impl<B, std::default_delete<B> >::_M_ptr() [169]
[209]    0.0    0.04    0.10 30000006         std::tuple_element<0ul, std::tuple<B*, std::default_delete<B> > >::type& std::get<0ul, B*, std::default_delete<B> >(std::tuple<B*, std::default_delete<B> >&) [209]
                0.02    0.08 30000006/30000006     B*& std::__get_helper<0ul, B*, std::default_delete<B> >(std::_Tuple_impl<0ul, B*, std::default_delete<B> >&) [248]
-----------------------------------------------
                0.02    0.12 20000004/20000004     std::__uniq_ptr_impl<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::reset(Target<SampleStruct, CIf>*) [173]
[210]    0.0    0.02    0.12 20000004         std::__uniq_ptr_impl<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::_M_ptr() [210]
                0.05    0.07 20000004/20000004     std::tuple_element<0ul, std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > >::type& std::get<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >(std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >&) [225]
-----------------------------------------------
                0.02    0.12 10000002/10000002     std::tuple_element<1ul, std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> > >::type& std::get<1ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> >&) [212]
[211]    0.0    0.02    0.12 10000002         std::default_delete<AEntity::Impl>& std::__get_helper<1ul, std::default_delete<AEntity::Impl>>(std::_Tuple_impl<1ul, std::default_delete<AEntity::Impl>>&) [211]
                0.04    0.08 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<AEntity::Impl> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<AEntity::Impl> >&) [227]
-----------------------------------------------
                0.00    0.14 10000002/10000002     std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::_M_deleter() [196]
[212]    0.0    0.00    0.14 10000002         std::tuple_element<1ul, std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> > >::type& std::get<1ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> >&) [212]
                0.02    0.12 10000002/10000002     std::default_delete<AEntity::Impl>& std::__get_helper<1ul, std::default_delete<AEntity::Impl>>(std::_Tuple_impl<1ul, std::default_delete<AEntity::Impl>>&) [211]
-----------------------------------------------
                0.00    0.00       1/10000002     Target<SampleStruct, CIf>::Target(Target<SampleStruct, CIf> const&) [433]
                0.02    0.12 10000001/10000002     Target<SampleStruct, CIf>::Target(AIf const&, BIf const&, CIf const&) [8]
[213]    0.0    0.02    0.12 10000002         std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::map() [213]
                0.01    0.11 10000002/10000002     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_Rb_tree() [231]
-----------------------------------------------
                0.02    0.11 10000002/10000002     std::unique_ptr<CIf, std::default_delete<CIf> >::unique_ptr<std::default_delete<CIf>, void>(CIf*) [203]
[214]    0.0    0.02    0.11 10000002         std::__uniq_ptr_data<CIf, std::default_delete<CIf>, true, true>::__uniq_ptr_impl(CIf*) [214]
                0.02    0.09 10000002/10000002     std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::__uniq_ptr_impl(CIf*) [232]
-----------------------------------------------
                0.01    0.04 10000002/30000006     std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::~unique_ptr() [97]
                0.01    0.07 20000004/30000006     std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::reset(BEntity::Impl*) [245]
[215]    0.0    0.02    0.11 30000006         std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::_M_ptr() [215]
                0.02    0.09 30000006/30000006     std::tuple_element<0ul, std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> > >::type& std::get<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >(std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> >&) [233]
-----------------------------------------------
                0.02    0.11 20000004/20000004     std::__uniq_ptr_impl<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::reset(TargetEntity<SampleStruct, CIf>::Impl*) [141]
[216]    0.0    0.02    0.11 20000004         std::__uniq_ptr_impl<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_M_ptr() [216]
                0.06    0.05 20000004/20000004     std::tuple_element<0ul, std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > >::type& std::get<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >(std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >&) [234]
-----------------------------------------------
                0.00    0.13 10000002/10000002     std::unique_ptr<CIf, std::default_delete<CIf> >::operator*() const [188]
[217]    0.0    0.00    0.13 10000002         std::unique_ptr<CIf, std::default_delete<CIf> >::get() const [217]
                0.03    0.10 10000002/10000002     std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::_M_ptr() const [218]
-----------------------------------------------
                0.03    0.10 10000002/10000002     std::unique_ptr<CIf, std::default_delete<CIf> >::get() const [217]
[218]    0.0    0.03    0.10 10000002         std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::_M_ptr() const [218]
                0.02    0.08 10000002/10000002     std::tuple_element<0ul, std::tuple<CIf*, std::default_delete<CIf> > >::type const& std::get<0ul, CIf*, std::default_delete<CIf> >(std::tuple<CIf*, std::default_delete<CIf> > const&) [253]
-----------------------------------------------
                0.01    0.12 10000002/10000002     std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::unique_ptr<std::default_delete<TargetEntity<SampleStruct, CIf>::Impl>, void>() [189]
[219]    0.0    0.01    0.12 10000002         std::__uniq_ptr_data<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl>, true, true>::__uniq_ptr_impl() [219]
                0.02    0.10 10000002/10000002     std::__uniq_ptr_impl<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::__uniq_ptr_impl() [229]
-----------------------------------------------
                0.02    0.11 10000002/10000002     std::__uniq_ptr_data<BEntity::Impl, std::default_delete<BEntity::Impl>, true, true>::__uniq_ptr_impl() [190]
[220]    0.0    0.02    0.11 10000002         std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::__uniq_ptr_impl() [220]
                0.00    0.11 10000002/10000002     std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> >::tuple<true, true>() [242]
-----------------------------------------------
                0.07    0.06 40000008/40000008     std::tuple_element<0ul, std::tuple<AIf*, std::default_delete<AIf> > >::type& std::get<0ul, AIf*, std::default_delete<AIf> >(std::tuple<AIf*, std::default_delete<AIf> >&) [191]
[221]    0.0    0.07    0.06 40000008         AIf*& std::__get_helper<0ul, AIf*, std::default_delete<AIf> >(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&) [221]
                0.02    0.04 40000008/50000010     std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_M_head(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&) [276]
-----------------------------------------------
                0.02    0.10 10000002/10000002     std::tuple<BIf*, std::default_delete<BIf> >::tuple(std::tuple<BIf*, std::default_delete<BIf> >&&) [223]
[222]    0.0    0.02    0.10 10000002         std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_Tuple_impl(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&&) [222]
                0.00    0.04 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<BIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<BIf> >&&) [315]
                0.02    0.00 10000002/10000002     std::remove_reference<std::_Tuple_impl<1ul, std::default_delete<BIf> >&>::type&& std::move<std::_Tuple_impl<1ul, std::default_delete<BIf> >&>(std::_Tuple_impl<1ul, std::default_delete<BIf> >&) [399]
                0.02    0.00 10000002/10000002     std::_Head_base<0ul, BIf*, false>::_Head_base<BIf*>(BIf*&&) [379]
                0.01    0.00 10000002/50000010     std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_M_head(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&) [256]
                0.00    0.00 10000002/10000002     std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_M_tail(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&) [597]
                0.00    0.00 10000002/20000004     BIf*&& std::forward<BIf*>(std::remove_reference<BIf*>::type&) [566]
-----------------------------------------------
                0.00    0.12 10000002/10000002     std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >&&) [160]
[223]    0.0    0.00    0.12 10000002         std::tuple<BIf*, std::default_delete<BIf> >::tuple(std::tuple<BIf*, std::default_delete<BIf> >&&) [223]
                0.02    0.10 10000002/10000002     std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_Tuple_impl(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&&) [222]
-----------------------------------------------
                0.12    0.00 200000020/200000020     Target<SampleStruct, CIf>::Target(AIf const&, BIf const&, CIf const&) [8]
[224]    0.0    0.12    0.00 200000020         std::remove_reference<std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >&>::type&& std::move<std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >&>(std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >&) [224]
-----------------------------------------------
                0.05    0.07 20000004/20000004     std::__uniq_ptr_impl<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::_M_ptr() [210]
[225]    0.0    0.05    0.07 20000004         std::tuple_element<0ul, std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > >::type& std::get<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >(std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >&) [225]
                0.04    0.03 20000004/20000004     Target<SampleStruct, CIf>*& std::__get_helper<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >(std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >&) [277]
-----------------------------------------------
                0.00    0.12 10000002/10000002     std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::~unique_ptr() [97]
[226]    0.0    0.00    0.12 10000002         std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::get_deleter() [226]
                0.06    0.06 10000002/10000002     std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::_M_deleter() [230]
-----------------------------------------------
                0.04    0.08 10000002/10000002     std::default_delete<AEntity::Impl>& std::__get_helper<1ul, std::default_delete<AEntity::Impl>>(std::_Tuple_impl<1ul, std::default_delete<AEntity::Impl>>&) [211]
[227]    0.0    0.04    0.08 10000002         std::_Tuple_impl<1ul, std::default_delete<AEntity::Impl> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<AEntity::Impl> >&) [227]
                0.08    0.00 10000002/10000002     std::_Head_base<1ul, std::default_delete<AEntity::Impl>, true>::_M_head(std::_Head_base<1ul, std::default_delete<AEntity::Impl>, true>&) [266]
-----------------------------------------------
                0.04    0.08 10000002/10000002     std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::unique_ptr<std::default_delete<Target<SampleStruct, CIf> >, void>() [184]
[228]    0.0    0.04    0.08 10000002         std::__uniq_ptr_data<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> >, true, true>::__uniq_ptr_impl() [228]
                0.05    0.03 10000002/10000002     std::__uniq_ptr_impl<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::__uniq_ptr_impl() [269]
-----------------------------------------------
                0.02    0.10 10000002/10000002     std::__uniq_ptr_data<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl>, true, true>::__uniq_ptr_impl() [219]
[229]    0.0    0.02    0.10 10000002         std::__uniq_ptr_impl<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::__uniq_ptr_impl() [229]
                0.00    0.10 10000002/10000002     std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::tuple<true, true>() [252]
-----------------------------------------------
                0.06    0.06 10000002/10000002     std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::get_deleter() [226]
[230]    0.0    0.06    0.06 10000002         std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::_M_deleter() [230]
                0.06    0.00 10000002/10000002     std::tuple_element<1ul, std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> > >::type& std::get<1ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >(std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> >&) [299]
-----------------------------------------------
                0.01    0.11 10000002/10000002     std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::map() [213]
[231]    0.0    0.01    0.11 10000002         std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_Rb_tree() [231]
                0.04    0.07 10000002/10000002     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_Rb_tree_impl<std::less<int>, true>::_Rb_tree_impl() [244]
-----------------------------------------------
                0.02    0.09 10000002/10000002     std::__uniq_ptr_data<CIf, std::default_delete<CIf>, true, true>::__uniq_ptr_impl(CIf*) [214]
[232]    0.0    0.02    0.09 10000002         std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::__uniq_ptr_impl(CIf*) [232]
                0.01    0.05 10000002/40000008     std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::_M_ptr() [143]
                0.01    0.02 10000002/10000002     std::tuple<CIf*, std::default_delete<CIf> >::tuple<true, true>() [353]
-----------------------------------------------
                0.02    0.09 30000006/30000006     std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::_M_ptr() [215]
[233]    0.0    0.02    0.09 30000006         std::tuple_element<0ul, std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> > >::type& std::get<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >(std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> >&) [233]
                0.04    0.05 30000006/30000006     BEntity::Impl*& std::__get_helper<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >(std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >&) [258]
-----------------------------------------------
                0.06    0.05 20000004/20000004     std::__uniq_ptr_impl<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_M_ptr() [216]
[234]    0.0    0.06    0.05 20000004         std::tuple_element<0ul, std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > >::type& std::get<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >(std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >&) [234]
                0.02    0.03 20000004/20000004     TargetEntity<SampleStruct, CIf>::Impl*& std::__get_helper<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >(std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >&) [302]
-----------------------------------------------
                0.03    0.08 10000002/10000002     std::unique_ptr<A, std::default_delete<A> >::~unique_ptr() [174]
[235]    0.0    0.03    0.08 10000002         std::unique_ptr<A, std::default_delete<A> >::get_deleter() [235]
                0.02    0.06 10000002/10000002     std::__uniq_ptr_impl<A, std::default_delete<A> >::_M_deleter() [268]
-----------------------------------------------
                0.04    0.07 10000002/10000002     std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::~unique_ptr() [81]
[236]    0.0    0.04    0.07 10000002         std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::get_deleter() [236]
                0.02    0.05 10000002/10000002     std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::_M_deleter() [279]
-----------------------------------------------
                0.02    0.09 10000002/10000002     CEntity::CEntity(int) [75]
[237]    0.0    0.02    0.09 10000002         std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::unique_ptr<std::default_delete<CEntity::Impl>, void>() [237]
                0.00    0.09 10000002/10000002     std::__uniq_ptr_data<CEntity::Impl, std::default_delete<CEntity::Impl>, true, true>::__uniq_ptr_impl() [260]
-----------------------------------------------
                0.06    0.05 10000002/10000002     std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> >::tuple<true, true>() [242]
[238]    0.0    0.06    0.05 10000002         std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >::_Tuple_impl() [238]
                0.03    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<BEntity::Impl> >::_Tuple_impl() [352]
                0.02    0.00 10000002/10000002     std::_Head_base<0ul, BEntity::Impl*, false>::_Head_base() [381]
-----------------------------------------------
                0.00    0.11 10000002/10000002     std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::unique_ptr<std::default_delete<AEntity::Impl>, void>() [201]
[239]    0.0    0.00    0.11 10000002         std::__uniq_ptr_data<AEntity::Impl, std::default_delete<AEntity::Impl>, true, true>::__uniq_ptr_impl() [239]
                0.04    0.07 10000002/10000002     std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::__uniq_ptr_impl() [240]
-----------------------------------------------
                0.04    0.07 10000002/10000002     std::__uniq_ptr_data<AEntity::Impl, std::default_delete<AEntity::Impl>, true, true>::__uniq_ptr_impl() [239]
[240]    0.0    0.04    0.07 10000002         std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::__uniq_ptr_impl() [240]
                0.04    0.03 10000002/10000002     std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> >::tuple<true, true>() [281]
-----------------------------------------------
                0.02    0.09 10000002/10000002     std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::__uniq_ptr_impl(AIf*) [164]
[241]    0.0    0.02    0.09 10000002         std::tuple<AIf*, std::default_delete<AIf> >::tuple<true, true>() [241]
                0.02    0.07 10000002/10000002     std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_Tuple_impl() [259]
-----------------------------------------------
                0.00    0.11 10000002/10000002     std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::__uniq_ptr_impl() [220]
[242]    0.0    0.00    0.11 10000002         std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> >::tuple<true, true>() [242]
                0.06    0.05 10000002/10000002     std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >::_Tuple_impl() [238]
-----------------------------------------------
                0.04    0.07 10000002/10000002     std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [151]
[243]    0.0    0.04    0.07 10000002         std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [243]
                0.02    0.01 10000002/20000005     std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [287]
                0.02    0.00 10000002/20000004     std::default_delete<TargetIf<SampleStruct, CIf> >&& std::forward<std::default_delete<TargetIf<SampleStruct, CIf> > >(std::remove_reference<std::default_delete<TargetIf<SampleStruct, CIf> > >::type&) [322]
                0.00    0.02 10000002/10000002     std::_Head_base<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >, true>::_Head_base<std::default_delete<TargetIf<SampleStruct, CIf> > >(std::default_delete<TargetIf<SampleStruct, CIf> >&&) [385]
-----------------------------------------------
                0.04    0.07 10000002/10000002     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_Rb_tree() [231]
[244]    0.0    0.04    0.07 10000002         std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_Rb_tree_impl<std::less<int>, true>::_Rb_tree_impl() [244]
                0.01    0.02 10000002/10000004     std::_Rb_tree_header::_Rb_tree_header() [338]
                0.02    0.00 10000002/10000002     std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::allocator() [378]
                0.02    0.00 10000002/10000002     std::_Rb_tree_key_compare<std::less<int> >::_Rb_tree_key_compare() [393]
-----------------------------------------------
                0.02    0.09 10000002/10000002     std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::reset(BEntity::Impl*) [202]
[245]    0.0    0.02    0.09 10000002         std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::reset(BEntity::Impl*) [245]
                0.01    0.07 20000004/30000006     std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::_M_ptr() [215]
-----------------------------------------------
                0.03    0.07 10000002/10000002     std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_Tuple_impl(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&&) [185]
[246]    0.0    0.03    0.07 10000002         std::_Tuple_impl<1ul, std::default_delete<CIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<CIf> >&&) [246]
                0.06    0.00 10000002/10000002     std::_Head_base<1ul, std::default_delete<CIf>, true>::_Head_base<std::default_delete<CIf> >(std::default_delete<CIf>&&) [290]
                0.00    0.01 10000002/20000004     std::_Tuple_impl<1ul, std::default_delete<CIf> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<CIf> >&) [337]
                0.00    0.00 10000002/20000004     std::default_delete<CIf>&& std::forward<std::default_delete<CIf> >(std::remove_reference<std::default_delete<CIf> >::type&) [570]
-----------------------------------------------
                0.02    0.00 10000002/50000012     std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [151]
                0.06    0.02 40000010/50000012     TargetIf<SampleStruct, CIf>*& std::__get_helper<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [194]
[247]    0.0    0.08    0.02 50000012         std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [247]
                0.02    0.00 50000012/50000012     std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>::_M_head(std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>&) [362]
-----------------------------------------------
                0.02    0.08 30000006/30000006     std::tuple_element<0ul, std::tuple<B*, std::default_delete<B> > >::type& std::get<0ul, B*, std::default_delete<B> >(std::tuple<B*, std::default_delete<B> >&) [209]
[248]    0.0    0.02    0.08 30000006         B*& std::__get_helper<0ul, B*, std::default_delete<B> >(std::_Tuple_impl<0ul, B*, std::default_delete<B> >&) [248]
                0.04    0.04 30000006/30000006     std::_Tuple_impl<0ul, B*, std::default_delete<B> >::_M_head(std::_Tuple_impl<0ul, B*, std::default_delete<B> >&) [263]
-----------------------------------------------
                0.00    0.10 10000002/10000002     std::unique_ptr<B, std::default_delete<B> >::~unique_ptr() [153]
[249]    0.0    0.00    0.10 10000002         std::unique_ptr<B, std::default_delete<B> >::get_deleter() [249]
                0.02    0.08 10000002/10000002     std::__uniq_ptr_impl<B, std::default_delete<B> >::_M_deleter() [251]
-----------------------------------------------
                0.02    0.08 10000002/10000002     std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::tuple<true, true>() [252]
[250]    0.0    0.02    0.08 10000002         std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_Tuple_impl() [250]
                0.02    0.03 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_Tuple_impl() [307]
                0.03    0.00 10000002/10000002     std::_Head_base<0ul, TargetEntity<SampleStruct, CIf>::Impl*, false>::_Head_base() [346]
-----------------------------------------------
                0.02    0.08 10000002/10000002     std::unique_ptr<B, std::default_delete<B> >::get_deleter() [249]
[251]    0.0    0.02    0.08 10000002         std::__uniq_ptr_impl<B, std::default_delete<B> >::_M_deleter() [251]
                0.01    0.07 10000002/10000002     std::tuple_element<1ul, std::tuple<B*, std::default_delete<B> > >::type& std::get<1ul, B*, std::default_delete<B> >(std::tuple<B*, std::default_delete<B> >&) [271]
-----------------------------------------------
                0.00    0.10 10000002/10000002     std::__uniq_ptr_impl<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::__uniq_ptr_impl() [229]
[252]    0.0    0.00    0.10 10000002         std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::tuple<true, true>() [252]
                0.02    0.08 10000002/10000002     std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_Tuple_impl() [250]
-----------------------------------------------
                0.02    0.08 10000002/10000002     std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::_M_ptr() const [218]
[253]    0.0    0.02    0.08 10000002         std::tuple_element<0ul, std::tuple<CIf*, std::default_delete<CIf> > >::type const& std::get<0ul, CIf*, std::default_delete<CIf> >(std::tuple<CIf*, std::default_delete<CIf> > const&) [253]
                0.04    0.04 10000002/10000002     CIf* const& std::__get_helper<0ul, CIf*, std::default_delete<CIf> >(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> > const&) [270]
-----------------------------------------------
                0.04    0.06 10000002/10000002     std::__uniq_ptr_impl<C, std::default_delete<C> >::_M_deleter() [195]
[254]    0.0    0.04    0.06 10000002         std::tuple_element<1ul, std::tuple<C*, std::default_delete<C> > >::type& std::get<1ul, C*, std::default_delete<C> >(std::tuple<C*, std::default_delete<C> >&) [254]
                0.01    0.05 10000002/10000002     std::default_delete<C>& std::__get_helper<1ul, std::default_delete<C>>(std::_Tuple_impl<1ul, std::default_delete<C>>&) [297]
-----------------------------------------------
                                                 <spontaneous>
[255]    0.0    0.10    0.00                 __wrap__Znwm [255]
-----------------------------------------------
                0.01    0.00 10000002/50000010     std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_Tuple_impl(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&&) [222]
                0.06    0.02 40000008/50000010     BIf*& std::__get_helper<0ul, BIf*, std::default_delete<BIf> >(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&) [199]
[256]    0.0    0.07    0.02 50000010         std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_M_head(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&) [256]
                0.02    0.00 50000010/50000010     std::_Head_base<0ul, BIf*, false>::_M_head(std::_Head_base<0ul, BIf*, false>&) [363]
-----------------------------------------------
                0.08    0.01 30000006/30000006     C*& std::__get_helper<0ul, C*, std::default_delete<C> >(std::_Tuple_impl<0ul, C*, std::default_delete<C> >&) [187]
[257]    0.0    0.08    0.01 30000006         std::_Tuple_impl<0ul, C*, std::default_delete<C> >::_M_head(std::_Tuple_impl<0ul, C*, std::default_delete<C> >&) [257]
                0.01    0.00 30000006/30000006     std::_Head_base<0ul, C*, false>::_M_head(std::_Head_base<0ul, C*, false>&) [408]
-----------------------------------------------
                0.04    0.05 30000006/30000006     std::tuple_element<0ul, std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> > >::type& std::get<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >(std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> >&) [233]
[258]    0.0    0.04    0.05 30000006         BEntity::Impl*& std::__get_helper<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >(std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >&) [258]
                0.05    0.00 30000006/30000006     std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >::_M_head(std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >&) [301]
-----------------------------------------------
                0.02    0.07 10000002/10000002     std::tuple<AIf*, std::default_delete<AIf> >::tuple<true, true>() [241]
[259]    0.0    0.02    0.07 10000002         std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_Tuple_impl() [259]
                0.06    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<AIf> >::_Tuple_impl() [294]
                0.01    0.00 10000002/10000002     std::_Head_base<0ul, AIf*, false>::_Head_base() [417]
-----------------------------------------------
                0.00    0.09 10000002/10000002     std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::unique_ptr<std::default_delete<CEntity::Impl>, void>() [237]
[260]    0.0    0.00    0.09 10000002         std::__uniq_ptr_data<CEntity::Impl, std::default_delete<CEntity::Impl>, true, true>::__uniq_ptr_impl() [260]
                0.03    0.06 10000002/10000002     std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::__uniq_ptr_impl() [261]
-----------------------------------------------
                0.03    0.06 10000002/10000002     std::__uniq_ptr_data<CEntity::Impl, std::default_delete<CEntity::Impl>, true, true>::__uniq_ptr_impl() [260]
[261]    0.0    0.03    0.06 10000002         std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::__uniq_ptr_impl() [261]
                0.00    0.06 10000002/10000002     std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> >::tuple<true, true>() [296]
-----------------------------------------------
                0.01    0.07 10000003/10000003     std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_deleter() [206]
[262]    0.0    0.01    0.07 10000003         std::tuple_element<1ul, std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > >::type& std::get<1ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [262]
                0.04    0.03 10000003/10000003     std::default_delete<TargetIf<SampleStruct, CIf> >& std::__get_helper<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >>(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >>&) [275]
-----------------------------------------------
                0.04    0.04 30000006/30000006     B*& std::__get_helper<0ul, B*, std::default_delete<B> >(std::_Tuple_impl<0ul, B*, std::default_delete<B> >&) [248]
[263]    0.0    0.04    0.04 30000006         std::_Tuple_impl<0ul, B*, std::default_delete<B> >::_M_head(std::_Tuple_impl<0ul, B*, std::default_delete<B> >&) [263]
                0.04    0.00 30000006/30000006     std::_Head_base<0ul, B*, false>::_M_head(std::_Head_base<0ul, B*, false>&) [317]
-----------------------------------------------
                0.01    0.02 10000002/30000006     std::unique_ptr<A, std::default_delete<A> >::~unique_ptr() [174]
                0.01    0.04 20000004/30000006     std::__uniq_ptr_impl<A, std::default_delete<A> >::reset(A*) [274]
[264]    0.0    0.02    0.06 30000006         std::__uniq_ptr_impl<A, std::default_delete<A> >::_M_ptr() [264]
                0.00    0.06 30000006/30000006     std::tuple_element<0ul, std::tuple<A*, std::default_delete<A> > >::type& std::get<0ul, A*, std::default_delete<A> >(std::tuple<A*, std::default_delete<A> >&) [286]
-----------------------------------------------
                0.04    0.00 10000002/20000004     std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::reset(CEntity::Impl*) [114]
                0.04    0.00 10000002/20000004     std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::~unique_ptr() [81]
[265]    0.0    0.08    0.00 20000004         std::remove_reference<CEntity::Impl*&>::type&& std::move<CEntity::Impl*&>(CEntity::Impl*&) [265]
-----------------------------------------------
                0.08    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<AEntity::Impl> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<AEntity::Impl> >&) [227]
[266]    0.0    0.08    0.00 10000002         std::_Head_base<1ul, std::default_delete<AEntity::Impl>, true>::_M_head(std::_Head_base<1ul, std::default_delete<AEntity::Impl>, true>&) [266]
-----------------------------------------------
                0.02    0.06 10000002/10000002     CEntity::Impl::Impl(int) [138]
[267]    0.0    0.02    0.06 10000002         std::unique_ptr<C, std::default_delete<C> >::unique_ptr<std::default_delete<C>, void>() [267]
                0.01    0.05 10000002/10000002     std::__uniq_ptr_data<C, std::default_delete<C>, true, true>::__uniq_ptr_impl() [295]
-----------------------------------------------
                0.02    0.06 10000002/10000002     std::unique_ptr<A, std::default_delete<A> >::get_deleter() [235]
[268]    0.0    0.02    0.06 10000002         std::__uniq_ptr_impl<A, std::default_delete<A> >::_M_deleter() [268]
                0.04    0.02 10000002/10000002     std::tuple_element<1ul, std::tuple<A*, std::default_delete<A> > >::type& std::get<1ul, A*, std::default_delete<A> >(std::tuple<A*, std::default_delete<A> >&) [298]
-----------------------------------------------
                0.05    0.03 10000002/10000002     std::__uniq_ptr_data<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> >, true, true>::__uniq_ptr_impl() [228]
[269]    0.0    0.05    0.03 10000002         std::__uniq_ptr_impl<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::__uniq_ptr_impl() [269]
                0.00    0.03 10000002/10000002     std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::tuple<true, true>() [354]
-----------------------------------------------
                0.04    0.04 10000002/10000002     std::tuple_element<0ul, std::tuple<CIf*, std::default_delete<CIf> > >::type const& std::get<0ul, CIf*, std::default_delete<CIf> >(std::tuple<CIf*, std::default_delete<CIf> > const&) [253]
[270]    0.0    0.04    0.04 10000002         CIf* const& std::__get_helper<0ul, CIf*, std::default_delete<CIf> >(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> > const&) [270]
                0.00    0.04 10000002/10000002     std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_M_head(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> > const&) [326]
-----------------------------------------------
                0.01    0.07 10000002/10000002     std::__uniq_ptr_impl<B, std::default_delete<B> >::_M_deleter() [251]
[271]    0.0    0.01    0.07 10000002         std::tuple_element<1ul, std::tuple<B*, std::default_delete<B> > >::type& std::get<1ul, B*, std::default_delete<B> >(std::tuple<B*, std::default_delete<B> >&) [271]
                0.02    0.05 10000002/10000002     std::default_delete<B>& std::__get_helper<1ul, std::default_delete<B>>(std::_Tuple_impl<1ul, std::default_delete<B>>&) [282]
-----------------------------------------------
                0.08    0.00 10000002/10000002     AIf::instantiate(int) [38]
[272]    0.0    0.08    0.00 10000002         std::remove_reference<std::unique_ptr<AIf, std::default_delete<AIf> >&>::type&& std::move<std::unique_ptr<AIf, std::default_delete<AIf> >&>(std::unique_ptr<AIf, std::default_delete<AIf> >&) [272]
-----------------------------------------------
                                                 <spontaneous>
[273]    0.0    0.08    0.00                 std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) [273]
-----------------------------------------------
                0.02    0.05 10000002/10000002     std::unique_ptr<A, std::default_delete<A> >::reset(A*) [198]
[274]    0.0    0.02    0.05 10000002         std::__uniq_ptr_impl<A, std::default_delete<A> >::reset(A*) [274]
                0.01    0.04 20000004/30000006     std::__uniq_ptr_impl<A, std::default_delete<A> >::_M_ptr() [264]
-----------------------------------------------
                0.04    0.03 10000003/10000003     std::tuple_element<1ul, std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > >::type& std::get<1ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [262]
[275]    0.0    0.04    0.03 10000003         std::default_delete<TargetIf<SampleStruct, CIf> >& std::__get_helper<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >>(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >>&) [275]
                0.02    0.01 10000003/20000005     std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [287]
-----------------------------------------------
                0.00    0.01 10000002/50000010     std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_Tuple_impl(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&&) [156]
                0.02    0.04 40000008/50000010     AIf*& std::__get_helper<0ul, AIf*, std::default_delete<AIf> >(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&) [221]
[276]    0.0    0.02    0.05 50000010         std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_M_head(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&) [276]
                0.05    0.00 50000010/50000010     std::_Head_base<0ul, AIf*, false>::_M_head(std::_Head_base<0ul, AIf*, false>&) [300]
-----------------------------------------------
                0.04    0.03 20000004/20000004     std::tuple_element<0ul, std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > >::type& std::get<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >(std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >&) [225]
[277]    0.0    0.04    0.03 20000004         Target<SampleStruct, CIf>*& std::__get_helper<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >(std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >&) [277]
                0.02    0.01 20000004/20000004     std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >&) [335]
-----------------------------------------------
                0.02    0.05 10000002/10000002     std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_Tuple_impl(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&&) [156]
[278]    0.0    0.02    0.05 10000002         std::_Tuple_impl<1ul, std::default_delete<AIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<AIf> >&&) [278]
                0.00    0.03 10000002/20000004     std::_Tuple_impl<1ul, std::default_delete<AIf> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<AIf> >&) [289]
                0.02    0.00 10000002/10000002     std::_Head_base<1ul, std::default_delete<AIf>, true>::_Head_base<std::default_delete<AIf> >(std::default_delete<AIf>&&) [383]
                0.00    0.00 10000002/20000004     std::default_delete<AIf>&& std::forward<std::default_delete<AIf> >(std::remove_reference<std::default_delete<AIf> >::type&) [569]
-----------------------------------------------
                0.02    0.05 10000002/10000002     std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::get_deleter() [236]
[279]    0.0    0.02    0.05 10000002         std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::_M_deleter() [279]
                0.03    0.02 10000002/10000002     std::tuple_element<1ul, std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> > >::type& std::get<1ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >(std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> >&) [312]
-----------------------------------------------
                0.02    0.05 10000002/10000002     std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::__uniq_ptr_impl(BIf*) [167]
[280]    0.0    0.02    0.05 10000002         std::tuple<BIf*, std::default_delete<BIf> >::tuple<true, true>() [280]
                0.00    0.05 10000002/10000002     std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_Tuple_impl() [304]
-----------------------------------------------
                0.04    0.03 10000002/10000002     std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::__uniq_ptr_impl() [240]
[281]    0.0    0.04    0.03 10000002         std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> >::tuple<true, true>() [281]
                0.00    0.03 10000002/10000002     std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >::_Tuple_impl() [351]
-----------------------------------------------
                0.02    0.05 10000002/10000002     std::tuple_element<1ul, std::tuple<B*, std::default_delete<B> > >::type& std::get<1ul, B*, std::default_delete<B> >(std::tuple<B*, std::default_delete<B> >&) [271]
[282]    0.0    0.02    0.05 10000002         std::default_delete<B>& std::__get_helper<1ul, std::default_delete<B>>(std::_Tuple_impl<1ul, std::default_delete<B>>&) [282]
                0.02    0.03 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<B> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<B> >&) [305]
-----------------------------------------------
                0.06    0.00 30000006/30000006     std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >::_M_head(std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >&) [200]
[283]    0.0    0.06    0.00 30000006         std::_Head_base<0ul, AEntity::Impl*, false>::_M_head(std::_Head_base<0ul, AEntity::Impl*, false>&) [283]
-----------------------------------------------
                0.05    0.01 30000006/30000006     A*& std::__get_helper<0ul, A*, std::default_delete<A> >(std::_Tuple_impl<0ul, A*, std::default_delete<A> >&) [285]
[284]    0.0    0.05    0.01 30000006         std::_Tuple_impl<0ul, A*, std::default_delete<A> >::_M_head(std::_Tuple_impl<0ul, A*, std::default_delete<A> >&) [284]
                0.01    0.00 30000006/30000006     std::_Head_base<0ul, A*, false>::_M_head(std::_Head_base<0ul, A*, false>&) [407]
-----------------------------------------------
                0.00    0.06 30000006/30000006     std::tuple_element<0ul, std::tuple<A*, std::default_delete<A> > >::type& std::get<0ul, A*, std::default_delete<A> >(std::tuple<A*, std::default_delete<A> >&) [286]
[285]    0.0    0.00    0.06 30000006         A*& std::__get_helper<0ul, A*, std::default_delete<A> >(std::_Tuple_impl<0ul, A*, std::default_delete<A> >&) [285]
                0.05    0.01 30000006/30000006     std::_Tuple_impl<0ul, A*, std::default_delete<A> >::_M_head(std::_Tuple_impl<0ul, A*, std::default_delete<A> >&) [284]
-----------------------------------------------
                0.00    0.06 30000006/30000006     std::__uniq_ptr_impl<A, std::default_delete<A> >::_M_ptr() [264]
[286]    0.0    0.00    0.06 30000006         std::tuple_element<0ul, std::tuple<A*, std::default_delete<A> > >::type& std::get<0ul, A*, std::default_delete<A> >(std::tuple<A*, std::default_delete<A> >&) [286]
                0.00    0.06 30000006/30000006     A*& std::__get_helper<0ul, A*, std::default_delete<A> >(std::_Tuple_impl<0ul, A*, std::default_delete<A> >&) [285]
-----------------------------------------------
                0.02    0.01 10000002/20000005     std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [243]
                0.02    0.01 10000003/20000005     std::default_delete<TargetIf<SampleStruct, CIf> >& std::__get_helper<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >>(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >>&) [275]
[287]    0.0    0.04    0.02 20000005         std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [287]
                0.02    0.00 20000005/20000005     std::_Head_base<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >, true>::_M_head(std::_Head_base<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >, true>&) [364]
-----------------------------------------------
                0.06    0.00 20000004/20000004     std::_Tuple_impl<1ul, std::default_delete<AIf> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<AIf> >&) [289]
[288]    0.0    0.06    0.00 20000004         std::_Head_base<1ul, std::default_delete<AIf>, true>::_M_head(std::_Head_base<1ul, std::default_delete<AIf>, true>&) [288]
-----------------------------------------------
                0.00    0.03 10000002/20000004     std::_Tuple_impl<1ul, std::default_delete<AIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<AIf> >&&) [278]
                0.00    0.03 10000002/20000004     std::default_delete<AIf>& std::__get_helper<1ul, std::default_delete<AIf>>(std::_Tuple_impl<1ul, std::default_delete<AIf>>&) [355]
[289]    0.0    0.00    0.06 20000004         std::_Tuple_impl<1ul, std::default_delete<AIf> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<AIf> >&) [289]
                0.06    0.00 20000004/20000004     std::_Head_base<1ul, std::default_delete<AIf>, true>::_M_head(std::_Head_base<1ul, std::default_delete<AIf>, true>&) [288]
-----------------------------------------------
                0.06    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<CIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<CIf> >&&) [246]
[290]    0.0    0.06    0.00 10000002         std::_Head_base<1ul, std::default_delete<CIf>, true>::_Head_base<std::default_delete<CIf> >(std::default_delete<CIf>&&) [290]
                0.00    0.00 10000002/20000004     std::default_delete<CIf>&& std::forward<std::default_delete<CIf> >(std::remove_reference<std::default_delete<CIf> >::type&) [570]
-----------------------------------------------
                0.04    0.02 10000002/10000002     AEntity::Impl::Impl(int) [144]
[291]    0.0    0.04    0.02 10000002         std::unique_ptr<A, std::default_delete<A> >::unique_ptr<std::default_delete<A>, void>() [291]
                0.01    0.01 10000002/10000002     std::__uniq_ptr_data<A, std::default_delete<A>, true, true>::__uniq_ptr_impl() [391]
-----------------------------------------------
                0.01    0.05 10000002/10000002     std::unique_ptr<AIf, std::default_delete<AIf> >::~unique_ptr() [58]
[292]    0.0    0.01    0.05 10000002         std::unique_ptr<AIf, std::default_delete<AIf> >::get_deleter() [292]
                0.00    0.05 10000002/10000002     std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::_M_deleter() [309]
-----------------------------------------------
                0.00    0.06 10000002/10000002     std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> >::tuple<true, true>() [296]
[293]    0.0    0.00    0.06 10000002         std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >::_Tuple_impl() [293]
                0.02    0.02 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<CEntity::Impl> >::_Tuple_impl() [327]
                0.02    0.00 10000002/10000002     std::_Head_base<0ul, CEntity::Impl*, false>::_Head_base() [382]
-----------------------------------------------
                0.06    0.00 10000002/10000002     std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_Tuple_impl() [259]
[294]    0.0    0.06    0.00 10000002         std::_Tuple_impl<1ul, std::default_delete<AIf> >::_Tuple_impl() [294]
                0.00    0.00 10000002/10000002     std::_Head_base<1ul, std::default_delete<AIf>, true>::_Head_base() [587]
-----------------------------------------------
                0.01    0.05 10000002/10000002     std::unique_ptr<C, std::default_delete<C> >::unique_ptr<std::default_delete<C>, void>() [267]
[295]    0.0    0.01    0.05 10000002         std::__uniq_ptr_data<C, std::default_delete<C>, true, true>::__uniq_ptr_impl() [295]
                0.00    0.05 10000002/10000002     std::__uniq_ptr_impl<C, std::default_delete<C> >::__uniq_ptr_impl() [308]
-----------------------------------------------
                0.00    0.06 10000002/10000002     std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::__uniq_ptr_impl() [261]
[296]    0.0    0.00    0.06 10000002         std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> >::tuple<true, true>() [296]
                0.00    0.06 10000002/10000002     std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >::_Tuple_impl() [293]
-----------------------------------------------
                0.01    0.05 10000002/10000002     std::tuple_element<1ul, std::tuple<C*, std::default_delete<C> > >::type& std::get<1ul, C*, std::default_delete<C> >(std::tuple<C*, std::default_delete<C> >&) [254]
[297]    0.0    0.01    0.05 10000002         std::default_delete<C>& std::__get_helper<1ul, std::default_delete<C>>(std::_Tuple_impl<1ul, std::default_delete<C>>&) [297]
                0.04    0.01 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<C> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<C> >&) [306]
-----------------------------------------------
                0.04    0.02 10000002/10000002     std::__uniq_ptr_impl<A, std::default_delete<A> >::_M_deleter() [268]
[298]    0.0    0.04    0.02 10000002         std::tuple_element<1ul, std::tuple<A*, std::default_delete<A> > >::type& std::get<1ul, A*, std::default_delete<A> >(std::tuple<A*, std::default_delete<A> >&) [298]
                0.02    0.00 10000002/10000002     std::default_delete<A>& std::__get_helper<1ul, std::default_delete<A>>(std::_Tuple_impl<1ul, std::default_delete<A>>&) [394]
-----------------------------------------------
                0.06    0.00 10000002/10000002     std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::_M_deleter() [230]
[299]    0.0    0.06    0.00 10000002         std::tuple_element<1ul, std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> > >::type& std::get<1ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >(std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> >&) [299]
                0.00    0.00 10000002/10000002     std::default_delete<BEntity::Impl>& std::__get_helper<1ul, std::default_delete<BEntity::Impl>>(std::_Tuple_impl<1ul, std::default_delete<BEntity::Impl>>&) [611]
-----------------------------------------------
                0.05    0.00 50000010/50000010     std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_M_head(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&) [276]
[300]    0.0    0.05    0.00 50000010         std::_Head_base<0ul, AIf*, false>::_M_head(std::_Head_base<0ul, AIf*, false>&) [300]
-----------------------------------------------
                0.05    0.00 30000006/30000006     BEntity::Impl*& std::__get_helper<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >(std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >&) [258]
[301]    0.0    0.05    0.00 30000006         std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >::_M_head(std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >&) [301]
                0.00    0.00 30000006/30000006     std::_Head_base<0ul, BEntity::Impl*, false>::_M_head(std::_Head_base<0ul, BEntity::Impl*, false>&) [565]
-----------------------------------------------
                0.02    0.03 20000004/20000004     std::tuple_element<0ul, std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > >::type& std::get<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >(std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >&) [234]
[302]    0.0    0.02    0.03 20000004         TargetEntity<SampleStruct, CIf>::Impl*& std::__get_helper<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >(std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >&) [302]
                0.02    0.01 20000004/20000004     std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_M_head(std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >&) [336]
-----------------------------------------------
                0.04    0.01 10000002/10000002     std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_Tuple_impl(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&&) [156]
[303]    0.0    0.04    0.01 10000002         std::_Head_base<0ul, AIf*, false>::_Head_base<AIf*>(AIf*&&) [303]
                0.01    0.00 10000002/20000004     AIf*&& std::forward<AIf*>(std::remove_reference<AIf*>::type&) [368]
-----------------------------------------------
                0.00    0.05 10000002/10000002     std::tuple<BIf*, std::default_delete<BIf> >::tuple<true, true>() [280]
[304]    0.0    0.00    0.05 10000002         std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_Tuple_impl() [304]
                0.03    0.00 10000002/10000002     std::_Head_base<0ul, BIf*, false>::_Head_base() [343]
                0.02    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<BIf> >::_Tuple_impl() [389]
-----------------------------------------------
                0.02    0.03 10000002/10000002     std::default_delete<B>& std::__get_helper<1ul, std::default_delete<B>>(std::_Tuple_impl<1ul, std::default_delete<B>>&) [282]
[305]    0.0    0.02    0.03 10000002         std::_Tuple_impl<1ul, std::default_delete<B> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<B> >&) [305]
                0.03    0.00 10000002/10000002     std::_Head_base<1ul, std::default_delete<B>, true>::_M_head(std::_Head_base<1ul, std::default_delete<B>, true>&) [348]
-----------------------------------------------
                0.04    0.01 10000002/10000002     std::default_delete<C>& std::__get_helper<1ul, std::default_delete<C>>(std::_Tuple_impl<1ul, std::default_delete<C>>&) [297]
[306]    0.0    0.04    0.01 10000002         std::_Tuple_impl<1ul, std::default_delete<C> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<C> >&) [306]
                0.01    0.00 10000002/10000002     std::_Head_base<1ul, std::default_delete<C>, true>::_M_head(std::_Head_base<1ul, std::default_delete<C>, true>&) [418]
-----------------------------------------------
                0.02    0.03 10000002/10000002     std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_Tuple_impl() [250]
[307]    0.0    0.02    0.03 10000002         std::_Tuple_impl<1ul, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_Tuple_impl() [307]
                0.03    0.00 10000002/10000002     std::_Head_base<1ul, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl>, true>::_Head_base() [349]
-----------------------------------------------
                0.00    0.05 10000002/10000002     std::__uniq_ptr_data<C, std::default_delete<C>, true, true>::__uniq_ptr_impl() [295]
[308]    0.0    0.00    0.05 10000002         std::__uniq_ptr_impl<C, std::default_delete<C> >::__uniq_ptr_impl() [308]
                0.01    0.04 10000002/10000002     std::tuple<C*, std::default_delete<C> >::tuple<true, true>() [310]
-----------------------------------------------
                0.00    0.05 10000002/10000002     std::unique_ptr<AIf, std::default_delete<AIf> >::get_deleter() [292]
[309]    0.0    0.00    0.05 10000002         std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::_M_deleter() [309]
                0.02    0.03 10000002/10000002     std::tuple_element<1ul, std::tuple<AIf*, std::default_delete<AIf> > >::type& std::get<1ul, AIf*, std::default_delete<AIf> >(std::tuple<AIf*, std::default_delete<AIf> >&) [311]
-----------------------------------------------
                0.01    0.04 10000002/10000002     std::__uniq_ptr_impl<C, std::default_delete<C> >::__uniq_ptr_impl() [308]
[310]    0.0    0.01    0.04 10000002         std::tuple<C*, std::default_delete<C> >::tuple<true, true>() [310]
                0.01    0.03 10000002/10000002     std::_Tuple_impl<0ul, C*, std::default_delete<C> >::_Tuple_impl() [325]
-----------------------------------------------
                0.02    0.03 10000002/10000002     std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::_M_deleter() [309]
[311]    0.0    0.02    0.03 10000002         std::tuple_element<1ul, std::tuple<AIf*, std::default_delete<AIf> > >::type& std::get<1ul, AIf*, std::default_delete<AIf> >(std::tuple<AIf*, std::default_delete<AIf> >&) [311]
                0.00    0.03 10000002/10000002     std::default_delete<AIf>& std::__get_helper<1ul, std::default_delete<AIf>>(std::_Tuple_impl<1ul, std::default_delete<AIf>>&) [355]
-----------------------------------------------
                0.03    0.02 10000002/10000002     std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::_M_deleter() [279]
[312]    0.0    0.03    0.02 10000002         std::tuple_element<1ul, std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> > >::type& std::get<1ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >(std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> >&) [312]
                0.00    0.02 10000002/10000002     std::default_delete<CEntity::Impl>& std::__get_helper<1ul, std::default_delete<CEntity::Impl>>(std::_Tuple_impl<1ul, std::default_delete<CEntity::Impl>>&) [395]
-----------------------------------------------
                0.02    0.03 10000003/10000003     std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::tuple<true, true>() [314]
[313]    0.0    0.02    0.03 10000003         std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl() [313]
                0.02    0.00 10000003/10000003     std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl() [402]
                0.01    0.00 10000003/10000003     std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>::_Head_base() [427]
-----------------------------------------------
                0.00    0.05 10000003/10000003     std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::__uniq_ptr_impl(TargetIf<SampleStruct, CIf>*) [193]
[314]    0.0    0.00    0.05 10000003         std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::tuple<true, true>() [314]
                0.02    0.03 10000003/10000003     std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl() [313]
-----------------------------------------------
                0.00    0.04 10000002/10000002     std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_Tuple_impl(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&&) [222]
[315]    0.0    0.00    0.04 10000002         std::_Tuple_impl<1ul, std::default_delete<BIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<BIf> >&&) [315]
                0.02    0.00 10000002/20000004     std::default_delete<BIf>&& std::forward<std::default_delete<BIf> >(std::remove_reference<std::default_delete<BIf> >::type&) [321]
                0.00    0.02 10000002/10000002     std::_Head_base<1ul, std::default_delete<BIf>, true>::_Head_base<std::default_delete<BIf> >(std::default_delete<BIf>&&) [384]
                0.00    0.01 10000002/20000004     std::_Tuple_impl<1ul, std::default_delete<BIf> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<BIf> >&) [412]
-----------------------------------------------
                0.04    0.00 50000010/50000010     std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_M_head(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&) [182]
[316]    0.0    0.04    0.00 50000010         std::_Head_base<0ul, CIf*, false>::_M_head(std::_Head_base<0ul, CIf*, false>&) [316]
-----------------------------------------------
                0.04    0.00 30000006/30000006     std::_Tuple_impl<0ul, B*, std::default_delete<B> >::_M_head(std::_Tuple_impl<0ul, B*, std::default_delete<B> >&) [263]
[317]    0.0    0.04    0.00 30000006         std::_Head_base<0ul, B*, false>::_M_head(std::_Head_base<0ul, B*, false>&) [317]
-----------------------------------------------
                0.04    0.00 30000006/30000006     std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >::_M_head(std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >&) [208]
[318]    0.0    0.04    0.00 30000006         std::_Head_base<0ul, CEntity::Impl*, false>::_M_head(std::_Head_base<0ul, CEntity::Impl*, false>&) [318]
-----------------------------------------------
                0.02    0.00 10000002/20000004     std::unique_ptr<A, std::default_delete<A> >::reset(A*) [198]
                0.02    0.00 10000002/20000004     std::unique_ptr<A, std::default_delete<A> >::~unique_ptr() [174]
[319]    0.0    0.04    0.00 20000004         std::remove_reference<A*&>::type&& std::move<A*&>(A*&) [319]
-----------------------------------------------
                0.02    0.00 10000002/20000004     std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::reset(AEntity::Impl*) [105]
                0.02    0.00 10000002/20000004     std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::~unique_ptr() [85]
[320]    0.0    0.04    0.00 20000004         std::remove_reference<AEntity::Impl*&>::type&& std::move<AEntity::Impl*&>(AEntity::Impl*&) [320]
-----------------------------------------------
                0.02    0.00 10000002/20000004     std::_Head_base<1ul, std::default_delete<BIf>, true>::_Head_base<std::default_delete<BIf> >(std::default_delete<BIf>&&) [384]
                0.02    0.00 10000002/20000004     std::_Tuple_impl<1ul, std::default_delete<BIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<BIf> >&&) [315]
[321]    0.0    0.04    0.00 20000004         std::default_delete<BIf>&& std::forward<std::default_delete<BIf> >(std::remove_reference<std::default_delete<BIf> >::type&) [321]
-----------------------------------------------
                0.02    0.00 10000002/20000004     std::_Head_base<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >, true>::_Head_base<std::default_delete<TargetIf<SampleStruct, CIf> > >(std::default_delete<TargetIf<SampleStruct, CIf> >&&) [385]
                0.02    0.00 10000002/20000004     std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [243]
[322]    0.0    0.04    0.00 20000004         std::default_delete<TargetIf<SampleStruct, CIf> >&& std::forward<std::default_delete<TargetIf<SampleStruct, CIf> > >(std::remove_reference<std::default_delete<TargetIf<SampleStruct, CIf> > >::type&) [322]
-----------------------------------------------
                0.00    0.00       1/10000002     SampleTest_RealSample2_Test::TestBody() [428]
                0.00    0.00       1/10000002     SampleTest_PseudoSample1_Test::TestBody() [429]
                0.02    0.02 10000000/10000002     SampleTest_RealSample1_Test::TestBody() [4]
[323]    0.0    0.02    0.02 10000002         std::unique_ptr<BIf, std::default_delete<BIf> >::operator*() const [323]
                0.00    0.02 10000002/10000002     std::unique_ptr<BIf, std::default_delete<BIf> >::get() const [374]
-----------------------------------------------
                0.04    0.00 10000002/10000002     std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_M_head(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> > const&) [326]
[324]    0.0    0.04    0.00 10000002         std::_Head_base<0ul, CIf*, false>::_M_head(std::_Head_base<0ul, CIf*, false> const&) [324]
-----------------------------------------------
                0.01    0.03 10000002/10000002     std::tuple<C*, std::default_delete<C> >::tuple<true, true>() [310]
[325]    0.0    0.01    0.03 10000002         std::_Tuple_impl<0ul, C*, std::default_delete<C> >::_Tuple_impl() [325]
                0.03    0.00 10000002/10000002     std::_Head_base<0ul, C*, false>::_Head_base() [342]
                0.00    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<C> >::_Tuple_impl() [603]
-----------------------------------------------
                0.00    0.04 10000002/10000002     CIf* const& std::__get_helper<0ul, CIf*, std::default_delete<CIf> >(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> > const&) [270]
[326]    0.0    0.00    0.04 10000002         std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_M_head(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> > const&) [326]
                0.04    0.00 10000002/10000002     std::_Head_base<0ul, CIf*, false>::_M_head(std::_Head_base<0ul, CIf*, false> const&) [324]
-----------------------------------------------
                0.02    0.02 10000002/10000002     std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >::_Tuple_impl() [293]
[327]    0.0    0.02    0.02 10000002         std::_Tuple_impl<1ul, std::default_delete<CEntity::Impl> >::_Tuple_impl() [327]
                0.02    0.00 10000002/10000002     std::_Head_base<1ul, std::default_delete<CEntity::Impl>, true>::_Head_base() [386]
-----------------------------------------------
                0.00    0.00       1/10000002     TargetIf<SampleStruct, CIf>::clone(TargetIf<SampleStruct, CIf> const&) [430]
                0.04    0.00 10000001/10000002     TargetIf<SampleStruct, CIf>::instantiate(AIf const&, BIf const&, CIf const&) [5]
[328]    0.0    0.04    0.00 10000002         std::remove_reference<std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&>::type&& std::move<std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&>(std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [328]
-----------------------------------------------
                0.04    0.00 10000002/10000002     std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [151]
[329]    0.0    0.04    0.00 10000002         std::remove_reference<std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&>::type&& std::move<std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&>(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [329]
-----------------------------------------------
                                                 <spontaneous>
[330]    0.0    0.04    0.00                 SampleStruct::falsifyIdent() const [330]
-----------------------------------------------
                                                 <spontaneous>
[331]    0.0    0.04    0.00                 operator delete(void*) [331]
-----------------------------------------------
                0.03    0.01 10000001/10000001     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_unique_pos(int const&) [154]
[332]    0.0    0.03    0.01 10000001         std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*>::pair<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*&, std::_Rb_tree_node_base*&, true>(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*&, std::_Rb_tree_node_base*&) [332]
                0.01    0.00 10000001/200000020     std::_Rb_tree_node_base*& std::forward<std::_Rb_tree_node_base*&>(std::remove_reference<std::_Rb_tree_node_base*&>::type&) [186]
                0.00    0.00 10000001/10000001     std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*& std::forward<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*&>(std::remove_reference<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*&>::type&) [618]
-----------------------------------------------
                0.02    0.01 10000002/10000002     std::unique_ptr<CIf, std::default_delete<CIf> >::~unique_ptr() [60]
[333]    0.0    0.02    0.01 10000002         std::unique_ptr<CIf, std::default_delete<CIf> >::get_deleter() [333]
                0.00    0.01 10000002/10000002     std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::_M_deleter() [403]
-----------------------------------------------
                0.03    0.00 20000004/20000004     std::_Tuple_impl<1ul, std::default_delete<CIf> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<CIf> >&) [337]
[334]    0.0    0.03    0.00 20000004         std::_Head_base<1ul, std::default_delete<CIf>, true>::_M_head(std::_Head_base<1ul, std::default_delete<CIf>, true>&) [334]
-----------------------------------------------
                0.02    0.01 20000004/20000004     Target<SampleStruct, CIf>*& std::__get_helper<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >(std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >&) [277]
[335]    0.0    0.02    0.01 20000004         std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >&) [335]
                0.01    0.00 20000004/20000004     std::_Head_base<0ul, Target<SampleStruct, CIf>*, false>::_M_head(std::_Head_base<0ul, Target<SampleStruct, CIf>*, false>&) [409]
-----------------------------------------------
                0.02    0.01 20000004/20000004     TargetEntity<SampleStruct, CIf>::Impl*& std::__get_helper<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >(std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >&) [302]
[336]    0.0    0.02    0.01 20000004         std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_M_head(std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >&) [336]
                0.01    0.00 20000004/20000004     std::_Head_base<0ul, TargetEntity<SampleStruct, CIf>::Impl*, false>::_M_head(std::_Head_base<0ul, TargetEntity<SampleStruct, CIf>::Impl*, false>&) [410]
-----------------------------------------------
                0.00    0.01 10000002/20000004     std::_Tuple_impl<1ul, std::default_delete<CIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<CIf> >&&) [246]
                0.00    0.01 10000002/20000004     std::default_delete<CIf>& std::__get_helper<1ul, std::default_delete<CIf>>(std::_Tuple_impl<1ul, std::default_delete<CIf>>&) [404]
[337]    0.0    0.00    0.03 20000004         std::_Tuple_impl<1ul, std::default_delete<CIf> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<CIf> >&) [337]
                0.03    0.00 20000004/20000004     std::_Head_base<1ul, std::default_delete<CIf>, true>::_M_head(std::_Head_base<1ul, std::default_delete<CIf>, true>&) [334]
-----------------------------------------------
                0.00    0.00       1/10000004     std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_Rb_tree_impl<std::less<std::string>, true>::_Rb_tree_impl() [436]
                0.00    0.00       1/10000004     std::_Rb_tree<std::string, std::pair<std::string const, testing::internal::TypeParameterizedTestSuiteRegistry::TypeParameterizedTestSuiteInfo>, std::_Select1st<std::pair<std::string const, testing::internal::TypeParameterizedTestSuiteRegistry::TypeParameterizedTestSuiteInfo> >, std::less<std::string>, std::allocator<std::pair<std::string const, testing::internal::TypeParameterizedTestSuiteRegistry::TypeParameterizedTestSuiteInfo> > >::_Rb_tree_impl<std::less<std::string>, true>::_Rb_tree_impl() [437]
                0.01    0.02 10000002/10000004     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_Rb_tree_impl<std::less<int>, true>::_Rb_tree_impl() [244]
[338]    0.0    0.01    0.02 10000004         std::_Rb_tree_header::_Rb_tree_header() [338]
                0.02    0.00 10000004/10000004     std::_Rb_tree_header::_M_reset() [369]
-----------------------------------------------
                0.03    0.00 10000002/10000002     AEntity::~AEntity() [83]
[339]    0.0    0.03    0.00 10000002         AIf::~AIf() [339]
-----------------------------------------------
                0.02    0.01 10000002/10000002     std::unique_ptr<AIf, std::default_delete<AIf> >::operator*() const [341]
[340]    0.0    0.02    0.01 10000002         std::unique_ptr<AIf, std::default_delete<AIf> >::get() const [340]
                0.00    0.01 10000002/10000002     std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::_M_ptr() const [415]
-----------------------------------------------
                0.00    0.00       1/10000002     SampleTest_RealSample2_Test::TestBody() [428]
                0.00    0.00       1/10000002     SampleTest_PseudoSample1_Test::TestBody() [429]
                0.00    0.03 10000000/10000002     SampleTest_RealSample1_Test::TestBody() [4]
[341]    0.0    0.00    0.03 10000002         std::unique_ptr<AIf, std::default_delete<AIf> >::operator*() const [341]
                0.02    0.01 10000002/10000002     std::unique_ptr<AIf, std::default_delete<AIf> >::get() const [340]
-----------------------------------------------
                0.03    0.00 10000002/10000002     std::_Tuple_impl<0ul, C*, std::default_delete<C> >::_Tuple_impl() [325]
[342]    0.0    0.03    0.00 10000002         std::_Head_base<0ul, C*, false>::_Head_base() [342]
-----------------------------------------------
                0.03    0.00 10000002/10000002     std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_Tuple_impl() [304]
[343]    0.0    0.03    0.00 10000002         std::_Head_base<0ul, BIf*, false>::_Head_base() [343]
-----------------------------------------------
                0.03    0.00 10000002/10000002     std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_Tuple_impl(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&&) [185]
[344]    0.0    0.03    0.00 10000002         std::_Head_base<0ul, CIf*, false>::_Head_base<CIf*>(CIf*&&) [344]
                0.00    0.00 10000002/20000004     CIf*&& std::forward<CIf*>(std::remove_reference<CIf*>::type&) [567]
-----------------------------------------------
                0.03    0.00 10000002/10000002     std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::_Tuple_impl() [350]
[345]    0.0    0.03    0.00 10000002         std::_Head_base<0ul, Target<SampleStruct, CIf>*, false>::_Head_base() [345]
-----------------------------------------------
                0.03    0.00 10000002/10000002     std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_Tuple_impl() [250]
[346]    0.0    0.03    0.00 10000002         std::_Head_base<0ul, TargetEntity<SampleStruct, CIf>::Impl*, false>::_Head_base() [346]
-----------------------------------------------
                0.03    0.00 10000002/10000002     std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >::_Tuple_impl() [351]
[347]    0.0    0.03    0.00 10000002         std::_Head_base<0ul, AEntity::Impl*, false>::_Head_base() [347]
-----------------------------------------------
                0.03    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<B> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<B> >&) [305]
[348]    0.0    0.03    0.00 10000002         std::_Head_base<1ul, std::default_delete<B>, true>::_M_head(std::_Head_base<1ul, std::default_delete<B>, true>&) [348]
-----------------------------------------------
                0.03    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_Tuple_impl() [307]
[349]    0.0    0.03    0.00 10000002         std::_Head_base<1ul, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl>, true>::_Head_base() [349]
-----------------------------------------------
                0.00    0.03 10000002/10000002     std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::tuple<true, true>() [354]
[350]    0.0    0.00    0.03 10000002         std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::_Tuple_impl() [350]
                0.03    0.00 10000002/10000002     std::_Head_base<0ul, Target<SampleStruct, CIf>*, false>::_Head_base() [345]
                0.00    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<Target<SampleStruct, CIf> > >::_Tuple_impl() [605]
-----------------------------------------------
                0.00    0.03 10000002/10000002     std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> >::tuple<true, true>() [281]
[351]    0.0    0.00    0.03 10000002         std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >::_Tuple_impl() [351]
                0.03    0.00 10000002/10000002     std::_Head_base<0ul, AEntity::Impl*, false>::_Head_base() [347]
                0.00    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<AEntity::Impl> >::_Tuple_impl() [606]
-----------------------------------------------
                0.03    0.00 10000002/10000002     std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >::_Tuple_impl() [238]
[352]    0.0    0.03    0.00 10000002         std::_Tuple_impl<1ul, std::default_delete<BEntity::Impl> >::_Tuple_impl() [352]
                0.00    0.00 10000002/10000002     std::_Head_base<1ul, std::default_delete<BEntity::Impl>, true>::_Head_base() [593]
-----------------------------------------------
                0.01    0.02 10000002/10000002     std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::__uniq_ptr_impl(CIf*) [232]
[353]    0.0    0.01    0.02 10000002         std::tuple<CIf*, std::default_delete<CIf> >::tuple<true, true>() [353]
                0.02    0.00 10000002/10000002     std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_Tuple_impl() [388]
-----------------------------------------------
                0.00    0.03 10000002/10000002     std::__uniq_ptr_impl<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::__uniq_ptr_impl() [269]
[354]    0.0    0.00    0.03 10000002         std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::tuple<true, true>() [354]
                0.00    0.03 10000002/10000002     std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::_Tuple_impl() [350]
-----------------------------------------------
                0.00    0.03 10000002/10000002     std::tuple_element<1ul, std::tuple<AIf*, std::default_delete<AIf> > >::type& std::get<1ul, AIf*, std::default_delete<AIf> >(std::tuple<AIf*, std::default_delete<AIf> >&) [311]
[355]    0.0    0.00    0.03 10000002         std::default_delete<AIf>& std::__get_helper<1ul, std::default_delete<AIf>>(std::_Tuple_impl<1ul, std::default_delete<AIf>>&) [355]
                0.00    0.03 10000002/20000004     std::_Tuple_impl<1ul, std::default_delete<AIf> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<AIf> >&) [289]
-----------------------------------------------
                0.03    0.00 10000002/10000002     std::unique_ptr<BIf, std::default_delete<BIf> >::~unique_ptr() [64]
[356]    0.0    0.03    0.00 10000002         std::remove_reference<BIf*&>::type&& std::move<BIf*&>(BIf*&) [356]
-----------------------------------------------
                0.03    0.00 10000002/10000002     std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::reset(Target<SampleStruct, CIf>*) [132]
[357]    0.0    0.03    0.00 10000002         std::remove_reference<Target<SampleStruct, CIf>*&>::type&& std::move<Target<SampleStruct, CIf>*&>(Target<SampleStruct, CIf>*&) [357]
-----------------------------------------------
                0.00    0.03 10000002/10000002     std::unique_ptr<BIf, std::default_delete<BIf> >::~unique_ptr() [64]
[358]    0.0    0.00    0.03 10000002         std::unique_ptr<BIf, std::default_delete<BIf> >::get_deleter() [358]
                0.00    0.03 10000002/10000002     std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::_M_deleter() [359]
-----------------------------------------------
                0.00    0.03 10000002/10000002     std::unique_ptr<BIf, std::default_delete<BIf> >::get_deleter() [358]
[359]    0.0    0.00    0.03 10000002         std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::_M_deleter() [359]
                0.00    0.03 10000002/10000002     std::tuple_element<1ul, std::tuple<BIf*, std::default_delete<BIf> > >::type& std::get<1ul, BIf*, std::default_delete<BIf> >(std::tuple<BIf*, std::default_delete<BIf> >&) [361]
-----------------------------------------------
                0.02    0.01 10000002/10000002     std::tuple_element<1ul, std::tuple<BIf*, std::default_delete<BIf> > >::type& std::get<1ul, BIf*, std::default_delete<BIf> >(std::tuple<BIf*, std::default_delete<BIf> >&) [361]
[360]    0.0    0.02    0.01 10000002         std::default_delete<BIf>& std::__get_helper<1ul, std::default_delete<BIf>>(std::_Tuple_impl<1ul, std::default_delete<BIf>>&) [360]
                0.00    0.01 10000002/20000004     std::_Tuple_impl<1ul, std::default_delete<BIf> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<BIf> >&) [412]
-----------------------------------------------
                0.00    0.03 10000002/10000002     std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::_M_deleter() [359]
[361]    0.0    0.00    0.03 10000002         std::tuple_element<1ul, std::tuple<BIf*, std::default_delete<BIf> > >::type& std::get<1ul, BIf*, std::default_delete<BIf> >(std::tuple<BIf*, std::default_delete<BIf> >&) [361]
                0.02    0.01 10000002/10000002     std::default_delete<BIf>& std::__get_helper<1ul, std::default_delete<BIf>>(std::_Tuple_impl<1ul, std::default_delete<BIf>>&) [360]
-----------------------------------------------
                0.02    0.00 50000012/50000012     std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [247]
[362]    0.0    0.02    0.00 50000012         std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>::_M_head(std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>&) [362]
-----------------------------------------------
                0.02    0.00 50000010/50000010     std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_M_head(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&) [256]
[363]    0.0    0.02    0.00 50000010         std::_Head_base<0ul, BIf*, false>::_M_head(std::_Head_base<0ul, BIf*, false>&) [363]
-----------------------------------------------
                0.02    0.00 20000005/20000005     std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [287]
[364]    0.0    0.02    0.00 20000005         std::_Head_base<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >, true>::_M_head(std::_Head_base<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >, true>&) [364]
-----------------------------------------------
                0.01    0.00 10000002/20000004     std::unique_ptr<B, std::default_delete<B> >::reset(B*) [176]
                0.01    0.00 10000002/20000004     std::unique_ptr<B, std::default_delete<B> >::~unique_ptr() [153]
[365]    0.0    0.02    0.00 20000004         std::remove_reference<B*&>::type&& std::move<B*&>(B*&) [365]
-----------------------------------------------
                0.01    0.00 10000002/20000004     std::unique_ptr<C, std::default_delete<C> >::reset(C*) [192]
                0.01    0.00 10000002/20000004     std::unique_ptr<C, std::default_delete<C> >::~unique_ptr() [119]
[366]    0.0    0.02    0.00 20000004         std::remove_reference<C*&>::type&& std::move<C*&>(C*&) [366]
-----------------------------------------------
                0.01    0.00 10000002/20000004     std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::reset(BEntity::Impl*) [202]
                0.01    0.00 10000002/20000004     std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::~unique_ptr() [97]
[367]    0.0    0.02    0.00 20000004         std::remove_reference<BEntity::Impl*&>::type&& std::move<BEntity::Impl*&>(BEntity::Impl*&) [367]
-----------------------------------------------
                0.01    0.00 10000002/20000004     std::_Head_base<0ul, AIf*, false>::_Head_base<AIf*>(AIf*&&) [303]
                0.01    0.00 10000002/20000004     std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_Tuple_impl(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&&) [156]
[368]    0.0    0.02    0.00 20000004         AIf*&& std::forward<AIf*>(std::remove_reference<AIf*>::type&) [368]
-----------------------------------------------
                0.02    0.00 10000004/10000004     std::_Rb_tree_header::_Rb_tree_header() [338]
[369]    0.0    0.02    0.00 10000004         std::_Rb_tree_header::_M_reset() [369]
-----------------------------------------------
                0.02    0.00 10000003/10000003     std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::~unique_ptr() [106]
[370]    0.0    0.02    0.00 10000003         std::remove_reference<TargetIf<SampleStruct, CIf>*&>::type&& std::move<TargetIf<SampleStruct, CIf>*&>(TargetIf<SampleStruct, CIf>*&) [370]
-----------------------------------------------
                0.02    0.00 10000002/10000002     AEntity::Impl::Impl(int) [144]
[371]    0.0    0.02    0.00 10000002         A::A(int) [371]
-----------------------------------------------
                0.02    0.00 10000002/10000002     BEntity::BEntity() [89]
[372]    0.0    0.02    0.00 10000002         BIf::BIf() [372]
-----------------------------------------------
                0.02    0.00 10000002/10000002     BEntity::~BEntity() [95]
[373]    0.0    0.02    0.00 10000002         BIf::~BIf() [373]
-----------------------------------------------
                0.00    0.02 10000002/10000002     std::unique_ptr<BIf, std::default_delete<BIf> >::operator*() const [323]
[374]    0.0    0.00    0.02 10000002         std::unique_ptr<BIf, std::default_delete<BIf> >::get() const [374]
                0.02    0.00 10000002/10000002     std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::_M_ptr() const [377]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::unique_ptr<A, std::default_delete<A> >::~unique_ptr() [174]
[375]    0.0    0.02    0.00 10000002         std::default_delete<A>::operator()(A*) const [375]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::unique_ptr<C, std::default_delete<C> >::~unique_ptr() [119]
[376]    0.0    0.02    0.00 10000002         std::default_delete<C>::operator()(C*) const [376]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::unique_ptr<BIf, std::default_delete<BIf> >::get() const [374]
[377]    0.0    0.02    0.00 10000002         std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::_M_ptr() const [377]
                0.00    0.00 10000002/10000002     std::tuple_element<0ul, std::tuple<BIf*, std::default_delete<BIf> > >::type const& std::get<0ul, BIf*, std::default_delete<BIf> >(std::tuple<BIf*, std::default_delete<BIf> > const&) [612]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_Rb_tree_impl<std::less<int>, true>::_Rb_tree_impl() [244]
[378]    0.0    0.02    0.00 10000002         std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::allocator() [378]
                0.00    0.00 10000002/10000002     __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::new_allocator() [577]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_Tuple_impl(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&&) [222]
[379]    0.0    0.02    0.00 10000002         std::_Head_base<0ul, BIf*, false>::_Head_base<BIf*>(BIf*&&) [379]
                0.00    0.00 10000002/20000004     BIf*&& std::forward<BIf*>(std::remove_reference<BIf*>::type&) [566]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [151]
[380]    0.0    0.02    0.00 10000002         std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>::_Head_base<TargetIf<SampleStruct, CIf>*>(TargetIf<SampleStruct, CIf>*&&) [380]
                0.00    0.00 10000002/20000004     TargetIf<SampleStruct, CIf>*&& std::forward<TargetIf<SampleStruct, CIf>*>(std::remove_reference<TargetIf<SampleStruct, CIf>*>::type&) [568]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >::_Tuple_impl() [238]
[381]    0.0    0.02    0.00 10000002         std::_Head_base<0ul, BEntity::Impl*, false>::_Head_base() [381]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >::_Tuple_impl() [293]
[382]    0.0    0.02    0.00 10000002         std::_Head_base<0ul, CEntity::Impl*, false>::_Head_base() [382]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<AIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<AIf> >&&) [278]
[383]    0.0    0.02    0.00 10000002         std::_Head_base<1ul, std::default_delete<AIf>, true>::_Head_base<std::default_delete<AIf> >(std::default_delete<AIf>&&) [383]
                0.00    0.00 10000002/20000004     std::default_delete<AIf>&& std::forward<std::default_delete<AIf> >(std::remove_reference<std::default_delete<AIf> >::type&) [569]
-----------------------------------------------
                0.00    0.02 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<BIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<BIf> >&&) [315]
[384]    0.0    0.00    0.02 10000002         std::_Head_base<1ul, std::default_delete<BIf>, true>::_Head_base<std::default_delete<BIf> >(std::default_delete<BIf>&&) [384]
                0.02    0.00 10000002/20000004     std::default_delete<BIf>&& std::forward<std::default_delete<BIf> >(std::remove_reference<std::default_delete<BIf> >::type&) [321]
-----------------------------------------------
                0.00    0.02 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [243]
[385]    0.0    0.00    0.02 10000002         std::_Head_base<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >, true>::_Head_base<std::default_delete<TargetIf<SampleStruct, CIf> > >(std::default_delete<TargetIf<SampleStruct, CIf> >&&) [385]
                0.02    0.00 10000002/20000004     std::default_delete<TargetIf<SampleStruct, CIf> >&& std::forward<std::default_delete<TargetIf<SampleStruct, CIf> > >(std::remove_reference<std::default_delete<TargetIf<SampleStruct, CIf> > >::type&) [322]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<CEntity::Impl> >::_Tuple_impl() [327]
[386]    0.0    0.02    0.00 10000002         std::_Head_base<1ul, std::default_delete<CEntity::Impl>, true>::_Head_base() [386]
-----------------------------------------------
                0.00    0.02 10000002/10000002     BEntity::Impl::Impl() [139]
[387]    0.0    0.00    0.02 10000002         std::unique_ptr<B, std::default_delete<B> >::unique_ptr<std::default_delete<B>, void>() [387]
                0.02    0.00 10000002/10000002     std::__uniq_ptr_data<B, std::default_delete<B>, true, true>::__uniq_ptr_impl() [392]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::tuple<CIf*, std::default_delete<CIf> >::tuple<true, true>() [353]
[388]    0.0    0.02    0.00 10000002         std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_Tuple_impl() [388]
                0.00    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<CIf> >::_Tuple_impl() [604]
                0.00    0.00 10000002/10000002     std::_Head_base<0ul, CIf*, false>::_Head_base() [582]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_Tuple_impl() [304]
[389]    0.0    0.02    0.00 10000002         std::_Tuple_impl<1ul, std::default_delete<BIf> >::_Tuple_impl() [389]
                0.00    0.00 10000002/10000002     std::_Head_base<1ul, std::default_delete<BIf>, true>::_Head_base() [588]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::default_delete<CEntity::Impl>& std::__get_helper<1ul, std::default_delete<CEntity::Impl>>(std::_Tuple_impl<1ul, std::default_delete<CEntity::Impl>>&) [395]
[390]    0.0    0.02    0.00 10000002         std::_Tuple_impl<1ul, std::default_delete<CEntity::Impl> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<CEntity::Impl> >&) [390]
                0.00    0.00 10000002/10000002     std::_Head_base<1ul, std::default_delete<CEntity::Impl>, true>::_M_head(std::_Head_base<1ul, std::default_delete<CEntity::Impl>, true>&) [594]
-----------------------------------------------
                0.01    0.01 10000002/10000002     std::unique_ptr<A, std::default_delete<A> >::unique_ptr<std::default_delete<A>, void>() [291]
[391]    0.0    0.01    0.01 10000002         std::__uniq_ptr_data<A, std::default_delete<A>, true, true>::__uniq_ptr_impl() [391]
                0.00    0.01 10000002/10000002     std::__uniq_ptr_impl<A, std::default_delete<A> >::__uniq_ptr_impl() [422]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::unique_ptr<B, std::default_delete<B> >::unique_ptr<std::default_delete<B>, void>() [387]
[392]    0.0    0.02    0.00 10000002         std::__uniq_ptr_data<B, std::default_delete<B>, true, true>::__uniq_ptr_impl() [392]
                0.00    0.00 10000002/10000002     std::__uniq_ptr_impl<B, std::default_delete<B> >::__uniq_ptr_impl() [608]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_Rb_tree_impl<std::less<int>, true>::_Rb_tree_impl() [244]
[393]    0.0    0.02    0.00 10000002         std::_Rb_tree_key_compare<std::less<int> >::_Rb_tree_key_compare() [393]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::tuple_element<1ul, std::tuple<A*, std::default_delete<A> > >::type& std::get<1ul, A*, std::default_delete<A> >(std::tuple<A*, std::default_delete<A> >&) [298]
[394]    0.0    0.02    0.00 10000002         std::default_delete<A>& std::__get_helper<1ul, std::default_delete<A>>(std::_Tuple_impl<1ul, std::default_delete<A>>&) [394]
                0.00    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<A> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<A> >&) [600]
-----------------------------------------------
                0.00    0.02 10000002/10000002     std::tuple_element<1ul, std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> > >::type& std::get<1ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >(std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> >&) [312]
[395]    0.0    0.00    0.02 10000002         std::default_delete<CEntity::Impl>& std::__get_helper<1ul, std::default_delete<CEntity::Impl>>(std::_Tuple_impl<1ul, std::default_delete<CEntity::Impl>>&) [395]
                0.02    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<CEntity::Impl> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<CEntity::Impl> >&) [390]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::unique_ptr<CIf, std::default_delete<CIf> >::~unique_ptr() [60]
[396]    0.0    0.02    0.00 10000002         std::remove_reference<CIf*&>::type&& std::move<CIf*&>(CIf*&) [396]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::reset(TargetEntity<SampleStruct, CIf>::Impl*) [116]
[397]    0.0    0.02    0.00 10000002         std::remove_reference<TargetEntity<SampleStruct, CIf>::Impl*&>::type&& std::move<TargetEntity<SampleStruct, CIf>::Impl*&>(TargetEntity<SampleStruct, CIf>::Impl*&) [397]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_Tuple_impl(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&&) [156]
[398]    0.0    0.02    0.00 10000002         std::remove_reference<std::_Tuple_impl<1ul, std::default_delete<AIf> >&>::type&& std::move<std::_Tuple_impl<1ul, std::default_delete<AIf> >&>(std::_Tuple_impl<1ul, std::default_delete<AIf> >&) [398]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_Tuple_impl(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&&) [222]
[399]    0.0    0.02    0.00 10000002         std::remove_reference<std::_Tuple_impl<1ul, std::default_delete<BIf> >&>::type&& std::move<std::_Tuple_impl<1ul, std::default_delete<BIf> >&>(std::_Tuple_impl<1ul, std::default_delete<BIf> >&) [399]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >&&) [110]
[400]    0.0    0.02    0.00 10000002         std::remove_reference<std::tuple<AIf*, std::default_delete<AIf> >&>::type&& std::move<std::tuple<AIf*, std::default_delete<AIf> >&>(std::tuple<AIf*, std::default_delete<AIf> >&) [400]
-----------------------------------------------
                0.02    0.00 10000002/10000002     std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >&&) [160]
[401]    0.0    0.02    0.00 10000002         std::remove_reference<std::tuple<BIf*, std::default_delete<BIf> >&>::type&& std::move<std::tuple<BIf*, std::default_delete<BIf> >&>(std::tuple<BIf*, std::default_delete<BIf> >&) [401]
-----------------------------------------------
                0.02    0.00 10000003/10000003     std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl() [313]
[402]    0.0    0.02    0.00 10000003         std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl() [402]
                0.00    0.00 10000003/10000003     std::_Head_base<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >, true>::_Head_base() [573]
-----------------------------------------------
                0.00    0.01 10000002/10000002     std::unique_ptr<CIf, std::default_delete<CIf> >::get_deleter() [333]
[403]    0.0    0.00    0.01 10000002         std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::_M_deleter() [403]
                0.00    0.01 10000002/10000002     std::tuple_element<1ul, std::tuple<CIf*, std::default_delete<CIf> > >::type& std::get<1ul, CIf*, std::default_delete<CIf> >(std::tuple<CIf*, std::default_delete<CIf> >&) [405]
-----------------------------------------------
                0.00    0.01 10000002/10000002     std::tuple_element<1ul, std::tuple<CIf*, std::default_delete<CIf> > >::type& std::get<1ul, CIf*, std::default_delete<CIf> >(std::tuple<CIf*, std::default_delete<CIf> >&) [405]
[404]    0.0    0.00    0.01 10000002         std::default_delete<CIf>& std::__get_helper<1ul, std::default_delete<CIf>>(std::_Tuple_impl<1ul, std::default_delete<CIf>>&) [404]
                0.00    0.01 10000002/20000004     std::_Tuple_impl<1ul, std::default_delete<CIf> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<CIf> >&) [337]
-----------------------------------------------
                0.00    0.01 10000002/10000002     std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::_M_deleter() [403]
[405]    0.0    0.00    0.01 10000002         std::tuple_element<1ul, std::tuple<CIf*, std::default_delete<CIf> > >::type& std::get<1ul, CIf*, std::default_delete<CIf> >(std::tuple<CIf*, std::default_delete<CIf> >&) [405]
                0.00    0.01 10000002/10000002     std::default_delete<CIf>& std::__get_helper<1ul, std::default_delete<CIf>>(std::_Tuple_impl<1ul, std::default_delete<CIf>>&) [404]
-----------------------------------------------
                0.00    0.00       1/10000002     std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::begin() [442]
                0.00    0.01 10000001/10000002     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_unique_pos(int const&) [154]
[406]    0.0    0.00    0.01 10000002         std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::begin() [406]
                0.01    0.00 10000002/820000084     std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_Rb_tree_iterator(std::_Rb_tree_node_base*) [67]
-----------------------------------------------
                0.01    0.00 30000006/30000006     std::_Tuple_impl<0ul, A*, std::default_delete<A> >::_M_head(std::_Tuple_impl<0ul, A*, std::default_delete<A> >&) [284]
[407]    0.0    0.01    0.00 30000006         std::_Head_base<0ul, A*, false>::_M_head(std::_Head_base<0ul, A*, false>&) [407]
-----------------------------------------------
                0.01    0.00 30000006/30000006     std::_Tuple_impl<0ul, C*, std::default_delete<C> >::_M_head(std::_Tuple_impl<0ul, C*, std::default_delete<C> >&) [257]
[408]    0.0    0.01    0.00 30000006         std::_Head_base<0ul, C*, false>::_M_head(std::_Head_base<0ul, C*, false>&) [408]
-----------------------------------------------
                0.01    0.00 20000004/20000004     std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >&) [335]
[409]    0.0    0.01    0.00 20000004         std::_Head_base<0ul, Target<SampleStruct, CIf>*, false>::_M_head(std::_Head_base<0ul, Target<SampleStruct, CIf>*, false>&) [409]
-----------------------------------------------
                0.01    0.00 20000004/20000004     std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_M_head(std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >&) [336]
[410]    0.0    0.01    0.00 20000004         std::_Head_base<0ul, TargetEntity<SampleStruct, CIf>::Impl*, false>::_M_head(std::_Head_base<0ul, TargetEntity<SampleStruct, CIf>::Impl*, false>&) [410]
-----------------------------------------------
                0.01    0.00 20000004/20000004     std::_Tuple_impl<1ul, std::default_delete<BIf> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<BIf> >&) [412]
[411]    0.0    0.01    0.00 20000004         std::_Head_base<1ul, std::default_delete<BIf>, true>::_M_head(std::_Head_base<1ul, std::default_delete<BIf>, true>&) [411]
-----------------------------------------------
                0.00    0.01 10000002/20000004     std::_Tuple_impl<1ul, std::default_delete<BIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<BIf> >&&) [315]
                0.00    0.01 10000002/20000004     std::default_delete<BIf>& std::__get_helper<1ul, std::default_delete<BIf>>(std::_Tuple_impl<1ul, std::default_delete<BIf>>&) [360]
[412]    0.0    0.00    0.01 20000004         std::_Tuple_impl<1ul, std::default_delete<BIf> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<BIf> >&) [412]
                0.01    0.00 20000004/20000004     std::_Head_base<1ul, std::default_delete<BIf>, true>::_M_head(std::_Head_base<1ul, std::default_delete<BIf>, true>&) [411]
-----------------------------------------------
                0.01    0.00 10000002/10000002     BEntity::Impl::Impl() [139]
[413]    0.0    0.01    0.00 10000002         B::B() [413]
-----------------------------------------------
                0.01    0.00 10000002/10000002     AEntity::AEntity(int) [66]
[414]    0.0    0.01    0.00 10000002         AIf::AIf() [414]
-----------------------------------------------
                0.00    0.01 10000002/10000002     std::unique_ptr<AIf, std::default_delete<AIf> >::get() const [340]
[415]    0.0    0.00    0.01 10000002         std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::_M_ptr() const [415]
                0.00    0.01 10000002/10000002     std::tuple_element<0ul, std::tuple<AIf*, std::default_delete<AIf> > >::type const& std::get<0ul, AIf*, std::default_delete<AIf> >(std::tuple<AIf*, std::default_delete<AIf> > const&) [425]
-----------------------------------------------
                0.01    0.00 10000002/10000002     std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_M_head(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> > const&) [420]
[416]    0.0    0.01    0.00 10000002         std::_Head_base<0ul, AIf*, false>::_M_head(std::_Head_base<0ul, AIf*, false> const&) [416]
-----------------------------------------------
                0.01    0.00 10000002/10000002     std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_Tuple_impl() [259]
[417]    0.0    0.01    0.00 10000002         std::_Head_base<0ul, AIf*, false>::_Head_base() [417]
-----------------------------------------------
                0.01    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<C> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<C> >&) [306]
[418]    0.0    0.01    0.00 10000002         std::_Head_base<1ul, std::default_delete<C>, true>::_M_head(std::_Head_base<1ul, std::default_delete<C>, true>&) [418]
-----------------------------------------------
                0.01    0.00 10000002/10000002     std::tuple<A*, std::default_delete<A> >::tuple<true, true>() [423]
[419]    0.0    0.01    0.00 10000002         std::_Tuple_impl<0ul, A*, std::default_delete<A> >::_Tuple_impl() [419]
                0.00    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<A> >::_Tuple_impl() [601]
                0.00    0.00 10000002/10000002     std::_Head_base<0ul, A*, false>::_Head_base() [579]
-----------------------------------------------
                0.00    0.01 10000002/10000002     AIf* const& std::__get_helper<0ul, AIf*, std::default_delete<AIf> >(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> > const&) [424]
[420]    0.0    0.00    0.01 10000002         std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_M_head(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> > const&) [420]
                0.01    0.00 10000002/10000002     std::_Head_base<0ul, AIf*, false>::_M_head(std::_Head_base<0ul, AIf*, false> const&) [416]
-----------------------------------------------
                0.01    0.00 10000002/10000002     std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_Tuple_impl(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&&) [156]
[421]    0.0    0.01    0.00 10000002         std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_M_tail(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&) [421]
-----------------------------------------------
                0.00    0.01 10000002/10000002     std::__uniq_ptr_data<A, std::default_delete<A>, true, true>::__uniq_ptr_impl() [391]
[422]    0.0    0.00    0.01 10000002         std::__uniq_ptr_impl<A, std::default_delete<A> >::__uniq_ptr_impl() [422]
                0.00    0.01 10000002/10000002     std::tuple<A*, std::default_delete<A> >::tuple<true, true>() [423]
-----------------------------------------------
                0.00    0.01 10000002/10000002     std::__uniq_ptr_impl<A, std::default_delete<A> >::__uniq_ptr_impl() [422]
[423]    0.0    0.00    0.01 10000002         std::tuple<A*, std::default_delete<A> >::tuple<true, true>() [423]
                0.01    0.00 10000002/10000002     std::_Tuple_impl<0ul, A*, std::default_delete<A> >::_Tuple_impl() [419]
-----------------------------------------------
                0.00    0.01 10000002/10000002     std::tuple_element<0ul, std::tuple<AIf*, std::default_delete<AIf> > >::type const& std::get<0ul, AIf*, std::default_delete<AIf> >(std::tuple<AIf*, std::default_delete<AIf> > const&) [425]
[424]    0.0    0.00    0.01 10000002         AIf* const& std::__get_helper<0ul, AIf*, std::default_delete<AIf> >(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> > const&) [424]
                0.00    0.01 10000002/10000002     std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_M_head(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> > const&) [420]
-----------------------------------------------
                0.00    0.01 10000002/10000002     std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::_M_ptr() const [415]
[425]    0.0    0.00    0.01 10000002         std::tuple_element<0ul, std::tuple<AIf*, std::default_delete<AIf> > >::type const& std::get<0ul, AIf*, std::default_delete<AIf> >(std::tuple<AIf*, std::default_delete<AIf> > const&) [425]
                0.00    0.01 10000002/10000002     AIf* const& std::__get_helper<0ul, AIf*, std::default_delete<AIf> >(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> > const&) [424]
-----------------------------------------------
                0.01    0.00 10000002/10000002     std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::__uniq_ptr_impl(std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [112]
[426]    0.0    0.01    0.00 10000002         std::remove_reference<std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&>::type&& std::move<std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&>(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [426]
-----------------------------------------------
                0.01    0.00 10000003/10000003     std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl() [313]
[427]    0.0    0.01    0.00 10000003         std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>::_Head_base() [427]
-----------------------------------------------
                0.00    0.00       1/1           void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [3]
[428]    0.0    0.00    0.00       1         SampleTest_RealSample2_Test::TestBody() [428]
                0.00    0.00       1/10000001     TargetIf<SampleStruct, CIf>::instantiate(AIf const&, BIf const&, CIf const&) [5]
                0.00    0.00       1/10000002     AIf::instantiate(int) [38]
                0.00    0.00       1/1           TargetIf<SampleStruct, CIf>::clone(TargetIf<SampleStruct, CIf> const&) [430]
                0.00    0.00       1/10000002     CIf::instantiate(int) [45]
                0.00    0.00       1/10000002     BIf::instantiate() [46]
                0.00    0.00       1/20000004     std::unique_ptr<AIf, std::default_delete<AIf> >::~unique_ptr() [58]
                0.00    0.00       1/20000004     std::unique_ptr<CIf, std::default_delete<CIf> >::~unique_ptr() [60]
                0.00    0.00       1/20000004     std::unique_ptr<BIf, std::default_delete<BIf> >::~unique_ptr() [64]
                0.00    0.00       2/20000005     std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::~unique_ptr() [106]
                0.00    0.00       1/10000002     std::unique_ptr<CIf, std::default_delete<CIf> >::operator*() const [188]
                0.00    0.00       1/10000002     std::unique_ptr<BIf, std::default_delete<BIf> >::operator*() const [323]
                0.00    0.00       1/10000002     std::unique_ptr<AIf, std::default_delete<AIf> >::operator*() const [341]
                0.00    0.00       3/4           std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::operator*() const [661]
                0.00    0.00       2/3           testing::AssertionResult::operator bool() const [685]
                0.00    0.00       2/3           testing::AssertionResult::~AssertionResult() [678]
                0.00    0.00       1/2           int sampleUser1<SampleStruct, CIf>(TargetIf<SampleStruct, CIf> const&) [692]
                0.00    0.00       1/2           testing::AssertionResult testing::internal::EqHelper::Compare<int, int, (void*)0>(char const*, char const*, int const&, int const&) [694]
                0.00    0.00       1/1           std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::operator->() const [730]
                0.00    0.00       1/1           TargetEntity<SampleStruct, CIf>::compare(TargetIf<SampleStruct, CIf> const&) const [727]
                0.00    0.00       1/1           testing::AssertionResult testing::internal::EqHelper::Compare<TargetIf<SampleStruct, CIf>::COMPARE, TargetIf<SampleStruct, CIf>::COMPARE, (void*)0>(char const*, char const*, TargetIf<SampleStruct, CIf>::COMPARE const&, TargetIf<SampleStruct, CIf>::COMPARE const&) [723]
-----------------------------------------------
                0.00    0.00       1/1           void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [3]
[429]    0.0    0.00    0.00       1         SampleTest_PseudoSample1_Test::TestBody() [429]
                0.00    0.00       1/10000002     AIf::instantiate(int) [38]
                0.00    0.00       1/10000002     CIf::instantiate(int) [45]
                0.00    0.00       1/10000002     BIf::instantiate() [46]
                0.00    0.00       1/20000004     std::unique_ptr<AIf, std::default_delete<AIf> >::~unique_ptr() [58]
                0.00    0.00       1/20000004     std::unique_ptr<CIf, std::default_delete<CIf> >::~unique_ptr() [60]
                0.00    0.00       1/20000004     std::unique_ptr<BIf, std::default_delete<BIf> >::~unique_ptr() [64]
                0.00    0.00       1/10000003     std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::unique_ptr<std::default_delete<TargetIf<SampleStruct, CIf> >, void>(TargetIf<SampleStruct, CIf>*) [133]
                0.00    0.00       1/20000005     std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::~unique_ptr() [106]
                0.00    0.00       1/10000002     std::unique_ptr<CIf, std::default_delete<CIf> >::operator*() const [188]
                0.00    0.00       1/10000002     std::unique_ptr<BIf, std::default_delete<BIf> >::operator*() const [323]
                0.00    0.00       1/10000002     std::unique_ptr<AIf, std::default_delete<AIf> >::operator*() const [341]
                0.00    0.00       1/1           PseudoTargetEntity<SampleStruct, CIf>::PseudoTargetEntity(AIf const&, BIf const&, CIf const&) [700]
                0.00    0.00       1/4           std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::operator*() const [661]
                0.00    0.00       1/2           int sampleUser1<SampleStruct, CIf>(TargetIf<SampleStruct, CIf> const&) [692]
                0.00    0.00       1/2           testing::AssertionResult testing::internal::EqHelper::Compare<int, int, (void*)0>(char const*, char const*, int const&, int const&) [694]
                0.00    0.00       1/3           testing::AssertionResult::operator bool() const [685]
                0.00    0.00       1/3           testing::AssertionResult::~AssertionResult() [678]
-----------------------------------------------
                0.00    0.00       1/1           SampleTest_RealSample2_Test::TestBody() [428]
[430]    0.0    0.00    0.00       1         TargetIf<SampleStruct, CIf>::clone(TargetIf<SampleStruct, CIf> const&) [430]
                0.00    0.00       1/1           TargetEntity<SampleStruct, CIf>::TargetEntity(TargetIf<SampleStruct, CIf> const&) [431]
                0.00    0.00       1/10000002     std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::unique_ptr(std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [103]
                0.00    0.00       1/10000003     std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::unique_ptr<std::default_delete<TargetIf<SampleStruct, CIf> >, void>(TargetIf<SampleStruct, CIf>*) [133]
                0.00    0.00       1/20000005     std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::~unique_ptr() [106]
                0.00    0.00       1/10000002     std::remove_reference<std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&>::type&& std::move<std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&>(std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [328]
-----------------------------------------------
                0.00    0.00       1/1           TargetIf<SampleStruct, CIf>::clone(TargetIf<SampleStruct, CIf> const&) [430]
[431]    0.0    0.00    0.00       1         TargetEntity<SampleStruct, CIf>::TargetEntity(TargetIf<SampleStruct, CIf> const&) [431]
                0.00    0.00       1/1           TargetEntity<SampleStruct, CIf>::Impl::Impl(TargetIf<SampleStruct, CIf> const&) [432]
                0.00    0.00       1/10000002     std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::reset(TargetEntity<SampleStruct, CIf>::Impl*) [116]
                0.00    0.00       1/10000002     std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::unique_ptr<std::default_delete<TargetEntity<SampleStruct, CIf>::Impl>, void>() [189]
                0.00    0.00       1/10000003     TargetIf<SampleStruct, CIf>::TargetIf() [571]
-----------------------------------------------
                0.00    0.00       1/1           TargetEntity<SampleStruct, CIf>::TargetEntity(TargetIf<SampleStruct, CIf> const&) [431]
[432]    0.0    0.00    0.00       1         TargetEntity<SampleStruct, CIf>::Impl::Impl(TargetIf<SampleStruct, CIf> const&) [432]
                0.00    0.00       1/10000002     std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::reset(Target<SampleStruct, CIf>*) [132]
                0.00    0.00       1/1           Target<SampleStruct, CIf>::Target(Target<SampleStruct, CIf> const&) [433]
                0.00    0.00       1/10000002     std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::unique_ptr<std::default_delete<Target<SampleStruct, CIf> >, void>() [184]
                0.00    0.00       1/2           TargetEntity<SampleStruct, CIf>::getEntity() const [696]
-----------------------------------------------
                0.00    0.00       1/1           TargetEntity<SampleStruct, CIf>::Impl::Impl(TargetIf<SampleStruct, CIf> const&) [432]
[433]    0.0    0.00    0.00       1         Target<SampleStruct, CIf>::Target(Target<SampleStruct, CIf> const&) [433]
                0.00    0.00       1/10000002     std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::map() [213]
                0.00    0.00       1/200000021     std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::end() [70]
                0.00    0.00       1/1           std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::begin() [442]
                0.00    0.00       1/1           std::operator!=(std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&, std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&) [731]
-----------------------------------------------
                                                 <spontaneous>
[434]    0.0    0.00    0.00                 void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [434]
                0.00    0.00       4/400000051     operator new(unsigned long, void*) [102]
-----------------------------------------------
                                                 <spontaneous>
[435]    0.0    0.00    0.00                 void __gnu_cxx::new_allocator<testing::TestInfo*>::construct<testing::TestInfo*, testing::TestInfo* const&>(testing::TestInfo**, testing::TestInfo* const&) [435]
                0.00    0.00       3/400000051     operator new(unsigned long, void*) [102]
-----------------------------------------------
                                                 <spontaneous>
[436]    0.0    0.00    0.00                 std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_Rb_tree_impl<std::less<std::string>, true>::_Rb_tree_impl() [436]
                0.00    0.00       1/10000004     std::_Rb_tree_header::_Rb_tree_header() [338]
-----------------------------------------------
                                                 <spontaneous>
[437]    0.0    0.00    0.00                 std::_Rb_tree<std::string, std::pair<std::string const, testing::internal::TypeParameterizedTestSuiteRegistry::TypeParameterizedTestSuiteInfo>, std::_Select1st<std::pair<std::string const, testing::internal::TypeParameterizedTestSuiteRegistry::TypeParameterizedTestSuiteInfo> >, std::less<std::string>, std::allocator<std::pair<std::string const, testing::internal::TypeParameterizedTestSuiteRegistry::TypeParameterizedTestSuiteInfo> > >::_Rb_tree_impl<std::less<std::string>, true>::_Rb_tree_impl() [437]
                0.00    0.00       1/10000004     std::_Rb_tree_header::_Rb_tree_header() [338]
-----------------------------------------------
                                                 <spontaneous>
[438]    0.0    0.00    0.00                 void __gnu_cxx::new_allocator<testing::TestEventListener*>::construct<testing::TestEventListener*, testing::TestEventListener* const&>(testing::TestEventListener**, testing::TestEventListener* const&) [438]
                0.00    0.00       1/400000051     operator new(unsigned long, void*) [102]
-----------------------------------------------
                                                 <spontaneous>
[439]    0.0    0.00    0.00                 void __gnu_cxx::new_allocator<testing::TestSuite*>::construct<testing::TestSuite*, testing::TestSuite* const&>(testing::TestSuite**, testing::TestSuite* const&) [439]
                0.00    0.00       1/400000051     operator new(unsigned long, void*) [102]
-----------------------------------------------
                                                 <spontaneous>
[440]    0.0    0.00    0.00                 void __gnu_cxx::new_allocator<std::string>::construct<std::string, std::string>(std::string*, std::string&&) [440]
                0.00    0.00       1/400000051     operator new(unsigned long, void*) [102]
-----------------------------------------------
                                                 <spontaneous>
[441]    0.0    0.00    0.00                 void std::_Construct<std::string, std::string const&>(std::string*, std::string const&) [441]
                0.00    0.00       1/400000051     operator new(unsigned long, void*) [102]
-----------------------------------------------
                0.00    0.00       1/1           Target<SampleStruct, CIf>::Target(Target<SampleStruct, CIf> const&) [433]
[442]    0.0    0.00    0.00       1         std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::begin() [442]
                0.00    0.00       1/10000002     std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::begin() [406]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN10SampleTestD2Ev [732]
[443]    0.0    0.00    0.00       1         main [443]
                0.00    0.00       1/1           RUN_ALL_TESTS() [699]
-----------------------------------------------
                0.00    0.00 30000006/30000006     std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >::_M_head(std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >&) [301]
[565]    0.0    0.00    0.00 30000006         std::_Head_base<0ul, BEntity::Impl*, false>::_M_head(std::_Head_base<0ul, BEntity::Impl*, false>&) [565]
-----------------------------------------------
                0.00    0.00 10000002/20000004     std::_Head_base<0ul, BIf*, false>::_Head_base<BIf*>(BIf*&&) [379]
                0.00    0.00 10000002/20000004     std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_Tuple_impl(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&&) [222]
[566]    0.0    0.00    0.00 20000004         BIf*&& std::forward<BIf*>(std::remove_reference<BIf*>::type&) [566]
-----------------------------------------------
                0.00    0.00 10000002/20000004     std::_Head_base<0ul, CIf*, false>::_Head_base<CIf*>(CIf*&&) [344]
                0.00    0.00 10000002/20000004     std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_Tuple_impl(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&&) [185]
[567]    0.0    0.00    0.00 20000004         CIf*&& std::forward<CIf*>(std::remove_reference<CIf*>::type&) [567]
-----------------------------------------------
                0.00    0.00 10000002/20000004     std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>::_Head_base<TargetIf<SampleStruct, CIf>*>(TargetIf<SampleStruct, CIf>*&&) [380]
                0.00    0.00 10000002/20000004     std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [151]
[568]    0.0    0.00    0.00 20000004         TargetIf<SampleStruct, CIf>*&& std::forward<TargetIf<SampleStruct, CIf>*>(std::remove_reference<TargetIf<SampleStruct, CIf>*>::type&) [568]
-----------------------------------------------
                0.00    0.00 10000002/20000004     std::_Head_base<1ul, std::default_delete<AIf>, true>::_Head_base<std::default_delete<AIf> >(std::default_delete<AIf>&&) [383]
                0.00    0.00 10000002/20000004     std::_Tuple_impl<1ul, std::default_delete<AIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<AIf> >&&) [278]
[569]    0.0    0.00    0.00 20000004         std::default_delete<AIf>&& std::forward<std::default_delete<AIf> >(std::remove_reference<std::default_delete<AIf> >::type&) [569]
-----------------------------------------------
                0.00    0.00 10000002/20000004     std::_Head_base<1ul, std::default_delete<CIf>, true>::_Head_base<std::default_delete<CIf> >(std::default_delete<CIf>&&) [290]
                0.00    0.00 10000002/20000004     std::_Tuple_impl<1ul, std::default_delete<CIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<CIf> >&&) [246]
[570]    0.0    0.00    0.00 20000004         std::default_delete<CIf>&& std::forward<std::default_delete<CIf> >(std::remove_reference<std::default_delete<CIf> >::type&) [570]
-----------------------------------------------
                0.00    0.00       1/10000003     TargetEntity<SampleStruct, CIf>::TargetEntity(TargetIf<SampleStruct, CIf> const&) [431]
                0.00    0.00       1/10000003     PseudoTargetEntity<SampleStruct, CIf>::PseudoTargetEntity(AIf const&, BIf const&, CIf const&) [700]
                0.00    0.00 10000001/10000003     TargetEntity<SampleStruct, CIf>::TargetEntity(AIf const&, BIf const&, CIf const&) [6]
[571]    0.0    0.00    0.00 10000003         TargetIf<SampleStruct, CIf>::TargetIf() [571]
-----------------------------------------------
                0.00    0.00 10000003/10000003     std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::~unique_ptr() [106]
[572]    0.0    0.00    0.00 10000003         std::default_delete<TargetIf<SampleStruct, CIf> >::operator()(TargetIf<SampleStruct, CIf>*) const [572]
-----------------------------------------------
                0.00    0.00 10000003/10000003     std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl() [402]
[573]    0.0    0.00    0.00 10000003         std::_Head_base<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >, true>::_Head_base() [573]
-----------------------------------------------
                0.00    0.00 10000002/10000002     CEntity::Impl::Impl(int) [138]
[574]    0.0    0.00    0.00 10000002         C::C(int) [574]
-----------------------------------------------
                0.00    0.00 10000002/10000002     CEntity::CEntity(int) [75]
[575]    0.0    0.00    0.00 10000002         CIf::CIf() [575]
-----------------------------------------------
                0.00    0.00 10000002/10000002     CEntity::~CEntity() [80]
[576]    0.0    0.00    0.00 10000002         CIf::~CIf() [576]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::allocator() [378]
[577]    0.0    0.00    0.00 10000002         __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::new_allocator() [577]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::unique_ptr<B, std::default_delete<B> >::~unique_ptr() [153]
[578]    0.0    0.00    0.00 10000002         std::default_delete<B>::operator()(B*) const [578]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<0ul, A*, std::default_delete<A> >::_Tuple_impl() [419]
[579]    0.0    0.00    0.00 10000002         std::_Head_base<0ul, A*, false>::_Head_base() [579]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<0ul, B*, std::default_delete<B> >::_Tuple_impl() [595]
[580]    0.0    0.00    0.00 10000002         std::_Head_base<0ul, B*, false>::_Head_base() [580]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_M_head(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> > const&) [596]
[581]    0.0    0.00    0.00 10000002         std::_Head_base<0ul, BIf*, false>::_M_head(std::_Head_base<0ul, BIf*, false> const&) [581]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_Tuple_impl() [388]
[582]    0.0    0.00    0.00 10000002         std::_Head_base<0ul, CIf*, false>::_Head_base() [582]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<A> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<A> >&) [600]
[583]    0.0    0.00    0.00 10000002         std::_Head_base<1ul, std::default_delete<A>, true>::_M_head(std::_Head_base<1ul, std::default_delete<A>, true>&) [583]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<A> >::_Tuple_impl() [601]
[584]    0.0    0.00    0.00 10000002         std::_Head_base<1ul, std::default_delete<A>, true>::_Head_base() [584]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<B> >::_Tuple_impl() [602]
[585]    0.0    0.00    0.00 10000002         std::_Head_base<1ul, std::default_delete<B>, true>::_Head_base() [585]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<C> >::_Tuple_impl() [603]
[586]    0.0    0.00    0.00 10000002         std::_Head_base<1ul, std::default_delete<C>, true>::_Head_base() [586]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<AIf> >::_Tuple_impl() [294]
[587]    0.0    0.00    0.00 10000002         std::_Head_base<1ul, std::default_delete<AIf>, true>::_Head_base() [587]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<BIf> >::_Tuple_impl() [389]
[588]    0.0    0.00    0.00 10000002         std::_Head_base<1ul, std::default_delete<BIf>, true>::_Head_base() [588]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<CIf> >::_Tuple_impl() [604]
[589]    0.0    0.00    0.00 10000002         std::_Head_base<1ul, std::default_delete<CIf>, true>::_Head_base() [589]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<Target<SampleStruct, CIf> > >::_Tuple_impl() [605]
[590]    0.0    0.00    0.00 10000002         std::_Head_base<1ul, std::default_delete<Target<SampleStruct, CIf> >, true>::_Head_base() [590]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<AEntity::Impl> >::_Tuple_impl() [606]
[591]    0.0    0.00    0.00 10000002         std::_Head_base<1ul, std::default_delete<AEntity::Impl>, true>::_Head_base() [591]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<BEntity::Impl> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<BEntity::Impl> >&) [607]
[592]    0.0    0.00    0.00 10000002         std::_Head_base<1ul, std::default_delete<BEntity::Impl>, true>::_M_head(std::_Head_base<1ul, std::default_delete<BEntity::Impl>, true>&) [592]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<BEntity::Impl> >::_Tuple_impl() [352]
[593]    0.0    0.00    0.00 10000002         std::_Head_base<1ul, std::default_delete<BEntity::Impl>, true>::_Head_base() [593]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<CEntity::Impl> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<CEntity::Impl> >&) [390]
[594]    0.0    0.00    0.00 10000002         std::_Head_base<1ul, std::default_delete<CEntity::Impl>, true>::_M_head(std::_Head_base<1ul, std::default_delete<CEntity::Impl>, true>&) [594]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::tuple<B*, std::default_delete<B> >::tuple<true, true>() [609]
[595]    0.0    0.00    0.00 10000002         std::_Tuple_impl<0ul, B*, std::default_delete<B> >::_Tuple_impl() [595]
                0.00    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<B> >::_Tuple_impl() [602]
                0.00    0.00 10000002/10000002     std::_Head_base<0ul, B*, false>::_Head_base() [580]
-----------------------------------------------
                0.00    0.00 10000002/10000002     BIf* const& std::__get_helper<0ul, BIf*, std::default_delete<BIf> >(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> > const&) [610]
[596]    0.0    0.00    0.00 10000002         std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_M_head(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> > const&) [596]
                0.00    0.00 10000002/10000002     std::_Head_base<0ul, BIf*, false>::_M_head(std::_Head_base<0ul, BIf*, false> const&) [581]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_Tuple_impl(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&&) [222]
[597]    0.0    0.00    0.00 10000002         std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_M_tail(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&) [597]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_Tuple_impl(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&&) [185]
[598]    0.0    0.00    0.00 10000002         std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_M_tail(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&) [598]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [151]
[599]    0.0    0.00    0.00 10000002         std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_tail(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [599]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::default_delete<A>& std::__get_helper<1ul, std::default_delete<A>>(std::_Tuple_impl<1ul, std::default_delete<A>>&) [394]
[600]    0.0    0.00    0.00 10000002         std::_Tuple_impl<1ul, std::default_delete<A> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<A> >&) [600]
                0.00    0.00 10000002/10000002     std::_Head_base<1ul, std::default_delete<A>, true>::_M_head(std::_Head_base<1ul, std::default_delete<A>, true>&) [583]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<0ul, A*, std::default_delete<A> >::_Tuple_impl() [419]
[601]    0.0    0.00    0.00 10000002         std::_Tuple_impl<1ul, std::default_delete<A> >::_Tuple_impl() [601]
                0.00    0.00 10000002/10000002     std::_Head_base<1ul, std::default_delete<A>, true>::_Head_base() [584]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<0ul, B*, std::default_delete<B> >::_Tuple_impl() [595]
[602]    0.0    0.00    0.00 10000002         std::_Tuple_impl<1ul, std::default_delete<B> >::_Tuple_impl() [602]
                0.00    0.00 10000002/10000002     std::_Head_base<1ul, std::default_delete<B>, true>::_Head_base() [585]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<0ul, C*, std::default_delete<C> >::_Tuple_impl() [325]
[603]    0.0    0.00    0.00 10000002         std::_Tuple_impl<1ul, std::default_delete<C> >::_Tuple_impl() [603]
                0.00    0.00 10000002/10000002     std::_Head_base<1ul, std::default_delete<C>, true>::_Head_base() [586]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_Tuple_impl() [388]
[604]    0.0    0.00    0.00 10000002         std::_Tuple_impl<1ul, std::default_delete<CIf> >::_Tuple_impl() [604]
                0.00    0.00 10000002/10000002     std::_Head_base<1ul, std::default_delete<CIf>, true>::_Head_base() [589]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::_Tuple_impl() [350]
[605]    0.0    0.00    0.00 10000002         std::_Tuple_impl<1ul, std::default_delete<Target<SampleStruct, CIf> > >::_Tuple_impl() [605]
                0.00    0.00 10000002/10000002     std::_Head_base<1ul, std::default_delete<Target<SampleStruct, CIf> >, true>::_Head_base() [590]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >::_Tuple_impl() [351]
[606]    0.0    0.00    0.00 10000002         std::_Tuple_impl<1ul, std::default_delete<AEntity::Impl> >::_Tuple_impl() [606]
                0.00    0.00 10000002/10000002     std::_Head_base<1ul, std::default_delete<AEntity::Impl>, true>::_Head_base() [591]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::default_delete<BEntity::Impl>& std::__get_helper<1ul, std::default_delete<BEntity::Impl>>(std::_Tuple_impl<1ul, std::default_delete<BEntity::Impl>>&) [611]
[607]    0.0    0.00    0.00 10000002         std::_Tuple_impl<1ul, std::default_delete<BEntity::Impl> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<BEntity::Impl> >&) [607]
                0.00    0.00 10000002/10000002     std::_Head_base<1ul, std::default_delete<BEntity::Impl>, true>::_M_head(std::_Head_base<1ul, std::default_delete<BEntity::Impl>, true>&) [592]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::__uniq_ptr_data<B, std::default_delete<B>, true, true>::__uniq_ptr_impl() [392]
[608]    0.0    0.00    0.00 10000002         std::__uniq_ptr_impl<B, std::default_delete<B> >::__uniq_ptr_impl() [608]
                0.00    0.00 10000002/10000002     std::tuple<B*, std::default_delete<B> >::tuple<true, true>() [609]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::__uniq_ptr_impl<B, std::default_delete<B> >::__uniq_ptr_impl() [608]
[609]    0.0    0.00    0.00 10000002         std::tuple<B*, std::default_delete<B> >::tuple<true, true>() [609]
                0.00    0.00 10000002/10000002     std::_Tuple_impl<0ul, B*, std::default_delete<B> >::_Tuple_impl() [595]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::tuple_element<0ul, std::tuple<BIf*, std::default_delete<BIf> > >::type const& std::get<0ul, BIf*, std::default_delete<BIf> >(std::tuple<BIf*, std::default_delete<BIf> > const&) [612]
[610]    0.0    0.00    0.00 10000002         BIf* const& std::__get_helper<0ul, BIf*, std::default_delete<BIf> >(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> > const&) [610]
                0.00    0.00 10000002/10000002     std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_M_head(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> > const&) [596]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::tuple_element<1ul, std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> > >::type& std::get<1ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >(std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> >&) [299]
[611]    0.0    0.00    0.00 10000002         std::default_delete<BEntity::Impl>& std::__get_helper<1ul, std::default_delete<BEntity::Impl>>(std::_Tuple_impl<1ul, std::default_delete<BEntity::Impl>>&) [611]
                0.00    0.00 10000002/10000002     std::_Tuple_impl<1ul, std::default_delete<BEntity::Impl> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<BEntity::Impl> >&) [607]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::_M_ptr() const [377]
[612]    0.0    0.00    0.00 10000002         std::tuple_element<0ul, std::tuple<BIf*, std::default_delete<BIf> > >::type const& std::get<0ul, BIf*, std::default_delete<BIf> >(std::tuple<BIf*, std::default_delete<BIf> > const&) [612]
                0.00    0.00 10000002/10000002     BIf* const& std::__get_helper<0ul, BIf*, std::default_delete<BIf> >(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> > const&) [610]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::unique_ptr<AIf, std::default_delete<AIf> >::~unique_ptr() [58]
[613]    0.0    0.00    0.00 10000002         std::remove_reference<AIf*&>::type&& std::move<AIf*&>(AIf*&) [613]
-----------------------------------------------
                0.00    0.00 10000002/10000002     BIf::instantiate() [46]
[614]    0.0    0.00    0.00 10000002         std::remove_reference<std::unique_ptr<BIf, std::default_delete<BIf> >&>::type&& std::move<std::unique_ptr<BIf, std::default_delete<BIf> >&>(std::unique_ptr<BIf, std::default_delete<BIf> >&) [614]
-----------------------------------------------
                0.00    0.00 10000002/10000002     CIf::instantiate(int) [45]
[615]    0.0    0.00    0.00 10000002         std::remove_reference<std::unique_ptr<CIf, std::default_delete<CIf> >&>::type&& std::move<std::unique_ptr<CIf, std::default_delete<CIf> >&>(std::unique_ptr<CIf, std::default_delete<CIf> >&) [615]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_Tuple_impl(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&&) [185]
[616]    0.0    0.00    0.00 10000002         std::remove_reference<std::_Tuple_impl<1ul, std::default_delete<CIf> >&>::type&& std::move<std::_Tuple_impl<1ul, std::default_delete<CIf> >&>(std::_Tuple_impl<1ul, std::default_delete<CIf> >&) [616]
-----------------------------------------------
                0.00    0.00 10000002/10000002     std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >&&) [128]
[617]    0.0    0.00    0.00 10000002         std::remove_reference<std::tuple<CIf*, std::default_delete<CIf> >&>::type&& std::move<std::tuple<CIf*, std::default_delete<CIf> >&>(std::tuple<CIf*, std::default_delete<CIf> >&) [617]
-----------------------------------------------
                0.00    0.00 10000001/10000001     std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*>::pair<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*&, std::_Rb_tree_node_base*&, true>(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*&, std::_Rb_tree_node_base*&) [332]
[618]    0.0    0.00    0.00 10000001         std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*& std::forward<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*&>(std::remove_reference<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*&>::type&) [618]
-----------------------------------------------
                0.00    0.00     106/106         std::_Tuple_impl<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::_M_head(std::_Tuple_impl<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&) [620]
[619]    0.0    0.00    0.00     106         std::_Head_base<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, false>::_M_head(std::_Head_base<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, false>&) [619]
-----------------------------------------------
                0.00    0.00     106/106         std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*& std::__get_helper<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >(std::_Tuple_impl<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&) [622]
[620]    0.0    0.00    0.00     106         std::_Tuple_impl<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::_M_head(std::_Tuple_impl<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&) [620]
                0.00    0.00     106/106         std::_Head_base<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, false>::_M_head(std::_Head_base<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, false>&) [619]
-----------------------------------------------
                0.00    0.00      53/106         std::unique_ptr<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::~unique_ptr() [628]
                0.00    0.00      53/106         std::__uniq_ptr_impl<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::__uniq_ptr_impl(std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*) [2939]
[621]    0.0    0.00    0.00     106         std::__uniq_ptr_impl<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::_M_ptr() [621]
                0.00    0.00     106/106         std::tuple_element<0ul, std::tuple<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > > >::type& std::get<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >(std::tuple<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&) [623]
-----------------------------------------------
                0.00    0.00     106/106         std::tuple_element<0ul, std::tuple<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > > >::type& std::get<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >(std::tuple<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&) [623]
[622]    0.0    0.00    0.00     106         std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*& std::__get_helper<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >(std::_Tuple_impl<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&) [622]
                0.00    0.00     106/106         std::_Tuple_impl<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::_M_head(std::_Tuple_impl<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&) [620]
-----------------------------------------------
                0.00    0.00     106/106         std::__uniq_ptr_impl<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::_M_ptr() [621]
[623]    0.0    0.00    0.00     106         std::tuple_element<0ul, std::tuple<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > > >::type& std::get<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >(std::tuple<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&) [623]
                0.00    0.00     106/106         std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*& std::__get_helper<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >(std::_Tuple_impl<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&) [622]
-----------------------------------------------
                0.00    0.00       1/53          std::string testing::internal::StreamableToString<char*>(char* const&) [1325]
                0.00    0.00       5/53          std::string testing::internal::StreamableToString<long>(long const&) [1328]
                0.00    0.00       7/53          std::string testing::internal::StreamableToString<int>(int const&) [1327]
                0.00    0.00      40/53          testing::internal::FlagToEnvVar(char const*) [1610]
[624]    0.0    0.00    0.00      53         testing::Message::~Message() [624]
                0.00    0.00      53/53          std::unique_ptr<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::~unique_ptr() [628]
-----------------------------------------------
                0.00    0.00      53/53          std::unique_ptr<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::~unique_ptr() [628]
[625]    0.0    0.00    0.00      53         std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*) const [625]
-----------------------------------------------
                0.00    0.00      53/53          std::_Tuple_impl<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::_M_head(std::_Tuple_impl<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&) [629]
[626]    0.0    0.00    0.00      53         std::_Head_base<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >, true>::_M_head(std::_Head_base<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >, true>&) [626]
-----------------------------------------------
                0.00    0.00      53/53          std::unique_ptr<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::~unique_ptr() [628]
[627]    0.0    0.00    0.00      53         std::unique_ptr<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::get_deleter() [627]
                0.00    0.00      53/53          std::__uniq_ptr_impl<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::_M_deleter() [630]
-----------------------------------------------
                0.00    0.00      53/53          testing::Message::~Message() [624]
[628]    0.0    0.00    0.00      53         std::unique_ptr<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::~unique_ptr() [628]
                0.00    0.00      53/106         std::__uniq_ptr_impl<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::_M_ptr() [621]
                0.00    0.00      53/53          std::unique_ptr<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::get_deleter() [627]
                0.00    0.00      53/53          std::remove_reference<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*&>::type&& std::move<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*&>(std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*&) [633]
                0.00    0.00      53/53          std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*) const [625]
-----------------------------------------------
                0.00    0.00      53/53          std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >& std::__get_helper<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >>(std::_Tuple_impl<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >>&) [631]
[629]    0.0    0.00    0.00      53         std::_Tuple_impl<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::_M_head(std::_Tuple_impl<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&) [629]
                0.00    0.00      53/53          std::_Head_base<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >, true>::_M_head(std::_Head_base<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >, true>&) [626]
-----------------------------------------------
                0.00    0.00      53/53          std::unique_ptr<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::get_deleter() [627]
[630]    0.0    0.00    0.00      53         std::__uniq_ptr_impl<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::_M_deleter() [630]
                0.00    0.00      53/53          std::tuple_element<1ul, std::tuple<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > > >::type& std::get<1ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >(std::tuple<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&) [632]
-----------------------------------------------
                0.00    0.00      53/53          std::tuple_element<1ul, std::tuple<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > > >::type& std::get<1ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >(std::tuple<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&) [632]
[631]    0.0    0.00    0.00      53         std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >& std::__get_helper<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >>(std::_Tuple_impl<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >>&) [631]
                0.00    0.00      53/53          std::_Tuple_impl<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::_M_head(std::_Tuple_impl<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&) [629]
-----------------------------------------------
                0.00    0.00      53/53          std::__uniq_ptr_impl<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::_M_deleter() [630]
[632]    0.0    0.00    0.00      53         std::tuple_element<1ul, std::tuple<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > > >::type& std::get<1ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >(std::tuple<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&) [632]
                0.00    0.00      53/53          std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >& std::__get_helper<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >>(std::_Tuple_impl<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >>&) [631]
-----------------------------------------------
                0.00    0.00      53/53          std::unique_ptr<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::~unique_ptr() [628]
[633]    0.0    0.00    0.00      53         std::remove_reference<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*&>::type&& std::move<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*&>(std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*&) [633]
-----------------------------------------------
                0.00    0.00       6/12          testing::internal::SuiteApiResolver<SampleTest>::GetSetUpCaseOrSuite(char const*, int) [682]
                0.00    0.00       6/12          testing::internal::SuiteApiResolver<SampleTest>::GetTearDownCaseOrSuite(char const*, int) [683]
[634]    0.0    0.00    0.00      12         testing::internal::GetNotDefaultOrNull(void (*)(), void (*)()) [634]
-----------------------------------------------
                0.00    0.00       3/9           __static_initialization_and_destruction_0(int, int) [735]
                0.00    0.00       3/9           testing::TestInfo::~TestInfo() [1003]
                0.00    0.00       3/9           testing::internal::MakeAndRegisterTestInfo(char const*, char const*, char const*, char const*, testing::internal::CodeLocation, void const*, void (*)(), void (*)(), testing::internal::TestFactoryBase*) [1359]
[635]    0.0    0.00    0.00       9         testing::internal::CodeLocation::~CodeLocation() [635]
-----------------------------------------------
                0.00    0.00       5/5           AEntity::Impl::ident() const [638]
[636]    0.0    0.00    0.00       5         A::ident() const [636]
-----------------------------------------------
                0.00    0.00       1/5           TargetEntity<SampleStruct, CIf>::Impl::ident() const [724]
                0.00    0.00       4/5           Target<SampleStruct, CIf>::compare(Target<SampleStruct, CIf> const&) const [729]
[637]    0.0    0.00    0.00       5         Target<SampleStruct, CIf>::ident() const [637]
                0.00    0.00       5/5           AEntity::ident() const [639]
-----------------------------------------------
                0.00    0.00       5/5           AEntity::ident() const [639]
[638]    0.0    0.00    0.00       5         AEntity::Impl::ident() const [638]
                0.00    0.00       5/5           std::unique_ptr<A, std::default_delete<A> >::operator->() const [641]
                0.00    0.00       5/5           A::ident() const [636]
-----------------------------------------------
                0.00    0.00       5/5           Target<SampleStruct, CIf>::ident() const [637]
[639]    0.0    0.00    0.00       5         AEntity::ident() const [639]
                0.00    0.00       5/5           std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::operator->() const [644]
                0.00    0.00       5/5           AEntity::Impl::ident() const [638]
-----------------------------------------------
                0.00    0.00       5/5           std::unique_ptr<A, std::default_delete<A> >::operator->() const [641]
[640]    0.0    0.00    0.00       5         std::unique_ptr<A, std::default_delete<A> >::get() const [640]
                0.00    0.00       5/5           std::__uniq_ptr_impl<A, std::default_delete<A> >::_M_ptr() const [645]
-----------------------------------------------
                0.00    0.00       5/5           AEntity::Impl::ident() const [638]
[641]    0.0    0.00    0.00       5         std::unique_ptr<A, std::default_delete<A> >::operator->() const [641]
                0.00    0.00       5/5           std::unique_ptr<A, std::default_delete<A> >::get() const [640]
-----------------------------------------------
                0.00    0.00       1/5           std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::operator->() const [730]
                0.00    0.00       4/5           std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::operator*() const [661]
[642]    0.0    0.00    0.00       5         std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::get() const [642]
                0.00    0.00       5/5           std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_ptr() const [646]
-----------------------------------------------
                0.00    0.00       5/5           std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::operator->() const [644]
[643]    0.0    0.00    0.00       5         std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::get() const [643]
                0.00    0.00       5/5           std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::_M_ptr() const [647]
-----------------------------------------------
                0.00    0.00       5/5           AEntity::ident() const [639]
[644]    0.0    0.00    0.00       5         std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::operator->() const [644]
                0.00    0.00       5/5           std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::get() const [643]
-----------------------------------------------
                0.00    0.00       5/5           std::unique_ptr<A, std::default_delete<A> >::get() const [640]
[645]    0.0    0.00    0.00       5         std::__uniq_ptr_impl<A, std::default_delete<A> >::_M_ptr() const [645]
                0.00    0.00       5/5           std::tuple_element<0ul, std::tuple<A*, std::default_delete<A> > >::type const& std::get<0ul, A*, std::default_delete<A> >(std::tuple<A*, std::default_delete<A> > const&) [657]
-----------------------------------------------
                0.00    0.00       5/5           std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::get() const [642]
[646]    0.0    0.00    0.00       5         std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_ptr() const [646]
                0.00    0.00       5/5           std::tuple_element<0ul, std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > >::type const& std::get<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > const&) [658]
-----------------------------------------------
                0.00    0.00       5/5           std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::get() const [643]
[647]    0.0    0.00    0.00       5         std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::_M_ptr() const [647]
                0.00    0.00       5/5           std::tuple_element<0ul, std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> > >::type const& std::get<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> > const&) [659]
-----------------------------------------------
                0.00    0.00       5/5           std::_Tuple_impl<0ul, A*, std::default_delete<A> >::_M_head(std::_Tuple_impl<0ul, A*, std::default_delete<A> > const&) [651]
[648]    0.0    0.00    0.00       5         std::_Head_base<0ul, A*, false>::_M_head(std::_Head_base<0ul, A*, false> const&) [648]
-----------------------------------------------
                0.00    0.00       5/5           std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > const&) [652]
[649]    0.0    0.00    0.00       5         std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>::_M_head(std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false> const&) [649]
-----------------------------------------------
                0.00    0.00       5/5           std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >::_M_head(std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> > const&) [653]
[650]    0.0    0.00    0.00       5         std::_Head_base<0ul, AEntity::Impl*, false>::_M_head(std::_Head_base<0ul, AEntity::Impl*, false> const&) [650]
-----------------------------------------------
                0.00    0.00       5/5           A* const& std::__get_helper<0ul, A*, std::default_delete<A> >(std::_Tuple_impl<0ul, A*, std::default_delete<A> > const&) [654]
[651]    0.0    0.00    0.00       5         std::_Tuple_impl<0ul, A*, std::default_delete<A> >::_M_head(std::_Tuple_impl<0ul, A*, std::default_delete<A> > const&) [651]
                0.00    0.00       5/5           std::_Head_base<0ul, A*, false>::_M_head(std::_Head_base<0ul, A*, false> const&) [648]
-----------------------------------------------
                0.00    0.00       5/5           TargetIf<SampleStruct, CIf>* const& std::__get_helper<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > const&) [655]
[652]    0.0    0.00    0.00       5         std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > const&) [652]
                0.00    0.00       5/5           std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>::_M_head(std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false> const&) [649]
-----------------------------------------------
                0.00    0.00       5/5           AEntity::Impl* const& std::__get_helper<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> > const&) [656]
[653]    0.0    0.00    0.00       5         std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >::_M_head(std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> > const&) [653]
                0.00    0.00       5/5           std::_Head_base<0ul, AEntity::Impl*, false>::_M_head(std::_Head_base<0ul, AEntity::Impl*, false> const&) [650]
-----------------------------------------------
                0.00    0.00       5/5           std::tuple_element<0ul, std::tuple<A*, std::default_delete<A> > >::type const& std::get<0ul, A*, std::default_delete<A> >(std::tuple<A*, std::default_delete<A> > const&) [657]
[654]    0.0    0.00    0.00       5         A* const& std::__get_helper<0ul, A*, std::default_delete<A> >(std::_Tuple_impl<0ul, A*, std::default_delete<A> > const&) [654]
                0.00    0.00       5/5           std::_Tuple_impl<0ul, A*, std::default_delete<A> >::_M_head(std::_Tuple_impl<0ul, A*, std::default_delete<A> > const&) [651]
-----------------------------------------------
                0.00    0.00       5/5           std::tuple_element<0ul, std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > >::type const& std::get<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > const&) [658]
[655]    0.0    0.00    0.00       5         TargetIf<SampleStruct, CIf>* const& std::__get_helper<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > const&) [655]
                0.00    0.00       5/5           std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > const&) [652]
-----------------------------------------------
                0.00    0.00       5/5           std::tuple_element<0ul, std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> > >::type const& std::get<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> > const&) [659]
[656]    0.0    0.00    0.00       5         AEntity::Impl* const& std::__get_helper<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> > const&) [656]
                0.00    0.00       5/5           std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >::_M_head(std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> > const&) [653]
-----------------------------------------------
                0.00    0.00       5/5           std::__uniq_ptr_impl<A, std::default_delete<A> >::_M_ptr() const [645]
[657]    0.0    0.00    0.00       5         std::tuple_element<0ul, std::tuple<A*, std::default_delete<A> > >::type const& std::get<0ul, A*, std::default_delete<A> >(std::tuple<A*, std::default_delete<A> > const&) [657]
                0.00    0.00       5/5           A* const& std::__get_helper<0ul, A*, std::default_delete<A> >(std::_Tuple_impl<0ul, A*, std::default_delete<A> > const&) [654]
-----------------------------------------------
                0.00    0.00       5/5           std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_ptr() const [646]
[658]    0.0    0.00    0.00       5         std::tuple_element<0ul, std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > >::type const& std::get<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > const&) [658]
                0.00    0.00       5/5           TargetIf<SampleStruct, CIf>* const& std::__get_helper<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > const&) [655]
-----------------------------------------------
                0.00    0.00       5/5           std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::_M_ptr() const [647]
[659]    0.0    0.00    0.00       5         std::tuple_element<0ul, std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> > >::type const& std::get<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> > const&) [659]
                0.00    0.00       5/5           AEntity::Impl* const& std::__get_helper<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> > const&) [656]
-----------------------------------------------
                0.00    0.00       2/4           std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::operator*() const [697]
                0.00    0.00       2/4           std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::operator->() const [698]
[660]    0.0    0.00    0.00       4         std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::get() const [660]
                0.00    0.00       4/4           std::__uniq_ptr_impl<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::_M_ptr() const [664]
-----------------------------------------------
                0.00    0.00       1/4           SampleTest_PseudoSample1_Test::TestBody() [429]
                0.00    0.00       3/4           SampleTest_RealSample2_Test::TestBody() [428]
[661]    0.0    0.00    0.00       4         std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::operator*() const [661]
                0.00    0.00       4/5           std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::get() const [642]
-----------------------------------------------
                0.00    0.00       4/4           std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::operator->() const [663]
[662]    0.0    0.00    0.00       4         std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::get() const [662]
                0.00    0.00       4/4           std::__uniq_ptr_impl<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_M_ptr() const [665]
-----------------------------------------------
                0.00    0.00       1/4           TargetEntity<SampleStruct, CIf>::ident() const [726]
                0.00    0.00       1/4           TargetEntity<SampleStruct, CIf>::compare(TargetIf<SampleStruct, CIf> const&) const [727]
                0.00    0.00       2/4           TargetEntity<SampleStruct, CIf>::getEntity() const [696]
[663]    0.0    0.00    0.00       4         std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::operator->() const [663]
                0.00    0.00       4/4           std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::get() const [662]
-----------------------------------------------
                0.00    0.00       4/4           std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::get() const [660]
[664]    0.0    0.00    0.00       4         std::__uniq_ptr_impl<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::_M_ptr() const [664]
                0.00    0.00       4/4           std::tuple_element<0ul, std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > >::type const& std::get<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >(std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > const&) [672]
-----------------------------------------------
                0.00    0.00       4/4           std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::get() const [662]
[665]    0.0    0.00    0.00       4         std::__uniq_ptr_impl<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_M_ptr() const [665]
                0.00    0.00       4/4           std::tuple_element<0ul, std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > >::type const& std::get<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >(std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > const&) [673]
-----------------------------------------------
                0.00    0.00       4/4           std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > const&) [668]
[666]    0.0    0.00    0.00       4         std::_Head_base<0ul, Target<SampleStruct, CIf>*, false>::_M_head(std::_Head_base<0ul, Target<SampleStruct, CIf>*, false> const&) [666]
-----------------------------------------------
                0.00    0.00       4/4           std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_M_head(std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > const&) [669]
[667]    0.0    0.00    0.00       4         std::_Head_base<0ul, TargetEntity<SampleStruct, CIf>::Impl*, false>::_M_head(std::_Head_base<0ul, TargetEntity<SampleStruct, CIf>::Impl*, false> const&) [667]
-----------------------------------------------
                0.00    0.00       4/4           Target<SampleStruct, CIf>* const& std::__get_helper<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >(std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > const&) [670]
[668]    0.0    0.00    0.00       4         std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > const&) [668]
                0.00    0.00       4/4           std::_Head_base<0ul, Target<SampleStruct, CIf>*, false>::_M_head(std::_Head_base<0ul, Target<SampleStruct, CIf>*, false> const&) [666]
-----------------------------------------------
                0.00    0.00       4/4           TargetEntity<SampleStruct, CIf>::Impl* const& std::__get_helper<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >(std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > const&) [671]
[669]    0.0    0.00    0.00       4         std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_M_head(std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > const&) [669]
                0.00    0.00       4/4           std::_Head_base<0ul, TargetEntity<SampleStruct, CIf>::Impl*, false>::_M_head(std::_Head_base<0ul, TargetEntity<SampleStruct, CIf>::Impl*, false> const&) [667]
-----------------------------------------------
                0.00    0.00       4/4           std::tuple_element<0ul, std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > >::type const& std::get<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >(std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > const&) [672]
[670]    0.0    0.00    0.00       4         Target<SampleStruct, CIf>* const& std::__get_helper<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >(std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > const&) [670]
                0.00    0.00       4/4           std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > const&) [668]
-----------------------------------------------
                0.00    0.00       4/4           std::tuple_element<0ul, std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > >::type const& std::get<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >(std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > const&) [673]
[671]    0.0    0.00    0.00       4         TargetEntity<SampleStruct, CIf>::Impl* const& std::__get_helper<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >(std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > const&) [671]
                0.00    0.00       4/4           std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_M_head(std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > const&) [669]
-----------------------------------------------
                0.00    0.00       4/4           std::__uniq_ptr_impl<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::_M_ptr() const [664]
[672]    0.0    0.00    0.00       4         std::tuple_element<0ul, std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > >::type const& std::get<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >(std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > const&) [672]
                0.00    0.00       4/4           Target<SampleStruct, CIf>* const& std::__get_helper<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >(std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > const&) [670]
-----------------------------------------------
                0.00    0.00       4/4           std::__uniq_ptr_impl<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_M_ptr() const [665]
[673]    0.0    0.00    0.00       4         std::tuple_element<0ul, std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > >::type const& std::get<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >(std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > const&) [673]
                0.00    0.00       4/4           TargetEntity<SampleStruct, CIf>::Impl* const& std::__get_helper<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >(std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > const&) [671]
-----------------------------------------------
                0.00    0.00       3/3           void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [3]
[674]    0.0    0.00    0.00       3         SampleTest::SetUp() [674]
-----------------------------------------------
                0.00    0.00       3/3           void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [3]
[675]    0.0    0.00    0.00       3         SampleTest::TearDown() [675]
-----------------------------------------------
                0.00    0.00       1/3           SampleTest_RealSample1_Test::SampleTest_RealSample1_Test() [701]
                0.00    0.00       1/3           SampleTest_RealSample2_Test::SampleTest_RealSample2_Test() [704]
                0.00    0.00       1/3           SampleTest_PseudoSample1_Test::SampleTest_PseudoSample1_Test() [707]
[676]    0.0    0.00    0.00       3         SampleTest::SampleTest() [676]
-----------------------------------------------
                0.00    0.00       1/3           SampleTest_RealSample1_Test::~SampleTest_RealSample1_Test() [703]
                0.00    0.00       1/3           SampleTest_RealSample2_Test::~SampleTest_RealSample2_Test() [706]
                0.00    0.00       1/3           SampleTest_PseudoSample1_Test::~SampleTest_PseudoSample1_Test() [709]
[677]    0.0    0.00    0.00       3         SampleTest::~SampleTest() [677]
-----------------------------------------------
                0.00    0.00       1/3           SampleTest_PseudoSample1_Test::TestBody() [429]
                0.00    0.00       2/3           SampleTest_RealSample2_Test::TestBody() [428]
[678]    0.0    0.00    0.00       3         testing::AssertionResult::~AssertionResult() [678]
                0.00    0.00       3/3           std::unique_ptr<std::string, std::default_delete<std::string> >::~unique_ptr() [687]
-----------------------------------------------
                0.00    0.00       3/3           __static_initialization_and_destruction_0(int, int) [735]
[679]    0.0    0.00    0.00       3         testing::internal::CodeLocation::CodeLocation(std::string const&, int) [679]
-----------------------------------------------
                0.00    0.00       1/3           testing::internal::TestFactoryImpl<SampleTest_RealSample1_Test>::TestFactoryImpl() [712]
                0.00    0.00       1/3           testing::internal::TestFactoryImpl<SampleTest_RealSample2_Test>::TestFactoryImpl() [716]
                0.00    0.00       1/3           testing::internal::TestFactoryImpl<SampleTest_PseudoSample1_Test>::TestFactoryImpl() [720]
[680]    0.0    0.00    0.00       3         testing::internal::TestFactoryBase::TestFactoryBase() [680]
-----------------------------------------------
                0.00    0.00       1/3           testing::internal::TestFactoryImpl<SampleTest_RealSample1_Test>::~TestFactoryImpl() [714]
                0.00    0.00       1/3           testing::internal::TestFactoryImpl<SampleTest_RealSample2_Test>::~TestFactoryImpl() [718]
                0.00    0.00       1/3           testing::internal::TestFactoryImpl<SampleTest_PseudoSample1_Test>::~TestFactoryImpl() [722]
[681]    0.0    0.00    0.00       3         testing::internal::TestFactoryBase::~TestFactoryBase() [681]
-----------------------------------------------
                0.00    0.00       3/3           __static_initialization_and_destruction_0(int, int) [735]
[682]    0.0    0.00    0.00       3         testing::internal::SuiteApiResolver<SampleTest>::GetSetUpCaseOrSuite(char const*, int) [682]
                0.00    0.00       6/12          testing::internal::GetNotDefaultOrNull(void (*)(), void (*)()) [634]
-----------------------------------------------
                0.00    0.00       3/3           __static_initialization_and_destruction_0(int, int) [735]
[683]    0.0    0.00    0.00       3         testing::internal::SuiteApiResolver<SampleTest>::GetTearDownCaseOrSuite(char const*, int) [683]
                0.00    0.00       6/12          testing::internal::GetNotDefaultOrNull(void (*)(), void (*)()) [634]
-----------------------------------------------
                0.00    0.00       3/3           __static_initialization_and_destruction_0(int, int) [735]
[684]    0.0    0.00    0.00       3         void const* testing::internal::GetTypeId<SampleTest>() [684]
-----------------------------------------------
                0.00    0.00       1/3           SampleTest_PseudoSample1_Test::TestBody() [429]
                0.00    0.00       2/3           SampleTest_RealSample2_Test::TestBody() [428]
[685]    0.0    0.00    0.00       3         testing::AssertionResult::operator bool() const [685]
-----------------------------------------------
                0.00    0.00       3/3           std::_Tuple_impl<0ul, std::string*, std::default_delete<std::string> >::_M_head(std::_Tuple_impl<0ul, std::string*, std::default_delete<std::string> >&) [688]
[686]    0.0    0.00    0.00       3         std::_Head_base<0ul, std::string*, false>::_M_head(std::_Head_base<0ul, std::string*, false>&) [686]
-----------------------------------------------
                0.00    0.00       3/3           testing::AssertionResult::~AssertionResult() [678]
[687]    0.0    0.00    0.00       3         std::unique_ptr<std::string, std::default_delete<std::string> >::~unique_ptr() [687]
                0.00    0.00       3/3           std::__uniq_ptr_impl<std::string, std::default_delete<std::string> >::_M_ptr() [689]
-----------------------------------------------
                0.00    0.00       3/3           std::string*& std::__get_helper<0ul, std::string*, std::default_delete<std::string> >(std::_Tuple_impl<0ul, std::string*, std::default_delete<std::string> >&) [690]
[688]    0.0    0.00    0.00       3         std::_Tuple_impl<0ul, std::string*, std::default_delete<std::string> >::_M_head(std::_Tuple_impl<0ul, std::string*, std::default_delete<std::string> >&) [688]
                0.00    0.00       3/3           std::_Head_base<0ul, std::string*, false>::_M_head(std::_Head_base<0ul, std::string*, false>&) [686]
-----------------------------------------------
                0.00    0.00       3/3           std::unique_ptr<std::string, std::default_delete<std::string> >::~unique_ptr() [687]
[689]    0.0    0.00    0.00       3         std::__uniq_ptr_impl<std::string, std::default_delete<std::string> >::_M_ptr() [689]
                0.00    0.00       3/3           std::tuple_element<0ul, std::tuple<std::string*, std::default_delete<std::string> > >::type& std::get<0ul, std::string*, std::default_delete<std::string> >(std::tuple<std::string*, std::default_delete<std::string> >&) [691]
-----------------------------------------------
                0.00    0.00       3/3           std::tuple_element<0ul, std::tuple<std::string*, std::default_delete<std::string> > >::type& std::get<0ul, std::string*, std::default_delete<std::string> >(std::tuple<std::string*, std::default_delete<std::string> >&) [691]
[690]    0.0    0.00    0.00       3         std::string*& std::__get_helper<0ul, std::string*, std::default_delete<std::string> >(std::_Tuple_impl<0ul, std::string*, std::default_delete<std::string> >&) [690]
                0.00    0.00       3/3           std::_Tuple_impl<0ul, std::string*, std::default_delete<std::string> >::_M_head(std::_Tuple_impl<0ul, std::string*, std::default_delete<std::string> >&) [688]
-----------------------------------------------
                0.00    0.00       3/3           std::__uniq_ptr_impl<std::string, std::default_delete<std::string> >::_M_ptr() [689]
[691]    0.0    0.00    0.00       3         std::tuple_element<0ul, std::tuple<std::string*, std::default_delete<std::string> > >::type& std::get<0ul, std::string*, std::default_delete<std::string> >(std::tuple<std::string*, std::default_delete<std::string> >&) [691]
                0.00    0.00       3/3           std::string*& std::__get_helper<0ul, std::string*, std::default_delete<std::string> >(std::_Tuple_impl<0ul, std::string*, std::default_delete<std::string> >&) [690]
-----------------------------------------------
                0.00    0.00       1/2           SampleTest_RealSample2_Test::TestBody() [428]
                0.00    0.00       1/2           SampleTest_PseudoSample1_Test::TestBody() [429]
[692]    0.0    0.00    0.00       2         int sampleUser1<SampleStruct, CIf>(TargetIf<SampleStruct, CIf> const&) [692]
                0.00    0.00       1/1           PseudoTargetEntity<SampleStruct, CIf>::ident() const [728]
                0.00    0.00       1/1           TargetEntity<SampleStruct, CIf>::ident() const [726]
-----------------------------------------------
                0.00    0.00       2/2           testing::AssertionResult testing::internal::EqHelper::Compare<int, int, (void*)0>(char const*, char const*, int const&, int const&) [694]
[693]    0.0    0.00    0.00       2         testing::AssertionResult testing::internal::CmpHelperEQ<int, int>(char const*, char const*, int const&, int const&) [693]
-----------------------------------------------
                0.00    0.00       1/2           SampleTest_RealSample2_Test::TestBody() [428]
                0.00    0.00       1/2           SampleTest_PseudoSample1_Test::TestBody() [429]
[694]    0.0    0.00    0.00       2         testing::AssertionResult testing::internal::EqHelper::Compare<int, int, (void*)0>(char const*, char const*, int const&, int const&) [694]
                0.00    0.00       2/2           testing::AssertionResult testing::internal::CmpHelperEQ<int, int>(char const*, char const*, int const&, int const&) [693]
-----------------------------------------------
                0.00    0.00       2/2           TargetEntity<SampleStruct, CIf>::getEntity() const [696]
[695]    0.0    0.00    0.00       2         TargetEntity<SampleStruct, CIf>::Impl::getEntity() const [695]
                0.00    0.00       2/2           std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::operator*() const [697]
-----------------------------------------------
                0.00    0.00       1/2           TargetEntity<SampleStruct, CIf>::Impl::Impl(TargetIf<SampleStruct, CIf> const&) [432]
                0.00    0.00       1/2           TargetEntity<SampleStruct, CIf>::Impl::compare(TargetIf<SampleStruct, CIf> const&) const [725]
[696]    0.0    0.00    0.00       2         TargetEntity<SampleStruct, CIf>::getEntity() const [696]
                0.00    0.00       2/4           std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::operator->() const [663]
                0.00    0.00       2/2           TargetEntity<SampleStruct, CIf>::Impl::getEntity() const [695]
-----------------------------------------------
                0.00    0.00       2/2           TargetEntity<SampleStruct, CIf>::Impl::getEntity() const [695]
[697]    0.0    0.00    0.00       2         std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::operator*() const [697]
                0.00    0.00       2/4           std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::get() const [660]
-----------------------------------------------
                0.00    0.00       1/2           TargetEntity<SampleStruct, CIf>::Impl::ident() const [724]
                0.00    0.00       1/2           TargetEntity<SampleStruct, CIf>::Impl::compare(TargetIf<SampleStruct, CIf> const&) const [725]
[698]    0.0    0.00    0.00       2         std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::operator->() const [698]
                0.00    0.00       2/4           std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::get() const [660]
-----------------------------------------------
                0.00    0.00       1/1           main [443]
[699]    0.0    0.00    0.00       1         RUN_ALL_TESTS() [699]
-----------------------------------------------
                0.00    0.00       1/1           SampleTest_PseudoSample1_Test::TestBody() [429]
[700]    0.0    0.00    0.00       1         PseudoTargetEntity<SampleStruct, CIf>::PseudoTargetEntity(AIf const&, BIf const&, CIf const&) [700]
                0.00    0.00       1/10000003     TargetIf<SampleStruct, CIf>::TargetIf() [571]
-----------------------------------------------
                0.00    0.00       1/1           testing::internal::TestFactoryImpl<SampleTest_RealSample1_Test>::CreateTest() [711]
[701]    0.0    0.00    0.00       1         SampleTest_RealSample1_Test::SampleTest_RealSample1_Test() [701]
                0.00    0.00       1/3           SampleTest::SampleTest() [676]
-----------------------------------------------
                0.00    0.00       1/1           testing::Test::DeleteSelf_() [886]
[702]    0.0    0.00    0.00       1         SampleTest_RealSample1_Test::~SampleTest_RealSample1_Test() [702]
                0.00    0.00       1/1           SampleTest_RealSample1_Test::~SampleTest_RealSample1_Test() [703]
-----------------------------------------------
                0.00    0.00       1/1           SampleTest_RealSample1_Test::~SampleTest_RealSample1_Test() [702]
[703]    0.0    0.00    0.00       1         SampleTest_RealSample1_Test::~SampleTest_RealSample1_Test() [703]
                0.00    0.00       1/3           SampleTest::~SampleTest() [677]
-----------------------------------------------
                0.00    0.00       1/1           testing::internal::TestFactoryImpl<SampleTest_RealSample2_Test>::CreateTest() [715]
[704]    0.0    0.00    0.00       1         SampleTest_RealSample2_Test::SampleTest_RealSample2_Test() [704]
                0.00    0.00       1/3           SampleTest::SampleTest() [676]
-----------------------------------------------
                0.00    0.00       1/1           testing::Test::DeleteSelf_() [886]
[705]    0.0    0.00    0.00       1         SampleTest_RealSample2_Test::~SampleTest_RealSample2_Test() [705]
                0.00    0.00       1/1           SampleTest_RealSample2_Test::~SampleTest_RealSample2_Test() [706]
-----------------------------------------------
                0.00    0.00       1/1           SampleTest_RealSample2_Test::~SampleTest_RealSample2_Test() [705]
[706]    0.0    0.00    0.00       1         SampleTest_RealSample2_Test::~SampleTest_RealSample2_Test() [706]
                0.00    0.00       1/3           SampleTest::~SampleTest() [677]
-----------------------------------------------
                0.00    0.00       1/1           testing::internal::TestFactoryImpl<SampleTest_PseudoSample1_Test>::CreateTest() [719]
[707]    0.0    0.00    0.00       1         SampleTest_PseudoSample1_Test::SampleTest_PseudoSample1_Test() [707]
                0.00    0.00       1/3           SampleTest::SampleTest() [676]
-----------------------------------------------
                0.00    0.00       1/1           testing::Test::DeleteSelf_() [886]
[708]    0.0    0.00    0.00       1         SampleTest_PseudoSample1_Test::~SampleTest_PseudoSample1_Test() [708]
                0.00    0.00       1/1           SampleTest_PseudoSample1_Test::~SampleTest_PseudoSample1_Test() [709]
-----------------------------------------------
                0.00    0.00       1/1           SampleTest_PseudoSample1_Test::~SampleTest_PseudoSample1_Test() [708]
[709]    0.0    0.00    0.00       1         SampleTest_PseudoSample1_Test::~SampleTest_PseudoSample1_Test() [709]
                0.00    0.00       1/3           SampleTest::~SampleTest() [677]
-----------------------------------------------
                0.00    0.00       1/1           testing::AssertionResult testing::internal::EqHelper::Compare<TargetIf<SampleStruct, CIf>::COMPARE, TargetIf<SampleStruct, CIf>::COMPARE, (void*)0>(char const*, char const*, TargetIf<SampleStruct, CIf>::COMPARE const&, TargetIf<SampleStruct, CIf>::COMPARE const&) [723]
[710]    0.0    0.00    0.00       1         testing::AssertionResult testing::internal::CmpHelperEQ<TargetIf<SampleStruct, CIf>::COMPARE, TargetIf<SampleStruct, CIf>::COMPARE>(char const*, char const*, TargetIf<SampleStruct, CIf>::COMPARE const&, TargetIf<SampleStruct, CIf>::COMPARE const&) [710]
-----------------------------------------------
                0.00    0.00       1/1           testing::Test* testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::TestFactoryBase, testing::Test*>(testing::internal::TestFactoryBase*, testing::Test* (testing::internal::TestFactoryBase::*)(), char const*) [1502]
[711]    0.0    0.00    0.00       1         testing::internal::TestFactoryImpl<SampleTest_RealSample1_Test>::CreateTest() [711]
                0.00    0.00       1/1           SampleTest_RealSample1_Test::SampleTest_RealSample1_Test() [701]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [735]
[712]    0.0    0.00    0.00       1         testing::internal::TestFactoryImpl<SampleTest_RealSample1_Test>::TestFactoryImpl() [712]
                0.00    0.00       1/3           testing::internal::TestFactoryBase::TestFactoryBase() [680]
-----------------------------------------------
                0.00    0.00       1/1           testing::TestInfo::~TestInfo() [1003]
[713]    0.0    0.00    0.00       1         testing::internal::TestFactoryImpl<SampleTest_RealSample1_Test>::~TestFactoryImpl() [713]
                0.00    0.00       1/1           testing::internal::TestFactoryImpl<SampleTest_RealSample1_Test>::~TestFactoryImpl() [714]
-----------------------------------------------
                0.00    0.00       1/1           testing::internal::TestFactoryImpl<SampleTest_RealSample1_Test>::~TestFactoryImpl() [713]
[714]    0.0    0.00    0.00       1         testing::internal::TestFactoryImpl<SampleTest_RealSample1_Test>::~TestFactoryImpl() [714]
                0.00    0.00       1/3           testing::internal::TestFactoryBase::~TestFactoryBase() [681]
-----------------------------------------------
                0.00    0.00       1/1           testing::Test* testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::TestFactoryBase, testing::Test*>(testing::internal::TestFactoryBase*, testing::Test* (testing::internal::TestFactoryBase::*)(), char const*) [1502]
[715]    0.0    0.00    0.00       1         testing::internal::TestFactoryImpl<SampleTest_RealSample2_Test>::CreateTest() [715]
                0.00    0.00       1/1           SampleTest_RealSample2_Test::SampleTest_RealSample2_Test() [704]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [735]
[716]    0.0    0.00    0.00       1         testing::internal::TestFactoryImpl<SampleTest_RealSample2_Test>::TestFactoryImpl() [716]
                0.00    0.00       1/3           testing::internal::TestFactoryBase::TestFactoryBase() [680]
-----------------------------------------------
                0.00    0.00       1/1           testing::TestInfo::~TestInfo() [1003]
[717]    0.0    0.00    0.00       1         testing::internal::TestFactoryImpl<SampleTest_RealSample2_Test>::~TestFactoryImpl() [717]
                0.00    0.00       1/1           testing::internal::TestFactoryImpl<SampleTest_RealSample2_Test>::~TestFactoryImpl() [718]
-----------------------------------------------
                0.00    0.00       1/1           testing::internal::TestFactoryImpl<SampleTest_RealSample2_Test>::~TestFactoryImpl() [717]
[718]    0.0    0.00    0.00       1         testing::internal::TestFactoryImpl<SampleTest_RealSample2_Test>::~TestFactoryImpl() [718]
                0.00    0.00       1/3           testing::internal::TestFactoryBase::~TestFactoryBase() [681]
-----------------------------------------------
                0.00    0.00       1/1           testing::Test* testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::TestFactoryBase, testing::Test*>(testing::internal::TestFactoryBase*, testing::Test* (testing::internal::TestFactoryBase::*)(), char const*) [1502]
[719]    0.0    0.00    0.00       1         testing::internal::TestFactoryImpl<SampleTest_PseudoSample1_Test>::CreateTest() [719]
                0.00    0.00       1/1           SampleTest_PseudoSample1_Test::SampleTest_PseudoSample1_Test() [707]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [735]
[720]    0.0    0.00    0.00       1         testing::internal::TestFactoryImpl<SampleTest_PseudoSample1_Test>::TestFactoryImpl() [720]
                0.00    0.00       1/3           testing::internal::TestFactoryBase::TestFactoryBase() [680]
-----------------------------------------------
                0.00    0.00       1/1           testing::TestInfo::~TestInfo() [1003]
[721]    0.0    0.00    0.00       1         testing::internal::TestFactoryImpl<SampleTest_PseudoSample1_Test>::~TestFactoryImpl() [721]
                0.00    0.00       1/1           testing::internal::TestFactoryImpl<SampleTest_PseudoSample1_Test>::~TestFactoryImpl() [722]
-----------------------------------------------
                0.00    0.00       1/1           testing::internal::TestFactoryImpl<SampleTest_PseudoSample1_Test>::~TestFactoryImpl() [721]
[722]    0.0    0.00    0.00       1         testing::internal::TestFactoryImpl<SampleTest_PseudoSample1_Test>::~TestFactoryImpl() [722]
                0.00    0.00       1/3           testing::internal::TestFactoryBase::~TestFactoryBase() [681]
-----------------------------------------------
                0.00    0.00       1/1           SampleTest_RealSample2_Test::TestBody() [428]
[723]    0.0    0.00    0.00       1         testing::AssertionResult testing::internal::EqHelper::Compare<TargetIf<SampleStruct, CIf>::COMPARE, TargetIf<SampleStruct, CIf>::COMPARE, (void*)0>(char const*, char const*, TargetIf<SampleStruct, CIf>::COMPARE const&, TargetIf<SampleStruct, CIf>::COMPARE const&) [723]
                0.00    0.00       1/1           testing::AssertionResult testing::internal::CmpHelperEQ<TargetIf<SampleStruct, CIf>::COMPARE, TargetIf<SampleStruct, CIf>::COMPARE>(char const*, char const*, TargetIf<SampleStruct, CIf>::COMPARE const&, TargetIf<SampleStruct, CIf>::COMPARE const&) [710]
-----------------------------------------------
                0.00    0.00       1/1           TargetEntity<SampleStruct, CIf>::ident() const [726]
[724]    0.0    0.00    0.00       1         TargetEntity<SampleStruct, CIf>::Impl::ident() const [724]
                0.00    0.00       1/2           std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::operator->() const [698]
                0.00    0.00       1/5           Target<SampleStruct, CIf>::ident() const [637]
-----------------------------------------------
                0.00    0.00       1/1           TargetEntity<SampleStruct, CIf>::compare(TargetIf<SampleStruct, CIf> const&) const [727]
[725]    0.0    0.00    0.00       1         TargetEntity<SampleStruct, CIf>::Impl::compare(TargetIf<SampleStruct, CIf> const&) const [725]
                0.00    0.00       1/2           std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::operator->() const [698]
                0.00    0.00       1/2           TargetEntity<SampleStruct, CIf>::getEntity() const [696]
                0.00    0.00       1/1           Target<SampleStruct, CIf>::compare(Target<SampleStruct, CIf> const&) const [729]
-----------------------------------------------
                0.00    0.00       1/1           int sampleUser1<SampleStruct, CIf>(TargetIf<SampleStruct, CIf> const&) [692]
[726]    0.0    0.00    0.00       1         TargetEntity<SampleStruct, CIf>::ident() const [726]
                0.00    0.00       1/4           std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::operator->() const [663]
                0.00    0.00       1/1           TargetEntity<SampleStruct, CIf>::Impl::ident() const [724]
-----------------------------------------------
                0.00    0.00       1/1           SampleTest_RealSample2_Test::TestBody() [428]
[727]    0.0    0.00    0.00       1         TargetEntity<SampleStruct, CIf>::compare(TargetIf<SampleStruct, CIf> const&) const [727]
                0.00    0.00       1/4           std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::operator->() const [663]
                0.00    0.00       1/1           TargetEntity<SampleStruct, CIf>::Impl::compare(TargetIf<SampleStruct, CIf> const&) const [725]
-----------------------------------------------
                0.00    0.00       1/1           int sampleUser1<SampleStruct, CIf>(TargetIf<SampleStruct, CIf> const&) [692]
[728]    0.0    0.00    0.00       1         PseudoTargetEntity<SampleStruct, CIf>::ident() const [728]
-----------------------------------------------
                0.00    0.00       1/1           TargetEntity<SampleStruct, CIf>::Impl::compare(TargetIf<SampleStruct, CIf> const&) const [725]
[729]    0.0    0.00    0.00       1         Target<SampleStruct, CIf>::compare(Target<SampleStruct, CIf> const&) const [729]
                0.00    0.00       4/5           Target<SampleStruct, CIf>::ident() const [637]
-----------------------------------------------
                0.00    0.00       1/1           SampleTest_RealSample2_Test::TestBody() [428]
[730]    0.0    0.00    0.00       1         std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::operator->() const [730]
                0.00    0.00       1/5           std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::get() const [642]
-----------------------------------------------
                0.00    0.00       1/1           Target<SampleStruct, CIf>::Target(Target<SampleStruct, CIf> const&) [433]
[731]    0.0    0.00    0.00       1         std::operator!=(std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&, std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&) [731]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2021 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [692] int sampleUser1<SampleStruct, CIf>(TargetIf<SampleStruct, CIf> const&) [383] std::_Head_base<1ul, std::default_delete<AIf>, true>::_Head_base<std::default_delete<AIf> >(std::default_delete<AIf>&&) [269] std::__uniq_ptr_impl<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::__uniq_ptr_impl()
 [699] RUN_ALL_TESTS()       [411] std::_Head_base<1ul, std::default_delete<BIf>, true>::_M_head(std::_Head_base<1ul, std::default_delete<BIf>, true>&) [206] std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_deleter()
 [674] SampleTest::SetUp()   [588] std::_Head_base<1ul, std::default_delete<BIf>, true>::_Head_base() [125] std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_ptr()
 [675] SampleTest::TearDown() [384] std::_Head_base<1ul, std::default_delete<BIf>, true>::_Head_base<std::default_delete<BIf> >(std::default_delete<BIf>&&) [112] std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::__uniq_ptr_impl(std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&&)
 [676] SampleTest::SampleTest() [334] std::_Head_base<1ul, std::default_delete<CIf>, true>::_M_head(std::_Head_base<1ul, std::default_delete<CIf>, true>&) [193] std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::__uniq_ptr_impl(TargetIf<SampleStruct, CIf>*)
 [677] SampleTest::~SampleTest() [589] std::_Head_base<1ul, std::default_delete<CIf>, true>::_Head_base() [141] std::__uniq_ptr_impl<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::reset(TargetEntity<SampleStruct, CIf>::Impl*)
 [117] SampleStruct::SampleStruct(int) [290] std::_Head_base<1ul, std::default_delete<CIf>, true>::_Head_base<std::default_delete<CIf> >(std::default_delete<CIf>&&) [216] std::__uniq_ptr_impl<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_M_ptr()
   [7] TargetEntity<SampleStruct, CIf>::Impl::Impl(AIf const&, BIf const&, CIf const&) [590] std::_Head_base<1ul, std::default_delete<Target<SampleStruct, CIf> >, true>::_Head_base() [229] std::__uniq_ptr_impl<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::__uniq_ptr_impl()
 [432] TargetEntity<SampleStruct, CIf>::Impl::Impl(TargetIf<SampleStruct, CIf> const&) [364] std::_Head_base<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >, true>::_M_head(std::_Head_base<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >, true>&) [196] std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::_M_deleter()
   [6] TargetEntity<SampleStruct, CIf>::TargetEntity(AIf const&, BIf const&, CIf const&) [573] std::_Head_base<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >, true>::_Head_base() [113] std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::reset(AEntity::Impl*)
 [431] TargetEntity<SampleStruct, CIf>::TargetEntity(TargetIf<SampleStruct, CIf> const&) [385] std::_Head_base<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >, true>::_Head_base<std::default_delete<TargetIf<SampleStruct, CIf> > >(std::default_delete<TargetIf<SampleStruct, CIf> >&&) [100] std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::_M_ptr()
 [700] PseudoTargetEntity<SampleStruct, CIf>::PseudoTargetEntity(AIf const&, BIf const&, CIf const&) [349] std::_Head_base<1ul, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl>, true>::_Head_base() [240] std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::__uniq_ptr_impl()
 [371] A::A(int)             [266] std::_Head_base<1ul, std::default_delete<AEntity::Impl>, true>::_M_head(std::_Head_base<1ul, std::default_delete<AEntity::Impl>, true>&) [230] std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::_M_deleter()
 [413] B::B()                [591] std::_Head_base<1ul, std::default_delete<AEntity::Impl>, true>::_Head_base() [245] std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::reset(BEntity::Impl*)
 [574] C::C(int)             [592] std::_Head_base<1ul, std::default_delete<BEntity::Impl>, true>::_M_head(std::_Head_base<1ul, std::default_delete<BEntity::Impl>, true>&) [215] std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::_M_ptr()
   [4] SampleTest_RealSample1_Test::TestBody() [593] std::_Head_base<1ul, std::default_delete<BEntity::Impl>, true>::_Head_base() [220] std::__uniq_ptr_impl<BEntity::Impl, std::default_delete<BEntity::Impl> >::__uniq_ptr_impl()
 [701] SampleTest_RealSample1_Test::SampleTest_RealSample1_Test() [594] std::_Head_base<1ul, std::default_delete<CEntity::Impl>, true>::_M_head(std::_Head_base<1ul, std::default_delete<CEntity::Impl>, true>&) [279] std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::_M_deleter()
 [702] SampleTest_RealSample1_Test::~SampleTest_RealSample1_Test() [386] std::_Head_base<1ul, std::default_delete<CEntity::Impl>, true>::_Head_base() [142] std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::reset(CEntity::Impl*)
 [703] SampleTest_RealSample1_Test::~SampleTest_RealSample1_Test() [626] std::_Head_base<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >, true>::_M_head(std::_Head_base<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >, true>&) [131] std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::_M_ptr()
 [428] SampleTest_RealSample2_Test::TestBody() [31] std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >::unique_ptr<std::default_delete<SampleStruct>, void>(SampleStruct*) [261] std::__uniq_ptr_impl<CEntity::Impl, std::default_delete<CEntity::Impl> >::__uniq_ptr_impl()
 [704] SampleTest_RealSample2_Test::SampleTest_RealSample2_Test() [42] std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >::unique_ptr<std::default_delete<SampleStruct>, void>() [689] std::__uniq_ptr_impl<std::string, std::default_delete<std::string> >::_M_ptr()
 [705] SampleTest_RealSample2_Test::~SampleTest_RealSample2_Test() [47] std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >::~unique_ptr() [630] std::__uniq_ptr_impl<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::_M_deleter()
 [706] SampleTest_RealSample2_Test::~SampleTest_RealSample2_Test() [15] std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >::operator=(std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >&&) [621] std::__uniq_ptr_impl<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::_M_ptr()
 [429] SampleTest_PseudoSample1_Test::TestBody() [235] std::unique_ptr<A, std::default_delete<A> >::get_deleter() [61] std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >&, unsigned long)
 [707] SampleTest_PseudoSample1_Test::SampleTest_PseudoSample1_Test() [198] std::unique_ptr<A, std::default_delete<A> >::reset(A*) [17] void std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > > >::construct<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >&, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&)
 [708] SampleTest_PseudoSample1_Test::~SampleTest_PseudoSample1_Test() [291] std::unique_ptr<A, std::default_delete<A> >::unique_ptr<std::default_delete<A>, void>() [67] std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_Rb_tree_iterator(std::_Rb_tree_node_base*)
 [709] SampleTest_PseudoSample1_Test::~SampleTest_PseudoSample1_Test() [174] std::unique_ptr<A, std::default_delete<A> >::~unique_ptr() [393] std::_Rb_tree_key_compare<std::less<int> >::_Rb_tree_key_compare()
  [38] AIf::instantiate(int) [249] std::unique_ptr<B, std::default_delete<B> >::get_deleter() [207] std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_Rb_tree_const_iterator(std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&)
 [414] AIf::AIf()            [176] std::unique_ptr<B, std::default_delete<B> >::reset(B*) [13] std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::lower_bound(int const&)
 [339] AIf::~AIf()           [387] std::unique_ptr<B, std::default_delete<B> >::unique_ptr<std::default_delete<B>, void>() [70] std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::end()
  [46] BIf::instantiate()    [153] std::unique_ptr<B, std::default_delete<B> >::~unique_ptr() [442] std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::begin()
 [372] BIf::BIf()            [171] std::unique_ptr<C, std::default_delete<C> >::get_deleter() [213] std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::map()
 [373] BIf::~BIf()           [192] std::unique_ptr<C, std::default_delete<C> >::reset(C*) [9] std::map<int, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::operator[](int const&)
  [45] CIf::instantiate(int) [267] std::unique_ptr<C, std::default_delete<C> >::unique_ptr<std::default_delete<C>, void>() [26] std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >::pair<int const&>(std::piecewise_construct_t, std::tuple<int const&>, std::tuple<>)
 [575] CIf::CIf()            [119] std::unique_ptr<C, std::default_delete<C> >::~unique_ptr() [28] std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >::pair<int const&, 0ul>(std::tuple<int const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>)
 [576] CIf::~CIf()           [292] std::unique_ptr<AIf, std::default_delete<AIf> >::get_deleter() [332] std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*>::pair<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*&, std::_Rb_tree_node_base*&, true>(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*&, std::_Rb_tree_node_base*&)
   [8] Target<SampleStruct, CIf>::Target(AIf const&, BIf const&, CIf const&) [108] std::unique_ptr<AIf, std::default_delete<AIf> >::unique_ptr(std::unique_ptr<AIf, std::default_delete<AIf> >&&) [94] std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*>::pair<std::_Rb_tree_node_base*&, true>(std::_Rb_tree_node_base* const&, std::_Rb_tree_node_base*&)
 [433] Target<SampleStruct, CIf>::Target(Target<SampleStruct, CIf> const&) [161] std::unique_ptr<AIf, std::default_delete<AIf> >::unique_ptr<std::default_delete<AIf>, void>(AIf*) [41] std::tuple<SampleStruct*, std::default_delete<SampleStruct> >::tuple<true, true>()
 [144] AEntity::Impl::Impl(int) [58] std::unique_ptr<AIf, std::default_delete<AIf> >::~unique_ptr() [423] std::tuple<A*, std::default_delete<A> >::tuple<true, true>()
 [158] AEntity::Impl::~Impl() [358] std::unique_ptr<BIf, std::default_delete<BIf> >::get_deleter() [609] std::tuple<B*, std::default_delete<B> >::tuple<true, true>()
  [66] AEntity::AEntity(int) [124] std::unique_ptr<BIf, std::default_delete<BIf> >::unique_ptr(std::unique_ptr<BIf, std::default_delete<BIf> >&&) [310] std::tuple<C*, std::default_delete<C> >::tuple<true, true>()
  [76] AEntity::~AEntity()   [165] std::unique_ptr<BIf, std::default_delete<BIf> >::unique_ptr<std::default_delete<BIf>, void>(BIf*) [137] std::tuple<AIf*, std::default_delete<AIf> >::tuple(std::tuple<AIf*, std::default_delete<AIf> >&&)
  [83] AEntity::~AEntity()    [64] std::unique_ptr<BIf, std::default_delete<BIf> >::~unique_ptr() [241] std::tuple<AIf*, std::default_delete<AIf> >::tuple<true, true>()
 [139] BEntity::Impl::Impl() [333] std::unique_ptr<CIf, std::default_delete<CIf> >::get_deleter() [223] std::tuple<BIf*, std::default_delete<BIf> >::tuple(std::tuple<BIf*, std::default_delete<BIf> >&&)
 [135] BEntity::Impl::~Impl() [115] std::unique_ptr<CIf, std::default_delete<CIf> >::unique_ptr(std::unique_ptr<CIf, std::default_delete<CIf> >&&) [280] std::tuple<BIf*, std::default_delete<BIf> >::tuple<true, true>()
  [89] BEntity::BEntity()    [203] std::unique_ptr<CIf, std::default_delete<CIf> >::unique_ptr<std::default_delete<CIf>, void>(CIf*) [181] std::tuple<CIf*, std::default_delete<CIf> >::tuple(std::tuple<CIf*, std::default_delete<CIf> >&&)
  [91] BEntity::~BEntity()    [60] std::unique_ptr<CIf, std::default_delete<CIf> >::~unique_ptr() [353] std::tuple<CIf*, std::default_delete<CIf> >::tuple<true, true>()
  [95] BEntity::~BEntity()   [132] std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::reset(Target<SampleStruct, CIf>*) [354] std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::tuple<true, true>()
 [138] CEntity::Impl::Impl(int) [184] std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::unique_ptr<std::default_delete<Target<SampleStruct, CIf> >, void>() [152] std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::tuple(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&&)
 [118] CEntity::Impl::~Impl() [205] std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::get_deleter() [314] std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::tuple<true, true>()
  [75] CEntity::CEntity(int) [103] std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::unique_ptr(std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [252] std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::tuple<true, true>()
  [79] CEntity::~CEntity()   [133] std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::unique_ptr<std::default_delete<TargetIf<SampleStruct, CIf> >, void>(TargetIf<SampleStruct, CIf>*) [281] std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> >::tuple<true, true>()
  [80] CEntity::~CEntity()   [106] std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::~unique_ptr() [242] std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> >::tuple<true, true>()
 [678] testing::AssertionResult::~AssertionResult() [116] std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::reset(TargetEntity<SampleStruct, CIf>::Impl*) [296] std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> >::tuple<true, true>()
 [624] testing::Message::~Message() [189] std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::unique_ptr<std::default_delete<TargetEntity<SampleStruct, CIf>::Impl>, void>() [44] std::tuple<int const&>::tuple(std::tuple<int const&>&&)
 [710] testing::AssertionResult testing::internal::CmpHelperEQ<TargetIf<SampleStruct, CIf>::COMPARE, TargetIf<SampleStruct, CIf>::COMPARE>(char const*, char const*, TargetIf<SampleStruct, CIf>::COMPARE const&, TargetIf<SampleStruct, CIf>::COMPARE const&) [172] std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::get_deleter() [65] std::tuple<int const&>::tuple<true, true>(int const&)
 [693] testing::AssertionResult testing::internal::CmpHelperEQ<int, int>(char const*, char const*, int const&, int const&) [105] std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::reset(AEntity::Impl*) [53] std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_node()
 [679] testing::internal::CodeLocation::CodeLocation(std::string const&, int) [201] std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::unique_ptr<std::default_delete<AEntity::Impl>, void>() [14] std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::lower_bound(int const&)
 [635] testing::internal::CodeLocation::~CodeLocation() [85] std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::~unique_ptr() [104] std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_rightmost()
 [680] testing::internal::TestFactoryBase::TestFactoryBase() [226] std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::get_deleter() [244] std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_Rb_tree_impl<std::less<int>, true>::_Rb_tree_impl()
 [681] testing::internal::TestFactoryBase::~TestFactoryBase() [202] std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::reset(BEntity::Impl*) [11] std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >* std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_create_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&)
 [711] testing::internal::TestFactoryImpl<SampleTest_RealSample1_Test>::CreateTest() [179] std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::unique_ptr<std::default_delete<BEntity::Impl>, void>() [27] std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_insert_node(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*)
 [712] testing::internal::TestFactoryImpl<SampleTest_RealSample1_Test>::TestFactoryImpl() [97] std::unique_ptr<BEntity::Impl, std::default_delete<BEntity::Impl> >::~unique_ptr() [16] std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_lower_bound(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*, std::_Rb_tree_node_base*, int const&)
 [713] testing::internal::TestFactoryImpl<SampleTest_RealSample1_Test>::~TestFactoryImpl() [236] std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::get_deleter() [12] void std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_construct_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&)
 [714] testing::internal::TestFactoryImpl<SampleTest_RealSample1_Test>::~TestFactoryImpl() [114] std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::reset(CEntity::Impl*) [168] std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_Node_allocator()
 [715] testing::internal::TestFactoryImpl<SampleTest_RealSample2_Test>::CreateTest() [237] std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::unique_ptr<std::default_delete<CEntity::Impl>, void>() [10] std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&)
 [716] testing::internal::TestFactoryImpl<SampleTest_RealSample2_Test>::TestFactoryImpl() [81] std::unique_ptr<CEntity::Impl, std::default_delete<CEntity::Impl> >::~unique_ptr() [154] std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_unique_pos(int const&)
 [717] testing::internal::TestFactoryImpl<SampleTest_RealSample2_Test>::~TestFactoryImpl() [687] std::unique_ptr<std::string, std::default_delete<std::string> >::~unique_ptr() [25] std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, int const&)
 [718] testing::internal::TestFactoryImpl<SampleTest_RealSample2_Test>::~TestFactoryImpl() [627] std::unique_ptr<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::get_deleter() [87] std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::end()
 [719] testing::internal::TestFactoryImpl<SampleTest_PseudoSample1_Test>::CreateTest() [628] std::unique_ptr<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::~unique_ptr() [406] std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::begin()
 [720] testing::internal::TestFactoryImpl<SampleTest_PseudoSample1_Test>::TestFactoryImpl() [39] std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >::_M_head(std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >&) [107] std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_end()
 [721] testing::internal::TestFactoryImpl<SampleTest_PseudoSample1_Test>::~TestFactoryImpl() [48] std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >::_Tuple_impl() [19] std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_S_key(std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const*)
 [722] testing::internal::TestFactoryImpl<SampleTest_PseudoSample1_Test>::~TestFactoryImpl() [651] std::_Tuple_impl<0ul, A*, std::default_delete<A> >::_M_head(std::_Tuple_impl<0ul, A*, std::default_delete<A> > const&) [37] std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_S_key(std::_Rb_tree_node_base const*)
 [682] testing::internal::SuiteApiResolver<SampleTest>::GetSetUpCaseOrSuite(char const*, int) [284] std::_Tuple_impl<0ul, A*, std::default_delete<A> >::_M_head(std::_Tuple_impl<0ul, A*, std::default_delete<A> >&) [92] std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_begin()
 [683] testing::internal::SuiteApiResolver<SampleTest>::GetTearDownCaseOrSuite(char const*, int) [419] std::_Tuple_impl<0ul, A*, std::default_delete<A> >::_Tuple_impl() [82] std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_S_right(std::_Rb_tree_node_base*)
 [634] testing::internal::GetNotDefaultOrNull(void (*)(), void (*)()) [263] std::_Tuple_impl<0ul, B*, std::default_delete<B> >::_M_head(std::_Tuple_impl<0ul, B*, std::default_delete<B> >&) [231] std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_Rb_tree()
 [723] testing::AssertionResult testing::internal::EqHelper::Compare<TargetIf<SampleStruct, CIf>::COMPARE, TargetIf<SampleStruct, CIf>::COMPARE, (void*)0>(char const*, char const*, TargetIf<SampleStruct, CIf>::COMPARE const&, TargetIf<SampleStruct, CIf>::COMPARE const&) [595] std::_Tuple_impl<0ul, B*, std::default_delete<B> >::_Tuple_impl() [29] SampleStruct*& std::__get_helper<0ul, SampleStruct*, std::default_delete<SampleStruct> >(std::_Tuple_impl<0ul, SampleStruct*, std::default_delete<SampleStruct> >&)
 [694] testing::AssertionResult testing::internal::EqHelper::Compare<int, int, (void*)0>(char const*, char const*, int const&, int const&) [257] std::_Tuple_impl<0ul, C*, std::default_delete<C> >::_M_head(std::_Tuple_impl<0ul, C*, std::default_delete<C> >&) [654] A* const& std::__get_helper<0ul, A*, std::default_delete<A> >(std::_Tuple_impl<0ul, A*, std::default_delete<A> > const&)
 [684] void const* testing::internal::GetTypeId<SampleTest>() [325] std::_Tuple_impl<0ul, C*, std::default_delete<C> >::_Tuple_impl() [285] A*& std::__get_helper<0ul, A*, std::default_delete<A> >(std::_Tuple_impl<0ul, A*, std::default_delete<A> >&)
   [5] TargetIf<SampleStruct, CIf>::instantiate(AIf const&, BIf const&, CIf const&) [420] std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_M_head(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> > const&) [248] B*& std::__get_helper<0ul, B*, std::default_delete<B> >(std::_Tuple_impl<0ul, B*, std::default_delete<B> >&)
 [430] TargetIf<SampleStruct, CIf>::clone(TargetIf<SampleStruct, CIf> const&) [276] std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_M_head(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&) [187] C*& std::__get_helper<0ul, C*, std::default_delete<C> >(std::_Tuple_impl<0ul, C*, std::default_delete<C> >&)
 [571] TargetIf<SampleStruct, CIf>::TargetIf() [421] std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_M_tail(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&) [424] AIf* const& std::__get_helper<0ul, AIf*, std::default_delete<AIf> >(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> > const&)
  [77] __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::allocate(unsigned long, void const*) [156] std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_Tuple_impl(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&&) [221] AIf*& std::__get_helper<0ul, AIf*, std::default_delete<AIf> >(std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >&)
  [21] void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::construct<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [259] std::_Tuple_impl<0ul, AIf*, std::default_delete<AIf> >::_Tuple_impl() [610] BIf* const& std::__get_helper<0ul, BIf*, std::default_delete<BIf> >(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> > const&)
 [577] __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::new_allocator() [596] std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_M_head(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> > const&) [199] BIf*& std::__get_helper<0ul, BIf*, std::default_delete<BIf> >(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&)
  [74] __gnu_cxx::__aligned_membuf<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_ptr() [256] std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_M_head(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&) [270] CIf* const& std::__get_helper<0ul, CIf*, std::default_delete<CIf> >(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> > const&)
 [120] __gnu_cxx::__aligned_membuf<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_addr() [597] std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_M_tail(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&) [175] CIf*& std::__get_helper<0ul, CIf*, std::default_delete<CIf> >(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&)
 [330] SampleStruct::falsifyIdent() const [222] std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_Tuple_impl(std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >&&) [670] Target<SampleStruct, CIf>* const& std::__get_helper<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >(std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > const&)
 [724] TargetEntity<SampleStruct, CIf>::Impl::ident() const [304] std::_Tuple_impl<0ul, BIf*, std::default_delete<BIf> >::_Tuple_impl() [277] Target<SampleStruct, CIf>*& std::__get_helper<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >(std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >&)
 [725] TargetEntity<SampleStruct, CIf>::Impl::compare(TargetIf<SampleStruct, CIf> const&) const [326] std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_M_head(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> > const&) [655] TargetIf<SampleStruct, CIf>* const& std::__get_helper<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > const&)
 [695] TargetEntity<SampleStruct, CIf>::Impl::getEntity() const [182] std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_M_head(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&) [194] TargetIf<SampleStruct, CIf>*& std::__get_helper<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&)
 [726] TargetEntity<SampleStruct, CIf>::ident() const [598] std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_M_tail(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&) [671] TargetEntity<SampleStruct, CIf>::Impl* const& std::__get_helper<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >(std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > const&)
 [727] TargetEntity<SampleStruct, CIf>::compare(TargetIf<SampleStruct, CIf> const&) const [185] std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_Tuple_impl(std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >&&) [302] TargetEntity<SampleStruct, CIf>::Impl*& std::__get_helper<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >(std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >&)
 [696] TargetEntity<SampleStruct, CIf>::getEntity() const [388] std::_Tuple_impl<0ul, CIf*, std::default_delete<CIf> >::_Tuple_impl() [656] AEntity::Impl* const& std::__get_helper<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> > const&)
 [728] PseudoTargetEntity<SampleStruct, CIf>::ident() const [668] std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > const&) [147] AEntity::Impl*& std::__get_helper<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >&)
 [636] A::ident() const      [335] std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >&) [258] BEntity::Impl*& std::__get_helper<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >(std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >&)
 [637] Target<SampleStruct, CIf>::ident() const [350] std::_Tuple_impl<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >::_Tuple_impl() [157] CEntity::Impl*& std::__get_helper<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >(std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >&)
 [729] Target<SampleStruct, CIf>::compare(Target<SampleStruct, CIf> const&) const [652] std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > const&) [690] std::string*& std::__get_helper<0ul, std::string*, std::default_delete<std::string> >(std::_Tuple_impl<0ul, std::string*, std::default_delete<std::string> >&)
 [638] AEntity::Impl::ident() const [247] std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [622] std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*& std::__get_helper<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >(std::_Tuple_impl<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&)
 [639] AEntity::ident() const [599] std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_tail(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [71] int const& std::__get_helper<0ul, int const&>(std::_Tuple_impl<0ul, int const&>&)
 [685] testing::AssertionResult::operator bool() const [151] std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl(std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [52] std::default_delete<SampleStruct>& std::__get_helper<1ul, std::default_delete<SampleStruct>>(std::_Tuple_impl<1ul, std::default_delete<SampleStruct>>&)
 [155] __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_max_size() const [313] std::_Tuple_impl<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl() [394] std::default_delete<A>& std::__get_helper<1ul, std::default_delete<A>>(std::_Tuple_impl<1ul, std::default_delete<A>>&)
  [30] __gnu_cxx::__aligned_membuf<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_ptr() const [669] std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_M_head(std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > const&) [282] std::default_delete<B>& std::__get_helper<1ul, std::default_delete<B>>(std::_Tuple_impl<1ul, std::default_delete<B>>&)
  [54] __gnu_cxx::__aligned_membuf<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_addr() const [336] std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_M_head(std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >&) [297] std::default_delete<C>& std::__get_helper<1ul, std::default_delete<C>>(std::_Tuple_impl<1ul, std::default_delete<C>>&)
  [63] std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::operator()(std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > const&) const [250] std::_Tuple_impl<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_Tuple_impl() [355] std::default_delete<AIf>& std::__get_helper<1ul, std::default_delete<AIf>>(std::_Tuple_impl<1ul, std::default_delete<AIf>>&)
 [640] std::unique_ptr<A, std::default_delete<A> >::get() const [653] std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >::_M_head(std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> > const&) [360] std::default_delete<BIf>& std::__get_helper<1ul, std::default_delete<BIf>>(std::_Tuple_impl<1ul, std::default_delete<BIf>>&)
 [641] std::unique_ptr<A, std::default_delete<A> >::operator->() const [200] std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >::_M_head(std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >&) [404] std::default_delete<CIf>& std::__get_helper<1ul, std::default_delete<CIf>>(std::_Tuple_impl<1ul, std::default_delete<CIf>>&)
 [340] std::unique_ptr<AIf, std::default_delete<AIf> >::get() const [351] std::_Tuple_impl<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >::_Tuple_impl() [275] std::default_delete<TargetIf<SampleStruct, CIf> >& std::__get_helper<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >>(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> >>&)
 [341] std::unique_ptr<AIf, std::default_delete<AIf> >::operator*() const [301] std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >::_M_head(std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >&) [211] std::default_delete<AEntity::Impl>& std::__get_helper<1ul, std::default_delete<AEntity::Impl>>(std::_Tuple_impl<1ul, std::default_delete<AEntity::Impl>>&)
 [374] std::unique_ptr<BIf, std::default_delete<BIf> >::get() const [238] std::_Tuple_impl<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >::_Tuple_impl() [611] std::default_delete<BEntity::Impl>& std::__get_helper<1ul, std::default_delete<BEntity::Impl>>(std::_Tuple_impl<1ul, std::default_delete<BEntity::Impl>>&)
 [323] std::unique_ptr<BIf, std::default_delete<BIf> >::operator*() const [208] std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >::_M_head(std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >&) [395] std::default_delete<CEntity::Impl>& std::__get_helper<1ul, std::default_delete<CEntity::Impl>>(std::_Tuple_impl<1ul, std::default_delete<CEntity::Impl>>&)
 [217] std::unique_ptr<CIf, std::default_delete<CIf> >::get() const [293] std::_Tuple_impl<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >::_Tuple_impl() [631] std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >& std::__get_helper<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >>(std::_Tuple_impl<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >>&)
 [188] std::unique_ptr<CIf, std::default_delete<CIf> >::operator*() const [688] std::_Tuple_impl<0ul, std::string*, std::default_delete<std::string> >::_M_head(std::_Tuple_impl<0ul, std::string*, std::default_delete<std::string> >&) [273] std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
 [660] std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::get() const [620] std::_Tuple_impl<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::_M_head(std::_Tuple_impl<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&) [23] std::tuple_element<0ul, std::tuple<SampleStruct*, std::default_delete<SampleStruct> > >::type& std::get<0ul, SampleStruct*, std::default_delete<SampleStruct> >(std::tuple<SampleStruct*, std::default_delete<SampleStruct> >&)
 [697] std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::operator*() const [59] std::_Tuple_impl<0ul, int const&>::_M_head(std::_Tuple_impl<0ul, int const&>&) [657] std::tuple_element<0ul, std::tuple<A*, std::default_delete<A> > >::type const& std::get<0ul, A*, std::default_delete<A> >(std::tuple<A*, std::default_delete<A> > const&)
 [698] std::unique_ptr<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::operator->() const [50] std::_Tuple_impl<0ul, int const&>::_Tuple_impl(std::_Tuple_impl<0ul, int const&>&&) [286] std::tuple_element<0ul, std::tuple<A*, std::default_delete<A> > >::type& std::get<0ul, A*, std::default_delete<A> >(std::tuple<A*, std::default_delete<A> >&)
 [642] std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::get() const [93] std::_Tuple_impl<0ul, int const&>::_Tuple_impl(int const&) [209] std::tuple_element<0ul, std::tuple<B*, std::default_delete<B> > >::type& std::get<0ul, B*, std::default_delete<B> >(std::tuple<B*, std::default_delete<B> >&)
 [661] std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::operator*() const [78] std::_Tuple_impl<1ul, std::default_delete<SampleStruct> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<SampleStruct> >&) [183] std::tuple_element<0ul, std::tuple<C*, std::default_delete<C> > >::type& std::get<0ul, C*, std::default_delete<C> >(std::tuple<C*, std::default_delete<C> >&)
 [730] std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::operator->() const [84] std::_Tuple_impl<1ul, std::default_delete<SampleStruct> >::_Tuple_impl() [425] std::tuple_element<0ul, std::tuple<AIf*, std::default_delete<AIf> > >::type const& std::get<0ul, AIf*, std::default_delete<AIf> >(std::tuple<AIf*, std::default_delete<AIf> > const&)
 [662] std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::get() const [600] std::_Tuple_impl<1ul, std::default_delete<A> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<A> >&) [191] std::tuple_element<0ul, std::tuple<AIf*, std::default_delete<AIf> > >::type& std::get<0ul, AIf*, std::default_delete<AIf> >(std::tuple<AIf*, std::default_delete<AIf> >&)
 [663] std::unique_ptr<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::operator->() const [601] std::_Tuple_impl<1ul, std::default_delete<A> >::_Tuple_impl() [612] std::tuple_element<0ul, std::tuple<BIf*, std::default_delete<BIf> > >::type const& std::get<0ul, BIf*, std::default_delete<BIf> >(std::tuple<BIf*, std::default_delete<BIf> > const&)
 [643] std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::get() const [305] std::_Tuple_impl<1ul, std::default_delete<B> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<B> >&) [150] std::tuple_element<0ul, std::tuple<BIf*, std::default_delete<BIf> > >::type& std::get<0ul, BIf*, std::default_delete<BIf> >(std::tuple<BIf*, std::default_delete<BIf> >&)
 [644] std::unique_ptr<AEntity::Impl, std::default_delete<AEntity::Impl> >::operator->() const [602] std::_Tuple_impl<1ul, std::default_delete<B> >::_Tuple_impl() [253] std::tuple_element<0ul, std::tuple<CIf*, std::default_delete<CIf> > >::type const& std::get<0ul, CIf*, std::default_delete<CIf> >(std::tuple<CIf*, std::default_delete<CIf> > const&)
  [24] std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_valptr() const [306] std::_Tuple_impl<1ul, std::default_delete<C> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<C> >&) [159] std::tuple_element<0ul, std::tuple<CIf*, std::default_delete<CIf> > >::type& std::get<0ul, CIf*, std::default_delete<CIf> >(std::tuple<CIf*, std::default_delete<CIf> >&)
 [375] std::default_delete<A>::operator()(A*) const [603] std::_Tuple_impl<1ul, std::default_delete<C> >::_Tuple_impl() [672] std::tuple_element<0ul, std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > >::type const& std::get<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >(std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > const&)
 [578] std::default_delete<B>::operator()(B*) const [289] std::_Tuple_impl<1ul, std::default_delete<AIf> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<AIf> >&) [225] std::tuple_element<0ul, std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > > >::type& std::get<0ul, Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >(std::tuple<Target<SampleStruct, CIf>*, std::default_delete<Target<SampleStruct, CIf> > >&)
 [376] std::default_delete<C>::operator()(C*) const [278] std::_Tuple_impl<1ul, std::default_delete<AIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<AIf> >&&) [658] std::tuple_element<0ul, std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > >::type const& std::get<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > const&)
  [73] std::default_delete<AIf>::operator()(AIf*) const [294] std::_Tuple_impl<1ul, std::default_delete<AIf> >::_Tuple_impl() [145] std::tuple_element<0ul, std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > >::type& std::get<0ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&)
  [86] std::default_delete<BIf>::operator()(BIf*) const [412] std::_Tuple_impl<1ul, std::default_delete<BIf> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<BIf> >&) [673] std::tuple_element<0ul, std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > >::type const& std::get<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >(std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > const&)
  [72] std::default_delete<CIf>::operator()(CIf*) const [315] std::_Tuple_impl<1ul, std::default_delete<BIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<BIf> >&&) [234] std::tuple_element<0ul, std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> > >::type& std::get<0ul, TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >(std::tuple<TargetEntity<SampleStruct, CIf>::Impl*, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >&)
 [572] std::default_delete<TargetIf<SampleStruct, CIf> >::operator()(TargetIf<SampleStruct, CIf>*) const [389] std::_Tuple_impl<1ul, std::default_delete<BIf> >::_Tuple_impl() [659] std::tuple_element<0ul, std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> > >::type const& std::get<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> > const&)
 [148] std::default_delete<AEntity::Impl>::operator()(AEntity::Impl*) const [337] std::_Tuple_impl<1ul, std::default_delete<CIf> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<CIf> >&) [134] std::tuple_element<0ul, std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> > >::type& std::get<0ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> >&)
 [136] std::default_delete<BEntity::Impl>::operator()(BEntity::Impl*) const [246] std::_Tuple_impl<1ul, std::default_delete<CIf> >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<CIf> >&&) [233] std::tuple_element<0ul, std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> > >::type& std::get<0ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >(std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> >&)
 [101] std::default_delete<CEntity::Impl>::operator()(CEntity::Impl*) const [604] std::_Tuple_impl<1ul, std::default_delete<CIf> >::_Tuple_impl() [140] std::tuple_element<0ul, std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> > >::type& std::get<0ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >(std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> >&)
 [625] std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*) const [605] std::_Tuple_impl<1ul, std::default_delete<Target<SampleStruct, CIf> > >::_Tuple_impl() [691] std::tuple_element<0ul, std::tuple<std::string*, std::default_delete<std::string> > >::type& std::get<0ul, std::string*, std::default_delete<std::string> >(std::tuple<std::string*, std::default_delete<std::string> >&)
 [645] std::__uniq_ptr_impl<A, std::default_delete<A> >::_M_ptr() const [287] std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_head(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&) [623] std::tuple_element<0ul, std::tuple<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > > >::type& std::get<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >(std::tuple<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&)
 [415] std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::_M_ptr() const [243] std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&&) [57] std::tuple_element<0ul, std::tuple<int const&> >::type& std::get<0ul, int const&>(std::tuple<int const&>&)
 [377] std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::_M_ptr() const [402] std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >::_Tuple_impl() [43] std::tuple_element<1ul, std::tuple<SampleStruct*, std::default_delete<SampleStruct> > >::type& std::get<1ul, SampleStruct*, std::default_delete<SampleStruct> >(std::tuple<SampleStruct*, std::default_delete<SampleStruct> >&)
 [218] std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::_M_ptr() const [307] std::_Tuple_impl<1ul, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_Tuple_impl() [298] std::tuple_element<1ul, std::tuple<A*, std::default_delete<A> > >::type& std::get<1ul, A*, std::default_delete<A> >(std::tuple<A*, std::default_delete<A> >&)
 [664] std::__uniq_ptr_impl<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::_M_ptr() const [227] std::_Tuple_impl<1ul, std::default_delete<AEntity::Impl> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<AEntity::Impl> >&) [271] std::tuple_element<1ul, std::tuple<B*, std::default_delete<B> > >::type& std::get<1ul, B*, std::default_delete<B> >(std::tuple<B*, std::default_delete<B> >&)
 [646] std::__uniq_ptr_impl<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >::_M_ptr() const [606] std::_Tuple_impl<1ul, std::default_delete<AEntity::Impl> >::_Tuple_impl() [254] std::tuple_element<1ul, std::tuple<C*, std::default_delete<C> > >::type& std::get<1ul, C*, std::default_delete<C> >(std::tuple<C*, std::default_delete<C> >&)
 [665] std::__uniq_ptr_impl<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl> >::_M_ptr() const [607] std::_Tuple_impl<1ul, std::default_delete<BEntity::Impl> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<BEntity::Impl> >&) [311] std::tuple_element<1ul, std::tuple<AIf*, std::default_delete<AIf> > >::type& std::get<1ul, AIf*, std::default_delete<AIf> >(std::tuple<AIf*, std::default_delete<AIf> >&)
 [647] std::__uniq_ptr_impl<AEntity::Impl, std::default_delete<AEntity::Impl> >::_M_ptr() const [352] std::_Tuple_impl<1ul, std::default_delete<BEntity::Impl> >::_Tuple_impl() [361] std::tuple_element<1ul, std::tuple<BIf*, std::default_delete<BIf> > >::type& std::get<1ul, BIf*, std::default_delete<BIf> >(std::tuple<BIf*, std::default_delete<BIf> >&)
  [62] std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::operator*() const [390] std::_Tuple_impl<1ul, std::default_delete<CEntity::Impl> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<CEntity::Impl> >&) [405] std::tuple_element<1ul, std::tuple<CIf*, std::default_delete<CIf> > >::type& std::get<1ul, CIf*, std::default_delete<CIf> >(std::tuple<CIf*, std::default_delete<CIf> >&)
  [90] std::_Rb_tree_const_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_const_cast() const [327] std::_Tuple_impl<1ul, std::default_delete<CEntity::Impl> >::_Tuple_impl() [262] std::tuple_element<1ul, std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > > >::type& std::get<1ul, TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&)
  [36] std::less<int>::operator()(int const&, int const&) const [629] std::_Tuple_impl<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >::_M_head(std::_Tuple_impl<1ul, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&) [212] std::tuple_element<1ul, std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> > >::type& std::get<1ul, AEntity::Impl*, std::default_delete<AEntity::Impl> >(std::tuple<AEntity::Impl*, std::default_delete<AEntity::Impl> >&)
 [146] std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::size() const [55] std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >::_M_valptr() [299] std::tuple_element<1ul, std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> > >::type& std::get<1ul, BEntity::Impl*, std::default_delete<BEntity::Impl> >(std::tuple<BEntity::Impl*, std::default_delete<BEntity::Impl> >&)
 [126] std::_Rb_tree<int, std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > >, std::_Select1st<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >, std::less<int>, std::allocator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::_M_mbegin() const [369] std::_Rb_tree_header::_M_reset() [312] std::tuple_element<1ul, std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> > >::type& std::get<1ul, CEntity::Impl*, std::default_delete<CEntity::Impl> >(std::tuple<CEntity::Impl*, std::default_delete<CEntity::Impl> >&)
 [378] std::allocator<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > >::allocator() [338] std::_Rb_tree_header::_Rb_tree_header() [632] std::tuple_element<1ul, std::tuple<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > > >::type& std::get<1ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >(std::tuple<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, std::default_delete<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > > >&)
  [56] std::_Head_base<0ul, SampleStruct*, false>::_M_head(std::_Head_base<0ul, SampleStruct*, false>&) [34] std::__uniq_ptr_data<SampleStruct, std::default_delete<SampleStruct>, true, true>::__uniq_ptr_impl(SampleStruct*) [319] std::remove_reference<A*&>::type&& std::move<A*&>(A*&)
 [177] std::_Head_base<0ul, SampleStruct*, false>::_Head_base() [49] std::__uniq_ptr_data<SampleStruct, std::default_delete<SampleStruct>, true, true>::__uniq_ptr_impl() [365] std::remove_reference<B*&>::type&& std::move<B*&>(B*&)
 [648] std::_Head_base<0ul, A*, false>::_M_head(std::_Head_base<0ul, A*, false> const&) [18] std::__uniq_ptr_data<SampleStruct, std::default_delete<SampleStruct>, true, true>::operator=(std::__uniq_ptr_data<SampleStruct, std::default_delete<SampleStruct>, true, true>&&) [366] std::remove_reference<C*&>::type&& std::move<C*&>(C*&)
 [407] std::_Head_base<0ul, A*, false>::_M_head(std::_Head_base<0ul, A*, false>&) [391] std::__uniq_ptr_data<A, std::default_delete<A>, true, true>::__uniq_ptr_impl() [613] std::remove_reference<AIf*&>::type&& std::move<AIf*&>(AIf*&)
 [579] std::_Head_base<0ul, A*, false>::_Head_base() [392] std::__uniq_ptr_data<B, std::default_delete<B>, true, true>::__uniq_ptr_impl() [356] std::remove_reference<BIf*&>::type&& std::move<BIf*&>(BIf*&)
 [317] std::_Head_base<0ul, B*, false>::_M_head(std::_Head_base<0ul, B*, false>&) [295] std::__uniq_ptr_data<C, std::default_delete<C>, true, true>::__uniq_ptr_impl() [396] std::remove_reference<CIf*&>::type&& std::move<CIf*&>(CIf*&)
 [580] std::_Head_base<0ul, B*, false>::_Head_base() [109] std::__uniq_ptr_data<AIf, std::default_delete<AIf>, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<AIf, std::default_delete<AIf>, true, true>&&) [357] std::remove_reference<Target<SampleStruct, CIf>*&>::type&& std::move<Target<SampleStruct, CIf>*&>(Target<SampleStruct, CIf>*&)
 [408] std::_Head_base<0ul, C*, false>::_M_head(std::_Head_base<0ul, C*, false>&) [163] std::__uniq_ptr_data<AIf, std::default_delete<AIf>, true, true>::__uniq_ptr_impl(AIf*) [370] std::remove_reference<TargetIf<SampleStruct, CIf>*&>::type&& std::move<TargetIf<SampleStruct, CIf>*&>(TargetIf<SampleStruct, CIf>*&)
 [342] std::_Head_base<0ul, C*, false>::_Head_base() [149] std::__uniq_ptr_data<BIf, std::default_delete<BIf>, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<BIf, std::default_delete<BIf>, true, true>&&) [397] std::remove_reference<TargetEntity<SampleStruct, CIf>::Impl*&>::type&& std::move<TargetEntity<SampleStruct, CIf>::Impl*&>(TargetEntity<SampleStruct, CIf>::Impl*&)
 [416] std::_Head_base<0ul, AIf*, false>::_M_head(std::_Head_base<0ul, AIf*, false> const&) [166] std::__uniq_ptr_data<BIf, std::default_delete<BIf>, true, true>::__uniq_ptr_impl(BIf*) [320] std::remove_reference<AEntity::Impl*&>::type&& std::move<AEntity::Impl*&>(AEntity::Impl*&)
 [300] std::_Head_base<0ul, AIf*, false>::_M_head(std::_Head_base<0ul, AIf*, false>&) [121] std::__uniq_ptr_data<CIf, std::default_delete<CIf>, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<CIf, std::default_delete<CIf>, true, true>&&) [367] std::remove_reference<BEntity::Impl*&>::type&& std::move<BEntity::Impl*&>(BEntity::Impl*&)
 [417] std::_Head_base<0ul, AIf*, false>::_Head_base() [214] std::__uniq_ptr_data<CIf, std::default_delete<CIf>, true, true>::__uniq_ptr_impl(CIf*) [265] std::remove_reference<CEntity::Impl*&>::type&& std::move<CEntity::Impl*&>(CEntity::Impl*&)
 [303] std::_Head_base<0ul, AIf*, false>::_Head_base<AIf*>(AIf*&&) [228] std::__uniq_ptr_data<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> >, true, true>::__uniq_ptr_impl() [633] std::remove_reference<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*&>::type&& std::move<std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*&>(std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*&)
 [581] std::_Head_base<0ul, BIf*, false>::_M_head(std::_Head_base<0ul, BIf*, false> const&) [111] std::__uniq_ptr_data<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> >, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> >, true, true>&&) [224] std::remove_reference<std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >&>::type&& std::move<std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >&>(std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> >&)
 [363] std::_Head_base<0ul, BIf*, false>::_M_head(std::_Head_base<0ul, BIf*, false>&) [180] std::__uniq_ptr_data<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> >, true, true>::__uniq_ptr_impl(TargetIf<SampleStruct, CIf>*) [272] std::remove_reference<std::unique_ptr<AIf, std::default_delete<AIf> >&>::type&& std::move<std::unique_ptr<AIf, std::default_delete<AIf> >&>(std::unique_ptr<AIf, std::default_delete<AIf> >&)
 [343] std::_Head_base<0ul, BIf*, false>::_Head_base() [219] std::__uniq_ptr_data<TargetEntity<SampleStruct, CIf>::Impl, std::default_delete<TargetEntity<SampleStruct, CIf>::Impl>, true, true>::__uniq_ptr_impl() [614] std::remove_reference<std::unique_ptr<BIf, std::default_delete<BIf> >&>::type&& std::move<std::unique_ptr<BIf, std::default_delete<BIf> >&>(std::unique_ptr<BIf, std::default_delete<BIf> >&)
 [379] std::_Head_base<0ul, BIf*, false>::_Head_base<BIf*>(BIf*&&) [239] std::__uniq_ptr_data<AEntity::Impl, std::default_delete<AEntity::Impl>, true, true>::__uniq_ptr_impl() [615] std::remove_reference<std::unique_ptr<CIf, std::default_delete<CIf> >&>::type&& std::move<std::unique_ptr<CIf, std::default_delete<CIf> >&>(std::unique_ptr<CIf, std::default_delete<CIf> >&)
 [324] std::_Head_base<0ul, CIf*, false>::_M_head(std::_Head_base<0ul, CIf*, false> const&) [190] std::__uniq_ptr_data<BEntity::Impl, std::default_delete<BEntity::Impl>, true, true>::__uniq_ptr_impl() [328] std::remove_reference<std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&>::type&& std::move<std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&>(std::unique_ptr<TargetIf<SampleStruct, CIf>, std::default_delete<TargetIf<SampleStruct, CIf> > >&)
 [316] std::_Head_base<0ul, CIf*, false>::_M_head(std::_Head_base<0ul, CIf*, false>&) [260] std::__uniq_ptr_data<CEntity::Impl, std::default_delete<CEntity::Impl>, true, true>::__uniq_ptr_impl() [398] std::remove_reference<std::_Tuple_impl<1ul, std::default_delete<AIf> >&>::type&& std::move<std::_Tuple_impl<1ul, std::default_delete<AIf> >&>(std::_Tuple_impl<1ul, std::default_delete<AIf> >&)
 [582] std::_Head_base<0ul, CIf*, false>::_Head_base() [40] std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::_M_deleter() [399] std::remove_reference<std::_Tuple_impl<1ul, std::default_delete<BIf> >&>::type&& std::move<std::_Tuple_impl<1ul, std::default_delete<BIf> >&>(std::_Tuple_impl<1ul, std::default_delete<BIf> >&)
 [344] std::_Head_base<0ul, CIf*, false>::_Head_base<CIf*>(CIf*&&) [32] std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::reset(SampleStruct*) [616] std::remove_reference<std::_Tuple_impl<1ul, std::default_delete<CIf> >&>::type&& std::move<std::_Tuple_impl<1ul, std::default_delete<CIf> >&>(std::_Tuple_impl<1ul, std::default_delete<CIf> >&)
 [666] std::_Head_base<0ul, Target<SampleStruct, CIf>*, false>::_M_head(std::_Head_base<0ul, Target<SampleStruct, CIf>*, false> const&) [22] std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::_M_ptr() [329] std::remove_reference<std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&>::type&& std::move<std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&>(std::_Tuple_impl<1ul, std::default_delete<TargetIf<SampleStruct, CIf> > >&)
 [409] std::_Head_base<0ul, Target<SampleStruct, CIf>*, false>::_M_head(std::_Head_base<0ul, Target<SampleStruct, CIf>*, false>&) [33] std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::release() [400] std::remove_reference<std::tuple<AIf*, std::default_delete<AIf> >&>::type&& std::move<std::tuple<AIf*, std::default_delete<AIf> >&>(std::tuple<AIf*, std::default_delete<AIf> >&)
 [345] std::_Head_base<0ul, Target<SampleStruct, CIf>*, false>::_Head_base() [35] std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::__uniq_ptr_impl(SampleStruct*) [401] std::remove_reference<std::tuple<BIf*, std::default_delete<BIf> >&>::type&& std::move<std::tuple<BIf*, std::default_delete<BIf> >&>(std::tuple<BIf*, std::default_delete<BIf> >&)
 [649] std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>::_M_head(std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false> const&) [51] std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::__uniq_ptr_impl() [617] std::remove_reference<std::tuple<CIf*, std::default_delete<CIf> >&>::type&& std::move<std::tuple<CIf*, std::default_delete<CIf> >&>(std::tuple<CIf*, std::default_delete<CIf> >&)
 [362] std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>::_M_head(std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>&) [20] std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >::operator=(std::__uniq_ptr_impl<SampleStruct, std::default_delete<SampleStruct> >&&) [426] std::remove_reference<std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&>::type&& std::move<std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&>(std::tuple<TargetIf<SampleStruct, CIf>*, std::default_delete<TargetIf<SampleStruct, CIf> > >&)
 [427] std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>::_Head_base() [268] std::__uniq_ptr_impl<A, std::default_delete<A> >::_M_deleter() [368] AIf*&& std::forward<AIf*>(std::remove_reference<AIf*>::type&)
 [380] std::_Head_base<0ul, TargetIf<SampleStruct, CIf>*, false>::_Head_base<TargetIf<SampleStruct, CIf>*>(TargetIf<SampleStruct, CIf>*&&) [274] std::__uniq_ptr_impl<A, std::default_delete<A> >::reset(A*) [566] BIf*&& std::forward<BIf*>(std::remove_reference<BIf*>::type&)
 [667] std::_Head_base<0ul, TargetEntity<SampleStruct, CIf>::Impl*, false>::_M_head(std::_Head_base<0ul, TargetEntity<SampleStruct, CIf>::Impl*, false> const&) [264] std::__uniq_ptr_impl<A, std::default_delete<A> >::_M_ptr() [567] CIf*&& std::forward<CIf*>(std::remove_reference<CIf*>::type&)
 [410] std::_Head_base<0ul, TargetEntity<SampleStruct, CIf>::Impl*, false>::_M_head(std::_Head_base<0ul, TargetEntity<SampleStruct, CIf>::Impl*, false>&) [422] std::__uniq_ptr_impl<A, std::default_delete<A> >::__uniq_ptr_impl() [568] TargetIf<SampleStruct, CIf>*&& std::forward<TargetIf<SampleStruct, CIf>*>(std::remove_reference<TargetIf<SampleStruct, CIf>*>::type&)
 [346] std::_Head_base<0ul, TargetEntity<SampleStruct, CIf>::Impl*, false>::_Head_base() [251] std::__uniq_ptr_impl<B, std::default_delete<B> >::_M_deleter() [88] std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&)
 [650] std::_Head_base<0ul, AEntity::Impl*, false>::_M_head(std::_Head_base<0ul, AEntity::Impl*, false> const&) [204] std::__uniq_ptr_impl<B, std::default_delete<B> >::reset(B*) [122] int const& std::forward<int const&>(std::remove_reference<int const&>::type&)
 [283] std::_Head_base<0ul, AEntity::Impl*, false>::_M_head(std::_Head_base<0ul, AEntity::Impl*, false>&) [169] std::__uniq_ptr_impl<B, std::default_delete<B> >::_M_ptr() [618] std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*& std::forward<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*&>(std::remove_reference<std::_Rb_tree_node<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > >*&>::type&)
 [347] std::_Head_base<0ul, AEntity::Impl*, false>::_Head_base() [608] std::__uniq_ptr_impl<B, std::default_delete<B> >::__uniq_ptr_impl() [186] std::_Rb_tree_node_base*& std::forward<std::_Rb_tree_node_base*&>(std::remove_reference<std::_Rb_tree_node_base*&>::type&)
 [565] std::_Head_base<0ul, BEntity::Impl*, false>::_M_head(std::_Head_base<0ul, BEntity::Impl*, false>&) [195] std::__uniq_ptr_impl<C, std::default_delete<C> >::_M_deleter() [162] std::default_delete<SampleStruct>&& std::forward<std::default_delete<SampleStruct> >(std::remove_reference<std::default_delete<SampleStruct> >::type&)
 [381] std::_Head_base<0ul, BEntity::Impl*, false>::_Head_base() [197] std::__uniq_ptr_impl<C, std::default_delete<C> >::reset(C*) [569] std::default_delete<AIf>&& std::forward<std::default_delete<AIf> >(std::remove_reference<std::default_delete<AIf> >::type&)
 [318] std::_Head_base<0ul, CEntity::Impl*, false>::_M_head(std::_Head_base<0ul, CEntity::Impl*, false>&) [170] std::__uniq_ptr_impl<C, std::default_delete<C> >::_M_ptr() [321] std::default_delete<BIf>&& std::forward<std::default_delete<BIf> >(std::remove_reference<std::default_delete<BIf> >::type&)
 [382] std::_Head_base<0ul, CEntity::Impl*, false>::_Head_base() [308] std::__uniq_ptr_impl<C, std::default_delete<C> >::__uniq_ptr_impl() [570] std::default_delete<CIf>&& std::forward<std::default_delete<CIf> >(std::remove_reference<std::default_delete<CIf> >::type&)
 [686] std::_Head_base<0ul, std::string*, false>::_M_head(std::_Head_base<0ul, std::string*, false>&) [309] std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::_M_deleter() [322] std::default_delete<TargetIf<SampleStruct, CIf> >&& std::forward<std::default_delete<TargetIf<SampleStruct, CIf> > >(std::remove_reference<std::default_delete<TargetIf<SampleStruct, CIf> > >::type&)
 [619] std::_Head_base<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, false>::_M_head(std::_Head_base<0ul, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*, false>&) [127] std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::_M_ptr() [69] std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&)
  [99] std::_Head_base<0ul, int const&, false>::_M_head(std::_Head_base<0ul, int const&, false>&) [110] std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >&&) [68] std::tuple<int const&>&& std::forward<std::tuple<int const&> >(std::remove_reference<std::tuple<int const&> >::type&)
  [96] std::_Head_base<0ul, int const&, false>::_Head_base(int const&) [164] std::__uniq_ptr_impl<AIf, std::default_delete<AIf> >::__uniq_ptr_impl(AIf*) [123] std::operator==(std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&, std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&)
 [178] std::_Head_base<1ul, std::default_delete<SampleStruct>, true>::_M_head(std::_Head_base<1ul, std::default_delete<SampleStruct>, true>&) [359] std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::_M_deleter() [731] std::operator!=(std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&, std::_Rb_tree_iterator<std::pair<int const, std::unique_ptr<SampleStruct, std::default_delete<SampleStruct> > > > const&)
 [130] std::_Head_base<1ul, std::default_delete<SampleStruct>, true>::_Head_base() [129] std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::_M_ptr() [331] operator delete(void*)
 [583] std::_Head_base<1ul, std::default_delete<A>, true>::_M_head(std::_Head_base<1ul, std::default_delete<A>, true>&) [160] std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >&&) [98] operator new(unsigned long)
 [584] std::_Head_base<1ul, std::default_delete<A>, true>::_Head_base() [167] std::__uniq_ptr_impl<BIf, std::default_delete<BIf> >::__uniq_ptr_impl(BIf*) [102] operator new(unsigned long, void*)
 [348] std::_Head_base<1ul, std::default_delete<B>, true>::_M_head(std::_Head_base<1ul, std::default_delete<B>, true>&) [403] std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::_M_deleter() [2] __fentry__
 [585] std::_Head_base<1ul, std::default_delete<B>, true>::_Head_base() [143] std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::_M_ptr() [255] __wrap__Znwm
 [418] std::_Head_base<1ul, std::default_delete<C>, true>::_M_head(std::_Head_base<1ul, std::default_delete<C>, true>&) [128] std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::__uniq_ptr_impl(std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >&&) [1] _mcount_private
 [586] std::_Head_base<1ul, std::default_delete<C>, true>::_Head_base() [232] std::__uniq_ptr_impl<CIf, std::default_delete<CIf> >::__uniq_ptr_impl(CIf*) [443] main
 [288] std::_Head_base<1ul, std::default_delete<AIf>, true>::_M_head(std::_Head_base<1ul, std::default_delete<AIf>, true>&) [173] std::__uniq_ptr_impl<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::reset(Target<SampleStruct, CIf>*)
 [587] std::_Head_base<1ul, std::default_delete<AIf>, true>::_Head_base() [210] std::__uniq_ptr_impl<Target<SampleStruct, CIf>, std::default_delete<Target<SampleStruct, CIf> > >::_M_ptr()
